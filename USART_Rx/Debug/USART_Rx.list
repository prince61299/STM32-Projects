
USART_Rx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001540  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b8  080016e0  080016e0  000116e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001798  08001798  00020088  2**0
                  CONTENTS
  4 .ARM          00000000  08001798  08001798  00020088  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001798  08001798  00020088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001798  08001798  00011798  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800179c  0800179c  0001179c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000088  20000000  080017a0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000088  08001828  00020088  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000b8  08001828  000200b8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020088  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a66  00000000  00000000  000200b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000390  00000000  00000000  00020b1e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000130  00000000  00000000  00020eb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  00020fe0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002880  00000000  00000000  000210d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011c3  00000000  00000000  00023958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009337  00000000  00000000  00024b1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002de52  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c04  00000000  00000000  0002dea4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000088 	.word	0x20000088
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080016c8 	.word	0x080016c8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000008c 	.word	0x2000008c
 80001dc:	080016c8 	.word	0x080016c8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <Usart_Init>:

void Usart_Init(void);
void Usart_Write(int ch);
char Usart_Read(void);

void Usart_Init(void){
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
//	-> Enable the clock access for GPIOA
	*pAB1ENR |= (1U<<0); // U for unsigned
 8000284:	4b50      	ldr	r3, [pc, #320]	; (80003c8 <Usart_Init+0x148>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681a      	ldr	r2, [r3, #0]
 800028a:	4b4f      	ldr	r3, [pc, #316]	; (80003c8 <Usart_Init+0x148>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f042 0201 	orr.w	r2, r2, #1
 8000292:	601a      	str	r2, [r3, #0]

//	-> Enable the clock access for USART2
	*pAPB1ENR |= (1U<<17);
 8000294:	4b4d      	ldr	r3, [pc, #308]	; (80003cc <Usart_Init+0x14c>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	681a      	ldr	r2, [r3, #0]
 800029a:	4b4c      	ldr	r3, [pc, #304]	; (80003cc <Usart_Init+0x14c>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80002a2:	601a      	str	r2, [r3, #0]

//	Configure GPIOA Mode Register to ALT Function
	// SET PA2 as ALT Function
	*pGPIOAMODER &= ~(1U<<4); //RESET
 80002a4:	4b4a      	ldr	r3, [pc, #296]	; (80003d0 <Usart_Init+0x150>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	681a      	ldr	r2, [r3, #0]
 80002aa:	4b49      	ldr	r3, [pc, #292]	; (80003d0 <Usart_Init+0x150>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f022 0210 	bic.w	r2, r2, #16
 80002b2:	601a      	str	r2, [r3, #0]
	*pGPIOAMODER |= (1U<<5); //SET
 80002b4:	4b46      	ldr	r3, [pc, #280]	; (80003d0 <Usart_Init+0x150>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	681a      	ldr	r2, [r3, #0]
 80002ba:	4b45      	ldr	r3, [pc, #276]	; (80003d0 <Usart_Init+0x150>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f042 0220 	orr.w	r2, r2, #32
 80002c2:	601a      	str	r2, [r3, #0]

// SET PA3 as ALT Function
	*pGPIOAMODER &= ~(1U<<6); //RESET
 80002c4:	4b42      	ldr	r3, [pc, #264]	; (80003d0 <Usart_Init+0x150>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	681a      	ldr	r2, [r3, #0]
 80002ca:	4b41      	ldr	r3, [pc, #260]	; (80003d0 <Usart_Init+0x150>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80002d2:	601a      	str	r2, [r3, #0]
	*pGPIOAMODER |= (1U<<7); //SET
 80002d4:	4b3e      	ldr	r3, [pc, #248]	; (80003d0 <Usart_Init+0x150>)
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	681a      	ldr	r2, [r3, #0]
 80002da:	4b3d      	ldr	r3, [pc, #244]	; (80003d0 <Usart_Init+0x150>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80002e2:	601a      	str	r2, [r3, #0]

	//Configure the GPIO to output function
	// SET PA5 as Output
	*pGPIOAMODER |= (1U<<10); //SET
 80002e4:	4b3a      	ldr	r3, [pc, #232]	; (80003d0 <Usart_Init+0x150>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	681a      	ldr	r2, [r3, #0]
 80002ea:	4b39      	ldr	r3, [pc, #228]	; (80003d0 <Usart_Init+0x150>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80002f2:	601a      	str	r2, [r3, #0]
	*pGPIOAMODER &= ~(1U<<11); //RESET
 80002f4:	4b36      	ldr	r3, [pc, #216]	; (80003d0 <Usart_Init+0x150>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	681a      	ldr	r2, [r3, #0]
 80002fa:	4b35      	ldr	r3, [pc, #212]	; (80003d0 <Usart_Init+0x150>)
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8000302:	601a      	str	r2, [r3, #0]

	//Configure the ALT Function to AFRL for PA2 and PA3
		*pGPIOAAFRL |= (1U<<8); //SET
 8000304:	4b33      	ldr	r3, [pc, #204]	; (80003d4 <Usart_Init+0x154>)
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	681a      	ldr	r2, [r3, #0]
 800030a:	4b32      	ldr	r3, [pc, #200]	; (80003d4 <Usart_Init+0x154>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000312:	601a      	str	r2, [r3, #0]
		*pGPIOAAFRL |= (1U<<9); //SET
 8000314:	4b2f      	ldr	r3, [pc, #188]	; (80003d4 <Usart_Init+0x154>)
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	681a      	ldr	r2, [r3, #0]
 800031a:	4b2e      	ldr	r3, [pc, #184]	; (80003d4 <Usart_Init+0x154>)
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000322:	601a      	str	r2, [r3, #0]
		*pGPIOAAFRL |= (1U<<10); //SET
 8000324:	4b2b      	ldr	r3, [pc, #172]	; (80003d4 <Usart_Init+0x154>)
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	681a      	ldr	r2, [r3, #0]
 800032a:	4b2a      	ldr	r3, [pc, #168]	; (80003d4 <Usart_Init+0x154>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000332:	601a      	str	r2, [r3, #0]
		*pGPIOAAFRL &= ~(1U<<11); //RESET
 8000334:	4b27      	ldr	r3, [pc, #156]	; (80003d4 <Usart_Init+0x154>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	681a      	ldr	r2, [r3, #0]
 800033a:	4b26      	ldr	r3, [pc, #152]	; (80003d4 <Usart_Init+0x154>)
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8000342:	601a      	str	r2, [r3, #0]

		*pGPIOAAFRL |= (1U<<12); //SET
 8000344:	4b23      	ldr	r3, [pc, #140]	; (80003d4 <Usart_Init+0x154>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	681a      	ldr	r2, [r3, #0]
 800034a:	4b22      	ldr	r3, [pc, #136]	; (80003d4 <Usart_Init+0x154>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000352:	601a      	str	r2, [r3, #0]
		*pGPIOAAFRL |= (1U<<13); //SET
 8000354:	4b1f      	ldr	r3, [pc, #124]	; (80003d4 <Usart_Init+0x154>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	681a      	ldr	r2, [r3, #0]
 800035a:	4b1e      	ldr	r3, [pc, #120]	; (80003d4 <Usart_Init+0x154>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8000362:	601a      	str	r2, [r3, #0]
		*pGPIOAAFRL |= (1U<<14); //SET
 8000364:	4b1b      	ldr	r3, [pc, #108]	; (80003d4 <Usart_Init+0x154>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	681a      	ldr	r2, [r3, #0]
 800036a:	4b1a      	ldr	r3, [pc, #104]	; (80003d4 <Usart_Init+0x154>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000372:	601a      	str	r2, [r3, #0]
		*pGPIOAAFRL &= ~(1U<<15); //RESE
 8000374:	4b17      	ldr	r3, [pc, #92]	; (80003d4 <Usart_Init+0x154>)
 8000376:	681b      	ldr	r3, [r3, #0]
 8000378:	681a      	ldr	r2, [r3, #0]
 800037a:	4b16      	ldr	r3, [pc, #88]	; (80003d4 <Usart_Init+0x154>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8000382:	601a      	str	r2, [r3, #0]

	//Configure the BRR to 9600
	*pUSART2_BRR = 0X0683; //Load the value
 8000384:	4b14      	ldr	r3, [pc, #80]	; (80003d8 <Usart_Init+0x158>)
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	f240 6283 	movw	r2, #1667	; 0x683
 800038c:	601a      	str	r2, [r3, #0]


	// Configure the USART for Tx and Rx
	*pUSART2_CR1 |= 0X0008;
 800038e:	4b13      	ldr	r3, [pc, #76]	; (80003dc <Usart_Init+0x15c>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	681a      	ldr	r2, [r3, #0]
 8000394:	4b11      	ldr	r3, [pc, #68]	; (80003dc <Usart_Init+0x15c>)
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	f042 0208 	orr.w	r2, r2, #8
 800039c:	601a      	str	r2, [r3, #0]
	*pUSART2_CR1 |= 0X0004;
 800039e:	4b0f      	ldr	r3, [pc, #60]	; (80003dc <Usart_Init+0x15c>)
 80003a0:	681b      	ldr	r3, [r3, #0]
 80003a2:	681a      	ldr	r2, [r3, #0]
 80003a4:	4b0d      	ldr	r3, [pc, #52]	; (80003dc <Usart_Init+0x15c>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	f042 0204 	orr.w	r2, r2, #4
 80003ac:	601a      	str	r2, [r3, #0]

	*pUSART2_CR1 |= 0X2000; // to SET the USART Enable
 80003ae:	4b0b      	ldr	r3, [pc, #44]	; (80003dc <Usart_Init+0x15c>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	681a      	ldr	r2, [r3, #0]
 80003b4:	4b09      	ldr	r3, [pc, #36]	; (80003dc <Usart_Init+0x15c>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80003bc:	601a      	str	r2, [r3, #0]
}
 80003be:	bf00      	nop
 80003c0:	46bd      	mov	sp, r7
 80003c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c6:	4770      	bx	lr
 80003c8:	20000000 	.word	0x20000000
 80003cc:	20000004 	.word	0x20000004
 80003d0:	20000008 	.word	0x20000008
 80003d4:	20000010 	.word	0x20000010
 80003d8:	2000001c 	.word	0x2000001c
 80003dc:	20000020 	.word	0x20000020

080003e0 <Usart_Write>:

void Usart_Write(int ch) {
 80003e0:	b480      	push	{r7}
 80003e2:	b083      	sub	sp, #12
 80003e4:	af00      	add	r7, sp, #0
 80003e6:	6078      	str	r0, [r7, #4]
	//make sure that the Transmit data Register is Empty
	while(!(*pUSART2_SR & 0x0080)) {}
 80003e8:	bf00      	nop
 80003ea:	4b09      	ldr	r3, [pc, #36]	; (8000410 <Usart_Write+0x30>)
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003f4:	2b00      	cmp	r3, #0
 80003f6:	d0f8      	beq.n	80003ea <Usart_Write+0xa>
	*pUSART2_DR =(ch&0xff);
 80003f8:	687a      	ldr	r2, [r7, #4]
 80003fa:	4b06      	ldr	r3, [pc, #24]	; (8000414 <Usart_Write+0x34>)
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	b2d2      	uxtb	r2, r2
 8000400:	601a      	str	r2, [r3, #0]
}
 8000402:	bf00      	nop
 8000404:	370c      	adds	r7, #12
 8000406:	46bd      	mov	sp, r7
 8000408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800040c:	4770      	bx	lr
 800040e:	bf00      	nop
 8000410:	20000014 	.word	0x20000014
 8000414:	20000018 	.word	0x20000018

08000418 <Usart_Read>:

char Usart_Read(void) {
 8000418:	b480      	push	{r7}
 800041a:	af00      	add	r7, sp, #0
	while(!(*pUSART2_SR & 0x0020)) {}
 800041c:	bf00      	nop
 800041e:	4b08      	ldr	r3, [pc, #32]	; (8000440 <Usart_Read+0x28>)
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	f003 0320 	and.w	r3, r3, #32
 8000428:	2b00      	cmp	r3, #0
 800042a:	d0f8      	beq.n	800041e <Usart_Read+0x6>
	return *pUSART2_DR;
 800042c:	4b05      	ldr	r3, [pc, #20]	; (8000444 <Usart_Read+0x2c>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	b2db      	uxtb	r3, r3
}
 8000434:	4618      	mov	r0, r3
 8000436:	46bd      	mov	sp, r7
 8000438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800043c:	4770      	bx	lr
 800043e:	bf00      	nop
 8000440:	20000014 	.word	0x20000014
 8000444:	20000018 	.word	0x20000018

08000448 <__io_putchar>:

int __io_putchar(int ch){
 8000448:	b580      	push	{r7, lr}
 800044a:	b082      	sub	sp, #8
 800044c:	af00      	add	r7, sp, #0
 800044e:	6078      	str	r0, [r7, #4]
	Usart_Write(ch);
 8000450:	6878      	ldr	r0, [r7, #4]
 8000452:	f7ff ffc5 	bl	80003e0 <Usart_Write>
	return ch;
 8000456:	687b      	ldr	r3, [r7, #4]

}
 8000458:	4618      	mov	r0, r3
 800045a:	3708      	adds	r7, #8
 800045c:	46bd      	mov	sp, r7
 800045e:	bd80      	pop	{r7, pc}

08000460 <main>:

int main(void)
{
 8000460:	b580      	push	{r7, lr}
 8000462:	b082      	sub	sp, #8
 8000464:	af00      	add	r7, sp, #0
	char ch;
	Usart_Init();
 8000466:	f7ff ff0b 	bl	8000280 <Usart_Init>
	printf("Enter the loop \n");
 800046a:	4812      	ldr	r0, [pc, #72]	; (80004b4 <main+0x54>)
 800046c:	f000 f9ae 	bl	80007cc <puts>

	while(1){
		ch = Usart_Read();
 8000470:	f7ff ffd2 	bl	8000418 <Usart_Read>
 8000474:	4603      	mov	r3, r0
 8000476:	71fb      	strb	r3, [r7, #7]

		if(ch == 'a'){
 8000478:	79fb      	ldrb	r3, [r7, #7]
 800047a:	2b61      	cmp	r3, #97	; 0x61
 800047c:	d108      	bne.n	8000490 <main+0x30>
			*pGPIOAODR |= (1<<5);
 800047e:	4b0e      	ldr	r3, [pc, #56]	; (80004b8 <main+0x58>)
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	681a      	ldr	r2, [r3, #0]
 8000484:	4b0c      	ldr	r3, [pc, #48]	; (80004b8 <main+0x58>)
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	f042 0220 	orr.w	r2, r2, #32
 800048c:	601a      	str	r2, [r3, #0]
 800048e:	e007      	b.n	80004a0 <main+0x40>
		}
		else {
			*pGPIOAODR &= ~(1<<5);
 8000490:	4b09      	ldr	r3, [pc, #36]	; (80004b8 <main+0x58>)
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	681a      	ldr	r2, [r3, #0]
 8000496:	4b08      	ldr	r3, [pc, #32]	; (80004b8 <main+0x58>)
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	f022 0220 	bic.w	r2, r2, #32
 800049e:	601a      	str	r2, [r3, #0]
		}
		printf("Data is %c \n", ch);
 80004a0:	79fb      	ldrb	r3, [r7, #7]
 80004a2:	4619      	mov	r1, r3
 80004a4:	4805      	ldr	r0, [pc, #20]	; (80004bc <main+0x5c>)
 80004a6:	f000 f90b 	bl	80006c0 <iprintf>
		return 0;
 80004aa:	2300      	movs	r3, #0
	}
	for(;;);
}
 80004ac:	4618      	mov	r0, r3
 80004ae:	3708      	adds	r7, #8
 80004b0:	46bd      	mov	sp, r7
 80004b2:	bd80      	pop	{r7, pc}
 80004b4:	080016e0 	.word	0x080016e0
 80004b8:	2000000c 	.word	0x2000000c
 80004bc:	080016f0 	.word	0x080016f0

080004c0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80004c0:	b580      	push	{r7, lr}
 80004c2:	b086      	sub	sp, #24
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	60f8      	str	r0, [r7, #12]
 80004c8:	60b9      	str	r1, [r7, #8]
 80004ca:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004cc:	2300      	movs	r3, #0
 80004ce:	617b      	str	r3, [r7, #20]
 80004d0:	e00a      	b.n	80004e8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80004d2:	f3af 8000 	nop.w
 80004d6:	4601      	mov	r1, r0
 80004d8:	68bb      	ldr	r3, [r7, #8]
 80004da:	1c5a      	adds	r2, r3, #1
 80004dc:	60ba      	str	r2, [r7, #8]
 80004de:	b2ca      	uxtb	r2, r1
 80004e0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004e2:	697b      	ldr	r3, [r7, #20]
 80004e4:	3301      	adds	r3, #1
 80004e6:	617b      	str	r3, [r7, #20]
 80004e8:	697a      	ldr	r2, [r7, #20]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	429a      	cmp	r2, r3
 80004ee:	dbf0      	blt.n	80004d2 <_read+0x12>
  }

  return len;
 80004f0:	687b      	ldr	r3, [r7, #4]
}
 80004f2:	4618      	mov	r0, r3
 80004f4:	3718      	adds	r7, #24
 80004f6:	46bd      	mov	sp, r7
 80004f8:	bd80      	pop	{r7, pc}

080004fa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004fa:	b580      	push	{r7, lr}
 80004fc:	b086      	sub	sp, #24
 80004fe:	af00      	add	r7, sp, #0
 8000500:	60f8      	str	r0, [r7, #12]
 8000502:	60b9      	str	r1, [r7, #8]
 8000504:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000506:	2300      	movs	r3, #0
 8000508:	617b      	str	r3, [r7, #20]
 800050a:	e009      	b.n	8000520 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800050c:	68bb      	ldr	r3, [r7, #8]
 800050e:	1c5a      	adds	r2, r3, #1
 8000510:	60ba      	str	r2, [r7, #8]
 8000512:	781b      	ldrb	r3, [r3, #0]
 8000514:	4618      	mov	r0, r3
 8000516:	f7ff ff97 	bl	8000448 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800051a:	697b      	ldr	r3, [r7, #20]
 800051c:	3301      	adds	r3, #1
 800051e:	617b      	str	r3, [r7, #20]
 8000520:	697a      	ldr	r2, [r7, #20]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	429a      	cmp	r2, r3
 8000526:	dbf1      	blt.n	800050c <_write+0x12>
  }
  return len;
 8000528:	687b      	ldr	r3, [r7, #4]
}
 800052a:	4618      	mov	r0, r3
 800052c:	3718      	adds	r7, #24
 800052e:	46bd      	mov	sp, r7
 8000530:	bd80      	pop	{r7, pc}

08000532 <_close>:

int _close(int file)
{
 8000532:	b480      	push	{r7}
 8000534:	b083      	sub	sp, #12
 8000536:	af00      	add	r7, sp, #0
 8000538:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800053a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800053e:	4618      	mov	r0, r3
 8000540:	370c      	adds	r7, #12
 8000542:	46bd      	mov	sp, r7
 8000544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000548:	4770      	bx	lr

0800054a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800054a:	b480      	push	{r7}
 800054c:	b083      	sub	sp, #12
 800054e:	af00      	add	r7, sp, #0
 8000550:	6078      	str	r0, [r7, #4]
 8000552:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000554:	683b      	ldr	r3, [r7, #0]
 8000556:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800055a:	605a      	str	r2, [r3, #4]
  return 0;
 800055c:	2300      	movs	r3, #0
}
 800055e:	4618      	mov	r0, r3
 8000560:	370c      	adds	r7, #12
 8000562:	46bd      	mov	sp, r7
 8000564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000568:	4770      	bx	lr

0800056a <_isatty>:

int _isatty(int file)
{
 800056a:	b480      	push	{r7}
 800056c:	b083      	sub	sp, #12
 800056e:	af00      	add	r7, sp, #0
 8000570:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000572:	2301      	movs	r3, #1
}
 8000574:	4618      	mov	r0, r3
 8000576:	370c      	adds	r7, #12
 8000578:	46bd      	mov	sp, r7
 800057a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800057e:	4770      	bx	lr

08000580 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000580:	b480      	push	{r7}
 8000582:	b085      	sub	sp, #20
 8000584:	af00      	add	r7, sp, #0
 8000586:	60f8      	str	r0, [r7, #12]
 8000588:	60b9      	str	r1, [r7, #8]
 800058a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800058c:	2300      	movs	r3, #0
}
 800058e:	4618      	mov	r0, r3
 8000590:	3714      	adds	r7, #20
 8000592:	46bd      	mov	sp, r7
 8000594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000598:	4770      	bx	lr
	...

0800059c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800059c:	b580      	push	{r7, lr}
 800059e:	b086      	sub	sp, #24
 80005a0:	af00      	add	r7, sp, #0
 80005a2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80005a4:	4a14      	ldr	r2, [pc, #80]	; (80005f8 <_sbrk+0x5c>)
 80005a6:	4b15      	ldr	r3, [pc, #84]	; (80005fc <_sbrk+0x60>)
 80005a8:	1ad3      	subs	r3, r2, r3
 80005aa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80005ac:	697b      	ldr	r3, [r7, #20]
 80005ae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80005b0:	4b13      	ldr	r3, [pc, #76]	; (8000600 <_sbrk+0x64>)
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	2b00      	cmp	r3, #0
 80005b6:	d102      	bne.n	80005be <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80005b8:	4b11      	ldr	r3, [pc, #68]	; (8000600 <_sbrk+0x64>)
 80005ba:	4a12      	ldr	r2, [pc, #72]	; (8000604 <_sbrk+0x68>)
 80005bc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80005be:	4b10      	ldr	r3, [pc, #64]	; (8000600 <_sbrk+0x64>)
 80005c0:	681a      	ldr	r2, [r3, #0]
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	4413      	add	r3, r2
 80005c6:	693a      	ldr	r2, [r7, #16]
 80005c8:	429a      	cmp	r2, r3
 80005ca:	d207      	bcs.n	80005dc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80005cc:	f000 f846 	bl	800065c <__errno>
 80005d0:	4603      	mov	r3, r0
 80005d2:	220c      	movs	r2, #12
 80005d4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80005d6:	f04f 33ff 	mov.w	r3, #4294967295
 80005da:	e009      	b.n	80005f0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80005dc:	4b08      	ldr	r3, [pc, #32]	; (8000600 <_sbrk+0x64>)
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80005e2:	4b07      	ldr	r3, [pc, #28]	; (8000600 <_sbrk+0x64>)
 80005e4:	681a      	ldr	r2, [r3, #0]
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	4413      	add	r3, r2
 80005ea:	4a05      	ldr	r2, [pc, #20]	; (8000600 <_sbrk+0x64>)
 80005ec:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80005ee:	68fb      	ldr	r3, [r7, #12]
}
 80005f0:	4618      	mov	r0, r3
 80005f2:	3718      	adds	r7, #24
 80005f4:	46bd      	mov	sp, r7
 80005f6:	bd80      	pop	{r7, pc}
 80005f8:	20018000 	.word	0x20018000
 80005fc:	00000400 	.word	0x00000400
 8000600:	200000a4 	.word	0x200000a4
 8000604:	200000b8 	.word	0x200000b8

08000608 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000608:	480d      	ldr	r0, [pc, #52]	; (8000640 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800060a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800060c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000610:	480c      	ldr	r0, [pc, #48]	; (8000644 <LoopForever+0x6>)
  ldr r1, =_edata
 8000612:	490d      	ldr	r1, [pc, #52]	; (8000648 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000614:	4a0d      	ldr	r2, [pc, #52]	; (800064c <LoopForever+0xe>)
  movs r3, #0
 8000616:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000618:	e002      	b.n	8000620 <LoopCopyDataInit>

0800061a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800061a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800061c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800061e:	3304      	adds	r3, #4

08000620 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000620:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000622:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000624:	d3f9      	bcc.n	800061a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000626:	4a0a      	ldr	r2, [pc, #40]	; (8000650 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000628:	4c0a      	ldr	r4, [pc, #40]	; (8000654 <LoopForever+0x16>)
  movs r3, #0
 800062a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800062c:	e001      	b.n	8000632 <LoopFillZerobss>

0800062e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800062e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000630:	3204      	adds	r2, #4

08000632 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000632:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000634:	d3fb      	bcc.n	800062e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000636:	f000 f817 	bl	8000668 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800063a:	f7ff ff11 	bl	8000460 <main>

0800063e <LoopForever>:

LoopForever:
  b LoopForever
 800063e:	e7fe      	b.n	800063e <LoopForever>
  ldr   r0, =_estack
 8000640:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000644:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000648:	20000088 	.word	0x20000088
  ldr r2, =_sidata
 800064c:	080017a0 	.word	0x080017a0
  ldr r2, =_sbss
 8000650:	20000088 	.word	0x20000088
  ldr r4, =_ebss
 8000654:	200000b8 	.word	0x200000b8

08000658 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000658:	e7fe      	b.n	8000658 <ADC_IRQHandler>
	...

0800065c <__errno>:
 800065c:	4b01      	ldr	r3, [pc, #4]	; (8000664 <__errno+0x8>)
 800065e:	6818      	ldr	r0, [r3, #0]
 8000660:	4770      	bx	lr
 8000662:	bf00      	nop
 8000664:	20000024 	.word	0x20000024

08000668 <__libc_init_array>:
 8000668:	b570      	push	{r4, r5, r6, lr}
 800066a:	4d0d      	ldr	r5, [pc, #52]	; (80006a0 <__libc_init_array+0x38>)
 800066c:	4c0d      	ldr	r4, [pc, #52]	; (80006a4 <__libc_init_array+0x3c>)
 800066e:	1b64      	subs	r4, r4, r5
 8000670:	10a4      	asrs	r4, r4, #2
 8000672:	2600      	movs	r6, #0
 8000674:	42a6      	cmp	r6, r4
 8000676:	d109      	bne.n	800068c <__libc_init_array+0x24>
 8000678:	4d0b      	ldr	r5, [pc, #44]	; (80006a8 <__libc_init_array+0x40>)
 800067a:	4c0c      	ldr	r4, [pc, #48]	; (80006ac <__libc_init_array+0x44>)
 800067c:	f001 f824 	bl	80016c8 <_init>
 8000680:	1b64      	subs	r4, r4, r5
 8000682:	10a4      	asrs	r4, r4, #2
 8000684:	2600      	movs	r6, #0
 8000686:	42a6      	cmp	r6, r4
 8000688:	d105      	bne.n	8000696 <__libc_init_array+0x2e>
 800068a:	bd70      	pop	{r4, r5, r6, pc}
 800068c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000690:	4798      	blx	r3
 8000692:	3601      	adds	r6, #1
 8000694:	e7ee      	b.n	8000674 <__libc_init_array+0xc>
 8000696:	f855 3b04 	ldr.w	r3, [r5], #4
 800069a:	4798      	blx	r3
 800069c:	3601      	adds	r6, #1
 800069e:	e7f2      	b.n	8000686 <__libc_init_array+0x1e>
 80006a0:	08001798 	.word	0x08001798
 80006a4:	08001798 	.word	0x08001798
 80006a8:	08001798 	.word	0x08001798
 80006ac:	0800179c 	.word	0x0800179c

080006b0 <memset>:
 80006b0:	4402      	add	r2, r0
 80006b2:	4603      	mov	r3, r0
 80006b4:	4293      	cmp	r3, r2
 80006b6:	d100      	bne.n	80006ba <memset+0xa>
 80006b8:	4770      	bx	lr
 80006ba:	f803 1b01 	strb.w	r1, [r3], #1
 80006be:	e7f9      	b.n	80006b4 <memset+0x4>

080006c0 <iprintf>:
 80006c0:	b40f      	push	{r0, r1, r2, r3}
 80006c2:	4b0a      	ldr	r3, [pc, #40]	; (80006ec <iprintf+0x2c>)
 80006c4:	b513      	push	{r0, r1, r4, lr}
 80006c6:	681c      	ldr	r4, [r3, #0]
 80006c8:	b124      	cbz	r4, 80006d4 <iprintf+0x14>
 80006ca:	69a3      	ldr	r3, [r4, #24]
 80006cc:	b913      	cbnz	r3, 80006d4 <iprintf+0x14>
 80006ce:	4620      	mov	r0, r4
 80006d0:	f000 fa5e 	bl	8000b90 <__sinit>
 80006d4:	ab05      	add	r3, sp, #20
 80006d6:	9a04      	ldr	r2, [sp, #16]
 80006d8:	68a1      	ldr	r1, [r4, #8]
 80006da:	9301      	str	r3, [sp, #4]
 80006dc:	4620      	mov	r0, r4
 80006de:	f000 fc67 	bl	8000fb0 <_vfiprintf_r>
 80006e2:	b002      	add	sp, #8
 80006e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006e8:	b004      	add	sp, #16
 80006ea:	4770      	bx	lr
 80006ec:	20000024 	.word	0x20000024

080006f0 <_puts_r>:
 80006f0:	b570      	push	{r4, r5, r6, lr}
 80006f2:	460e      	mov	r6, r1
 80006f4:	4605      	mov	r5, r0
 80006f6:	b118      	cbz	r0, 8000700 <_puts_r+0x10>
 80006f8:	6983      	ldr	r3, [r0, #24]
 80006fa:	b90b      	cbnz	r3, 8000700 <_puts_r+0x10>
 80006fc:	f000 fa48 	bl	8000b90 <__sinit>
 8000700:	69ab      	ldr	r3, [r5, #24]
 8000702:	68ac      	ldr	r4, [r5, #8]
 8000704:	b913      	cbnz	r3, 800070c <_puts_r+0x1c>
 8000706:	4628      	mov	r0, r5
 8000708:	f000 fa42 	bl	8000b90 <__sinit>
 800070c:	4b2c      	ldr	r3, [pc, #176]	; (80007c0 <_puts_r+0xd0>)
 800070e:	429c      	cmp	r4, r3
 8000710:	d120      	bne.n	8000754 <_puts_r+0x64>
 8000712:	686c      	ldr	r4, [r5, #4]
 8000714:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000716:	07db      	lsls	r3, r3, #31
 8000718:	d405      	bmi.n	8000726 <_puts_r+0x36>
 800071a:	89a3      	ldrh	r3, [r4, #12]
 800071c:	0598      	lsls	r0, r3, #22
 800071e:	d402      	bmi.n	8000726 <_puts_r+0x36>
 8000720:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000722:	f000 fad3 	bl	8000ccc <__retarget_lock_acquire_recursive>
 8000726:	89a3      	ldrh	r3, [r4, #12]
 8000728:	0719      	lsls	r1, r3, #28
 800072a:	d51d      	bpl.n	8000768 <_puts_r+0x78>
 800072c:	6923      	ldr	r3, [r4, #16]
 800072e:	b1db      	cbz	r3, 8000768 <_puts_r+0x78>
 8000730:	3e01      	subs	r6, #1
 8000732:	68a3      	ldr	r3, [r4, #8]
 8000734:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000738:	3b01      	subs	r3, #1
 800073a:	60a3      	str	r3, [r4, #8]
 800073c:	bb39      	cbnz	r1, 800078e <_puts_r+0x9e>
 800073e:	2b00      	cmp	r3, #0
 8000740:	da38      	bge.n	80007b4 <_puts_r+0xc4>
 8000742:	4622      	mov	r2, r4
 8000744:	210a      	movs	r1, #10
 8000746:	4628      	mov	r0, r5
 8000748:	f000 f848 	bl	80007dc <__swbuf_r>
 800074c:	3001      	adds	r0, #1
 800074e:	d011      	beq.n	8000774 <_puts_r+0x84>
 8000750:	250a      	movs	r5, #10
 8000752:	e011      	b.n	8000778 <_puts_r+0x88>
 8000754:	4b1b      	ldr	r3, [pc, #108]	; (80007c4 <_puts_r+0xd4>)
 8000756:	429c      	cmp	r4, r3
 8000758:	d101      	bne.n	800075e <_puts_r+0x6e>
 800075a:	68ac      	ldr	r4, [r5, #8]
 800075c:	e7da      	b.n	8000714 <_puts_r+0x24>
 800075e:	4b1a      	ldr	r3, [pc, #104]	; (80007c8 <_puts_r+0xd8>)
 8000760:	429c      	cmp	r4, r3
 8000762:	bf08      	it	eq
 8000764:	68ec      	ldreq	r4, [r5, #12]
 8000766:	e7d5      	b.n	8000714 <_puts_r+0x24>
 8000768:	4621      	mov	r1, r4
 800076a:	4628      	mov	r0, r5
 800076c:	f000 f888 	bl	8000880 <__swsetup_r>
 8000770:	2800      	cmp	r0, #0
 8000772:	d0dd      	beq.n	8000730 <_puts_r+0x40>
 8000774:	f04f 35ff 	mov.w	r5, #4294967295
 8000778:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800077a:	07da      	lsls	r2, r3, #31
 800077c:	d405      	bmi.n	800078a <_puts_r+0x9a>
 800077e:	89a3      	ldrh	r3, [r4, #12]
 8000780:	059b      	lsls	r3, r3, #22
 8000782:	d402      	bmi.n	800078a <_puts_r+0x9a>
 8000784:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000786:	f000 faa2 	bl	8000cce <__retarget_lock_release_recursive>
 800078a:	4628      	mov	r0, r5
 800078c:	bd70      	pop	{r4, r5, r6, pc}
 800078e:	2b00      	cmp	r3, #0
 8000790:	da04      	bge.n	800079c <_puts_r+0xac>
 8000792:	69a2      	ldr	r2, [r4, #24]
 8000794:	429a      	cmp	r2, r3
 8000796:	dc06      	bgt.n	80007a6 <_puts_r+0xb6>
 8000798:	290a      	cmp	r1, #10
 800079a:	d004      	beq.n	80007a6 <_puts_r+0xb6>
 800079c:	6823      	ldr	r3, [r4, #0]
 800079e:	1c5a      	adds	r2, r3, #1
 80007a0:	6022      	str	r2, [r4, #0]
 80007a2:	7019      	strb	r1, [r3, #0]
 80007a4:	e7c5      	b.n	8000732 <_puts_r+0x42>
 80007a6:	4622      	mov	r2, r4
 80007a8:	4628      	mov	r0, r5
 80007aa:	f000 f817 	bl	80007dc <__swbuf_r>
 80007ae:	3001      	adds	r0, #1
 80007b0:	d1bf      	bne.n	8000732 <_puts_r+0x42>
 80007b2:	e7df      	b.n	8000774 <_puts_r+0x84>
 80007b4:	6823      	ldr	r3, [r4, #0]
 80007b6:	250a      	movs	r5, #10
 80007b8:	1c5a      	adds	r2, r3, #1
 80007ba:	6022      	str	r2, [r4, #0]
 80007bc:	701d      	strb	r5, [r3, #0]
 80007be:	e7db      	b.n	8000778 <_puts_r+0x88>
 80007c0:	08001724 	.word	0x08001724
 80007c4:	08001744 	.word	0x08001744
 80007c8:	08001704 	.word	0x08001704

080007cc <puts>:
 80007cc:	4b02      	ldr	r3, [pc, #8]	; (80007d8 <puts+0xc>)
 80007ce:	4601      	mov	r1, r0
 80007d0:	6818      	ldr	r0, [r3, #0]
 80007d2:	f7ff bf8d 	b.w	80006f0 <_puts_r>
 80007d6:	bf00      	nop
 80007d8:	20000024 	.word	0x20000024

080007dc <__swbuf_r>:
 80007dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007de:	460e      	mov	r6, r1
 80007e0:	4614      	mov	r4, r2
 80007e2:	4605      	mov	r5, r0
 80007e4:	b118      	cbz	r0, 80007ee <__swbuf_r+0x12>
 80007e6:	6983      	ldr	r3, [r0, #24]
 80007e8:	b90b      	cbnz	r3, 80007ee <__swbuf_r+0x12>
 80007ea:	f000 f9d1 	bl	8000b90 <__sinit>
 80007ee:	4b21      	ldr	r3, [pc, #132]	; (8000874 <__swbuf_r+0x98>)
 80007f0:	429c      	cmp	r4, r3
 80007f2:	d12b      	bne.n	800084c <__swbuf_r+0x70>
 80007f4:	686c      	ldr	r4, [r5, #4]
 80007f6:	69a3      	ldr	r3, [r4, #24]
 80007f8:	60a3      	str	r3, [r4, #8]
 80007fa:	89a3      	ldrh	r3, [r4, #12]
 80007fc:	071a      	lsls	r2, r3, #28
 80007fe:	d52f      	bpl.n	8000860 <__swbuf_r+0x84>
 8000800:	6923      	ldr	r3, [r4, #16]
 8000802:	b36b      	cbz	r3, 8000860 <__swbuf_r+0x84>
 8000804:	6923      	ldr	r3, [r4, #16]
 8000806:	6820      	ldr	r0, [r4, #0]
 8000808:	1ac0      	subs	r0, r0, r3
 800080a:	6963      	ldr	r3, [r4, #20]
 800080c:	b2f6      	uxtb	r6, r6
 800080e:	4283      	cmp	r3, r0
 8000810:	4637      	mov	r7, r6
 8000812:	dc04      	bgt.n	800081e <__swbuf_r+0x42>
 8000814:	4621      	mov	r1, r4
 8000816:	4628      	mov	r0, r5
 8000818:	f000 f926 	bl	8000a68 <_fflush_r>
 800081c:	bb30      	cbnz	r0, 800086c <__swbuf_r+0x90>
 800081e:	68a3      	ldr	r3, [r4, #8]
 8000820:	3b01      	subs	r3, #1
 8000822:	60a3      	str	r3, [r4, #8]
 8000824:	6823      	ldr	r3, [r4, #0]
 8000826:	1c5a      	adds	r2, r3, #1
 8000828:	6022      	str	r2, [r4, #0]
 800082a:	701e      	strb	r6, [r3, #0]
 800082c:	6963      	ldr	r3, [r4, #20]
 800082e:	3001      	adds	r0, #1
 8000830:	4283      	cmp	r3, r0
 8000832:	d004      	beq.n	800083e <__swbuf_r+0x62>
 8000834:	89a3      	ldrh	r3, [r4, #12]
 8000836:	07db      	lsls	r3, r3, #31
 8000838:	d506      	bpl.n	8000848 <__swbuf_r+0x6c>
 800083a:	2e0a      	cmp	r6, #10
 800083c:	d104      	bne.n	8000848 <__swbuf_r+0x6c>
 800083e:	4621      	mov	r1, r4
 8000840:	4628      	mov	r0, r5
 8000842:	f000 f911 	bl	8000a68 <_fflush_r>
 8000846:	b988      	cbnz	r0, 800086c <__swbuf_r+0x90>
 8000848:	4638      	mov	r0, r7
 800084a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800084c:	4b0a      	ldr	r3, [pc, #40]	; (8000878 <__swbuf_r+0x9c>)
 800084e:	429c      	cmp	r4, r3
 8000850:	d101      	bne.n	8000856 <__swbuf_r+0x7a>
 8000852:	68ac      	ldr	r4, [r5, #8]
 8000854:	e7cf      	b.n	80007f6 <__swbuf_r+0x1a>
 8000856:	4b09      	ldr	r3, [pc, #36]	; (800087c <__swbuf_r+0xa0>)
 8000858:	429c      	cmp	r4, r3
 800085a:	bf08      	it	eq
 800085c:	68ec      	ldreq	r4, [r5, #12]
 800085e:	e7ca      	b.n	80007f6 <__swbuf_r+0x1a>
 8000860:	4621      	mov	r1, r4
 8000862:	4628      	mov	r0, r5
 8000864:	f000 f80c 	bl	8000880 <__swsetup_r>
 8000868:	2800      	cmp	r0, #0
 800086a:	d0cb      	beq.n	8000804 <__swbuf_r+0x28>
 800086c:	f04f 37ff 	mov.w	r7, #4294967295
 8000870:	e7ea      	b.n	8000848 <__swbuf_r+0x6c>
 8000872:	bf00      	nop
 8000874:	08001724 	.word	0x08001724
 8000878:	08001744 	.word	0x08001744
 800087c:	08001704 	.word	0x08001704

08000880 <__swsetup_r>:
 8000880:	4b32      	ldr	r3, [pc, #200]	; (800094c <__swsetup_r+0xcc>)
 8000882:	b570      	push	{r4, r5, r6, lr}
 8000884:	681d      	ldr	r5, [r3, #0]
 8000886:	4606      	mov	r6, r0
 8000888:	460c      	mov	r4, r1
 800088a:	b125      	cbz	r5, 8000896 <__swsetup_r+0x16>
 800088c:	69ab      	ldr	r3, [r5, #24]
 800088e:	b913      	cbnz	r3, 8000896 <__swsetup_r+0x16>
 8000890:	4628      	mov	r0, r5
 8000892:	f000 f97d 	bl	8000b90 <__sinit>
 8000896:	4b2e      	ldr	r3, [pc, #184]	; (8000950 <__swsetup_r+0xd0>)
 8000898:	429c      	cmp	r4, r3
 800089a:	d10f      	bne.n	80008bc <__swsetup_r+0x3c>
 800089c:	686c      	ldr	r4, [r5, #4]
 800089e:	89a3      	ldrh	r3, [r4, #12]
 80008a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80008a4:	0719      	lsls	r1, r3, #28
 80008a6:	d42c      	bmi.n	8000902 <__swsetup_r+0x82>
 80008a8:	06dd      	lsls	r5, r3, #27
 80008aa:	d411      	bmi.n	80008d0 <__swsetup_r+0x50>
 80008ac:	2309      	movs	r3, #9
 80008ae:	6033      	str	r3, [r6, #0]
 80008b0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80008b4:	81a3      	strh	r3, [r4, #12]
 80008b6:	f04f 30ff 	mov.w	r0, #4294967295
 80008ba:	e03e      	b.n	800093a <__swsetup_r+0xba>
 80008bc:	4b25      	ldr	r3, [pc, #148]	; (8000954 <__swsetup_r+0xd4>)
 80008be:	429c      	cmp	r4, r3
 80008c0:	d101      	bne.n	80008c6 <__swsetup_r+0x46>
 80008c2:	68ac      	ldr	r4, [r5, #8]
 80008c4:	e7eb      	b.n	800089e <__swsetup_r+0x1e>
 80008c6:	4b24      	ldr	r3, [pc, #144]	; (8000958 <__swsetup_r+0xd8>)
 80008c8:	429c      	cmp	r4, r3
 80008ca:	bf08      	it	eq
 80008cc:	68ec      	ldreq	r4, [r5, #12]
 80008ce:	e7e6      	b.n	800089e <__swsetup_r+0x1e>
 80008d0:	0758      	lsls	r0, r3, #29
 80008d2:	d512      	bpl.n	80008fa <__swsetup_r+0x7a>
 80008d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80008d6:	b141      	cbz	r1, 80008ea <__swsetup_r+0x6a>
 80008d8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008dc:	4299      	cmp	r1, r3
 80008de:	d002      	beq.n	80008e6 <__swsetup_r+0x66>
 80008e0:	4630      	mov	r0, r6
 80008e2:	f000 fa5b 	bl	8000d9c <_free_r>
 80008e6:	2300      	movs	r3, #0
 80008e8:	6363      	str	r3, [r4, #52]	; 0x34
 80008ea:	89a3      	ldrh	r3, [r4, #12]
 80008ec:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80008f0:	81a3      	strh	r3, [r4, #12]
 80008f2:	2300      	movs	r3, #0
 80008f4:	6063      	str	r3, [r4, #4]
 80008f6:	6923      	ldr	r3, [r4, #16]
 80008f8:	6023      	str	r3, [r4, #0]
 80008fa:	89a3      	ldrh	r3, [r4, #12]
 80008fc:	f043 0308 	orr.w	r3, r3, #8
 8000900:	81a3      	strh	r3, [r4, #12]
 8000902:	6923      	ldr	r3, [r4, #16]
 8000904:	b94b      	cbnz	r3, 800091a <__swsetup_r+0x9a>
 8000906:	89a3      	ldrh	r3, [r4, #12]
 8000908:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800090c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000910:	d003      	beq.n	800091a <__swsetup_r+0x9a>
 8000912:	4621      	mov	r1, r4
 8000914:	4630      	mov	r0, r6
 8000916:	f000 fa01 	bl	8000d1c <__smakebuf_r>
 800091a:	89a0      	ldrh	r0, [r4, #12]
 800091c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000920:	f010 0301 	ands.w	r3, r0, #1
 8000924:	d00a      	beq.n	800093c <__swsetup_r+0xbc>
 8000926:	2300      	movs	r3, #0
 8000928:	60a3      	str	r3, [r4, #8]
 800092a:	6963      	ldr	r3, [r4, #20]
 800092c:	425b      	negs	r3, r3
 800092e:	61a3      	str	r3, [r4, #24]
 8000930:	6923      	ldr	r3, [r4, #16]
 8000932:	b943      	cbnz	r3, 8000946 <__swsetup_r+0xc6>
 8000934:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000938:	d1ba      	bne.n	80008b0 <__swsetup_r+0x30>
 800093a:	bd70      	pop	{r4, r5, r6, pc}
 800093c:	0781      	lsls	r1, r0, #30
 800093e:	bf58      	it	pl
 8000940:	6963      	ldrpl	r3, [r4, #20]
 8000942:	60a3      	str	r3, [r4, #8]
 8000944:	e7f4      	b.n	8000930 <__swsetup_r+0xb0>
 8000946:	2000      	movs	r0, #0
 8000948:	e7f7      	b.n	800093a <__swsetup_r+0xba>
 800094a:	bf00      	nop
 800094c:	20000024 	.word	0x20000024
 8000950:	08001724 	.word	0x08001724
 8000954:	08001744 	.word	0x08001744
 8000958:	08001704 	.word	0x08001704

0800095c <__sflush_r>:
 800095c:	898a      	ldrh	r2, [r1, #12]
 800095e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000962:	4605      	mov	r5, r0
 8000964:	0710      	lsls	r0, r2, #28
 8000966:	460c      	mov	r4, r1
 8000968:	d458      	bmi.n	8000a1c <__sflush_r+0xc0>
 800096a:	684b      	ldr	r3, [r1, #4]
 800096c:	2b00      	cmp	r3, #0
 800096e:	dc05      	bgt.n	800097c <__sflush_r+0x20>
 8000970:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000972:	2b00      	cmp	r3, #0
 8000974:	dc02      	bgt.n	800097c <__sflush_r+0x20>
 8000976:	2000      	movs	r0, #0
 8000978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800097c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800097e:	2e00      	cmp	r6, #0
 8000980:	d0f9      	beq.n	8000976 <__sflush_r+0x1a>
 8000982:	2300      	movs	r3, #0
 8000984:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000988:	682f      	ldr	r7, [r5, #0]
 800098a:	602b      	str	r3, [r5, #0]
 800098c:	d032      	beq.n	80009f4 <__sflush_r+0x98>
 800098e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000990:	89a3      	ldrh	r3, [r4, #12]
 8000992:	075a      	lsls	r2, r3, #29
 8000994:	d505      	bpl.n	80009a2 <__sflush_r+0x46>
 8000996:	6863      	ldr	r3, [r4, #4]
 8000998:	1ac0      	subs	r0, r0, r3
 800099a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800099c:	b10b      	cbz	r3, 80009a2 <__sflush_r+0x46>
 800099e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80009a0:	1ac0      	subs	r0, r0, r3
 80009a2:	2300      	movs	r3, #0
 80009a4:	4602      	mov	r2, r0
 80009a6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80009a8:	6a21      	ldr	r1, [r4, #32]
 80009aa:	4628      	mov	r0, r5
 80009ac:	47b0      	blx	r6
 80009ae:	1c43      	adds	r3, r0, #1
 80009b0:	89a3      	ldrh	r3, [r4, #12]
 80009b2:	d106      	bne.n	80009c2 <__sflush_r+0x66>
 80009b4:	6829      	ldr	r1, [r5, #0]
 80009b6:	291d      	cmp	r1, #29
 80009b8:	d82c      	bhi.n	8000a14 <__sflush_r+0xb8>
 80009ba:	4a2a      	ldr	r2, [pc, #168]	; (8000a64 <__sflush_r+0x108>)
 80009bc:	40ca      	lsrs	r2, r1
 80009be:	07d6      	lsls	r6, r2, #31
 80009c0:	d528      	bpl.n	8000a14 <__sflush_r+0xb8>
 80009c2:	2200      	movs	r2, #0
 80009c4:	6062      	str	r2, [r4, #4]
 80009c6:	04d9      	lsls	r1, r3, #19
 80009c8:	6922      	ldr	r2, [r4, #16]
 80009ca:	6022      	str	r2, [r4, #0]
 80009cc:	d504      	bpl.n	80009d8 <__sflush_r+0x7c>
 80009ce:	1c42      	adds	r2, r0, #1
 80009d0:	d101      	bne.n	80009d6 <__sflush_r+0x7a>
 80009d2:	682b      	ldr	r3, [r5, #0]
 80009d4:	b903      	cbnz	r3, 80009d8 <__sflush_r+0x7c>
 80009d6:	6560      	str	r0, [r4, #84]	; 0x54
 80009d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80009da:	602f      	str	r7, [r5, #0]
 80009dc:	2900      	cmp	r1, #0
 80009de:	d0ca      	beq.n	8000976 <__sflush_r+0x1a>
 80009e0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80009e4:	4299      	cmp	r1, r3
 80009e6:	d002      	beq.n	80009ee <__sflush_r+0x92>
 80009e8:	4628      	mov	r0, r5
 80009ea:	f000 f9d7 	bl	8000d9c <_free_r>
 80009ee:	2000      	movs	r0, #0
 80009f0:	6360      	str	r0, [r4, #52]	; 0x34
 80009f2:	e7c1      	b.n	8000978 <__sflush_r+0x1c>
 80009f4:	6a21      	ldr	r1, [r4, #32]
 80009f6:	2301      	movs	r3, #1
 80009f8:	4628      	mov	r0, r5
 80009fa:	47b0      	blx	r6
 80009fc:	1c41      	adds	r1, r0, #1
 80009fe:	d1c7      	bne.n	8000990 <__sflush_r+0x34>
 8000a00:	682b      	ldr	r3, [r5, #0]
 8000a02:	2b00      	cmp	r3, #0
 8000a04:	d0c4      	beq.n	8000990 <__sflush_r+0x34>
 8000a06:	2b1d      	cmp	r3, #29
 8000a08:	d001      	beq.n	8000a0e <__sflush_r+0xb2>
 8000a0a:	2b16      	cmp	r3, #22
 8000a0c:	d101      	bne.n	8000a12 <__sflush_r+0xb6>
 8000a0e:	602f      	str	r7, [r5, #0]
 8000a10:	e7b1      	b.n	8000976 <__sflush_r+0x1a>
 8000a12:	89a3      	ldrh	r3, [r4, #12]
 8000a14:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a18:	81a3      	strh	r3, [r4, #12]
 8000a1a:	e7ad      	b.n	8000978 <__sflush_r+0x1c>
 8000a1c:	690f      	ldr	r7, [r1, #16]
 8000a1e:	2f00      	cmp	r7, #0
 8000a20:	d0a9      	beq.n	8000976 <__sflush_r+0x1a>
 8000a22:	0793      	lsls	r3, r2, #30
 8000a24:	680e      	ldr	r6, [r1, #0]
 8000a26:	bf08      	it	eq
 8000a28:	694b      	ldreq	r3, [r1, #20]
 8000a2a:	600f      	str	r7, [r1, #0]
 8000a2c:	bf18      	it	ne
 8000a2e:	2300      	movne	r3, #0
 8000a30:	eba6 0807 	sub.w	r8, r6, r7
 8000a34:	608b      	str	r3, [r1, #8]
 8000a36:	f1b8 0f00 	cmp.w	r8, #0
 8000a3a:	dd9c      	ble.n	8000976 <__sflush_r+0x1a>
 8000a3c:	6a21      	ldr	r1, [r4, #32]
 8000a3e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000a40:	4643      	mov	r3, r8
 8000a42:	463a      	mov	r2, r7
 8000a44:	4628      	mov	r0, r5
 8000a46:	47b0      	blx	r6
 8000a48:	2800      	cmp	r0, #0
 8000a4a:	dc06      	bgt.n	8000a5a <__sflush_r+0xfe>
 8000a4c:	89a3      	ldrh	r3, [r4, #12]
 8000a4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a52:	81a3      	strh	r3, [r4, #12]
 8000a54:	f04f 30ff 	mov.w	r0, #4294967295
 8000a58:	e78e      	b.n	8000978 <__sflush_r+0x1c>
 8000a5a:	4407      	add	r7, r0
 8000a5c:	eba8 0800 	sub.w	r8, r8, r0
 8000a60:	e7e9      	b.n	8000a36 <__sflush_r+0xda>
 8000a62:	bf00      	nop
 8000a64:	20400001 	.word	0x20400001

08000a68 <_fflush_r>:
 8000a68:	b538      	push	{r3, r4, r5, lr}
 8000a6a:	690b      	ldr	r3, [r1, #16]
 8000a6c:	4605      	mov	r5, r0
 8000a6e:	460c      	mov	r4, r1
 8000a70:	b913      	cbnz	r3, 8000a78 <_fflush_r+0x10>
 8000a72:	2500      	movs	r5, #0
 8000a74:	4628      	mov	r0, r5
 8000a76:	bd38      	pop	{r3, r4, r5, pc}
 8000a78:	b118      	cbz	r0, 8000a82 <_fflush_r+0x1a>
 8000a7a:	6983      	ldr	r3, [r0, #24]
 8000a7c:	b90b      	cbnz	r3, 8000a82 <_fflush_r+0x1a>
 8000a7e:	f000 f887 	bl	8000b90 <__sinit>
 8000a82:	4b14      	ldr	r3, [pc, #80]	; (8000ad4 <_fflush_r+0x6c>)
 8000a84:	429c      	cmp	r4, r3
 8000a86:	d11b      	bne.n	8000ac0 <_fflush_r+0x58>
 8000a88:	686c      	ldr	r4, [r5, #4]
 8000a8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d0ef      	beq.n	8000a72 <_fflush_r+0xa>
 8000a92:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000a94:	07d0      	lsls	r0, r2, #31
 8000a96:	d404      	bmi.n	8000aa2 <_fflush_r+0x3a>
 8000a98:	0599      	lsls	r1, r3, #22
 8000a9a:	d402      	bmi.n	8000aa2 <_fflush_r+0x3a>
 8000a9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a9e:	f000 f915 	bl	8000ccc <__retarget_lock_acquire_recursive>
 8000aa2:	4628      	mov	r0, r5
 8000aa4:	4621      	mov	r1, r4
 8000aa6:	f7ff ff59 	bl	800095c <__sflush_r>
 8000aaa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000aac:	07da      	lsls	r2, r3, #31
 8000aae:	4605      	mov	r5, r0
 8000ab0:	d4e0      	bmi.n	8000a74 <_fflush_r+0xc>
 8000ab2:	89a3      	ldrh	r3, [r4, #12]
 8000ab4:	059b      	lsls	r3, r3, #22
 8000ab6:	d4dd      	bmi.n	8000a74 <_fflush_r+0xc>
 8000ab8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000aba:	f000 f908 	bl	8000cce <__retarget_lock_release_recursive>
 8000abe:	e7d9      	b.n	8000a74 <_fflush_r+0xc>
 8000ac0:	4b05      	ldr	r3, [pc, #20]	; (8000ad8 <_fflush_r+0x70>)
 8000ac2:	429c      	cmp	r4, r3
 8000ac4:	d101      	bne.n	8000aca <_fflush_r+0x62>
 8000ac6:	68ac      	ldr	r4, [r5, #8]
 8000ac8:	e7df      	b.n	8000a8a <_fflush_r+0x22>
 8000aca:	4b04      	ldr	r3, [pc, #16]	; (8000adc <_fflush_r+0x74>)
 8000acc:	429c      	cmp	r4, r3
 8000ace:	bf08      	it	eq
 8000ad0:	68ec      	ldreq	r4, [r5, #12]
 8000ad2:	e7da      	b.n	8000a8a <_fflush_r+0x22>
 8000ad4:	08001724 	.word	0x08001724
 8000ad8:	08001744 	.word	0x08001744
 8000adc:	08001704 	.word	0x08001704

08000ae0 <std>:
 8000ae0:	2300      	movs	r3, #0
 8000ae2:	b510      	push	{r4, lr}
 8000ae4:	4604      	mov	r4, r0
 8000ae6:	e9c0 3300 	strd	r3, r3, [r0]
 8000aea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000aee:	6083      	str	r3, [r0, #8]
 8000af0:	8181      	strh	r1, [r0, #12]
 8000af2:	6643      	str	r3, [r0, #100]	; 0x64
 8000af4:	81c2      	strh	r2, [r0, #14]
 8000af6:	6183      	str	r3, [r0, #24]
 8000af8:	4619      	mov	r1, r3
 8000afa:	2208      	movs	r2, #8
 8000afc:	305c      	adds	r0, #92	; 0x5c
 8000afe:	f7ff fdd7 	bl	80006b0 <memset>
 8000b02:	4b05      	ldr	r3, [pc, #20]	; (8000b18 <std+0x38>)
 8000b04:	6263      	str	r3, [r4, #36]	; 0x24
 8000b06:	4b05      	ldr	r3, [pc, #20]	; (8000b1c <std+0x3c>)
 8000b08:	62a3      	str	r3, [r4, #40]	; 0x28
 8000b0a:	4b05      	ldr	r3, [pc, #20]	; (8000b20 <std+0x40>)
 8000b0c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000b0e:	4b05      	ldr	r3, [pc, #20]	; (8000b24 <std+0x44>)
 8000b10:	6224      	str	r4, [r4, #32]
 8000b12:	6323      	str	r3, [r4, #48]	; 0x30
 8000b14:	bd10      	pop	{r4, pc}
 8000b16:	bf00      	nop
 8000b18:	08001559 	.word	0x08001559
 8000b1c:	0800157b 	.word	0x0800157b
 8000b20:	080015b3 	.word	0x080015b3
 8000b24:	080015d7 	.word	0x080015d7

08000b28 <_cleanup_r>:
 8000b28:	4901      	ldr	r1, [pc, #4]	; (8000b30 <_cleanup_r+0x8>)
 8000b2a:	f000 b8af 	b.w	8000c8c <_fwalk_reent>
 8000b2e:	bf00      	nop
 8000b30:	08000a69 	.word	0x08000a69

08000b34 <__sfmoreglue>:
 8000b34:	b570      	push	{r4, r5, r6, lr}
 8000b36:	2268      	movs	r2, #104	; 0x68
 8000b38:	1e4d      	subs	r5, r1, #1
 8000b3a:	4355      	muls	r5, r2
 8000b3c:	460e      	mov	r6, r1
 8000b3e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000b42:	f000 f997 	bl	8000e74 <_malloc_r>
 8000b46:	4604      	mov	r4, r0
 8000b48:	b140      	cbz	r0, 8000b5c <__sfmoreglue+0x28>
 8000b4a:	2100      	movs	r1, #0
 8000b4c:	e9c0 1600 	strd	r1, r6, [r0]
 8000b50:	300c      	adds	r0, #12
 8000b52:	60a0      	str	r0, [r4, #8]
 8000b54:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000b58:	f7ff fdaa 	bl	80006b0 <memset>
 8000b5c:	4620      	mov	r0, r4
 8000b5e:	bd70      	pop	{r4, r5, r6, pc}

08000b60 <__sfp_lock_acquire>:
 8000b60:	4801      	ldr	r0, [pc, #4]	; (8000b68 <__sfp_lock_acquire+0x8>)
 8000b62:	f000 b8b3 	b.w	8000ccc <__retarget_lock_acquire_recursive>
 8000b66:	bf00      	nop
 8000b68:	200000a9 	.word	0x200000a9

08000b6c <__sfp_lock_release>:
 8000b6c:	4801      	ldr	r0, [pc, #4]	; (8000b74 <__sfp_lock_release+0x8>)
 8000b6e:	f000 b8ae 	b.w	8000cce <__retarget_lock_release_recursive>
 8000b72:	bf00      	nop
 8000b74:	200000a9 	.word	0x200000a9

08000b78 <__sinit_lock_acquire>:
 8000b78:	4801      	ldr	r0, [pc, #4]	; (8000b80 <__sinit_lock_acquire+0x8>)
 8000b7a:	f000 b8a7 	b.w	8000ccc <__retarget_lock_acquire_recursive>
 8000b7e:	bf00      	nop
 8000b80:	200000aa 	.word	0x200000aa

08000b84 <__sinit_lock_release>:
 8000b84:	4801      	ldr	r0, [pc, #4]	; (8000b8c <__sinit_lock_release+0x8>)
 8000b86:	f000 b8a2 	b.w	8000cce <__retarget_lock_release_recursive>
 8000b8a:	bf00      	nop
 8000b8c:	200000aa 	.word	0x200000aa

08000b90 <__sinit>:
 8000b90:	b510      	push	{r4, lr}
 8000b92:	4604      	mov	r4, r0
 8000b94:	f7ff fff0 	bl	8000b78 <__sinit_lock_acquire>
 8000b98:	69a3      	ldr	r3, [r4, #24]
 8000b9a:	b11b      	cbz	r3, 8000ba4 <__sinit+0x14>
 8000b9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000ba0:	f7ff bff0 	b.w	8000b84 <__sinit_lock_release>
 8000ba4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000ba8:	6523      	str	r3, [r4, #80]	; 0x50
 8000baa:	4b13      	ldr	r3, [pc, #76]	; (8000bf8 <__sinit+0x68>)
 8000bac:	4a13      	ldr	r2, [pc, #76]	; (8000bfc <__sinit+0x6c>)
 8000bae:	681b      	ldr	r3, [r3, #0]
 8000bb0:	62a2      	str	r2, [r4, #40]	; 0x28
 8000bb2:	42a3      	cmp	r3, r4
 8000bb4:	bf04      	itt	eq
 8000bb6:	2301      	moveq	r3, #1
 8000bb8:	61a3      	streq	r3, [r4, #24]
 8000bba:	4620      	mov	r0, r4
 8000bbc:	f000 f820 	bl	8000c00 <__sfp>
 8000bc0:	6060      	str	r0, [r4, #4]
 8000bc2:	4620      	mov	r0, r4
 8000bc4:	f000 f81c 	bl	8000c00 <__sfp>
 8000bc8:	60a0      	str	r0, [r4, #8]
 8000bca:	4620      	mov	r0, r4
 8000bcc:	f000 f818 	bl	8000c00 <__sfp>
 8000bd0:	2200      	movs	r2, #0
 8000bd2:	60e0      	str	r0, [r4, #12]
 8000bd4:	2104      	movs	r1, #4
 8000bd6:	6860      	ldr	r0, [r4, #4]
 8000bd8:	f7ff ff82 	bl	8000ae0 <std>
 8000bdc:	68a0      	ldr	r0, [r4, #8]
 8000bde:	2201      	movs	r2, #1
 8000be0:	2109      	movs	r1, #9
 8000be2:	f7ff ff7d 	bl	8000ae0 <std>
 8000be6:	68e0      	ldr	r0, [r4, #12]
 8000be8:	2202      	movs	r2, #2
 8000bea:	2112      	movs	r1, #18
 8000bec:	f7ff ff78 	bl	8000ae0 <std>
 8000bf0:	2301      	movs	r3, #1
 8000bf2:	61a3      	str	r3, [r4, #24]
 8000bf4:	e7d2      	b.n	8000b9c <__sinit+0xc>
 8000bf6:	bf00      	nop
 8000bf8:	08001700 	.word	0x08001700
 8000bfc:	08000b29 	.word	0x08000b29

08000c00 <__sfp>:
 8000c00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c02:	4607      	mov	r7, r0
 8000c04:	f7ff ffac 	bl	8000b60 <__sfp_lock_acquire>
 8000c08:	4b1e      	ldr	r3, [pc, #120]	; (8000c84 <__sfp+0x84>)
 8000c0a:	681e      	ldr	r6, [r3, #0]
 8000c0c:	69b3      	ldr	r3, [r6, #24]
 8000c0e:	b913      	cbnz	r3, 8000c16 <__sfp+0x16>
 8000c10:	4630      	mov	r0, r6
 8000c12:	f7ff ffbd 	bl	8000b90 <__sinit>
 8000c16:	3648      	adds	r6, #72	; 0x48
 8000c18:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000c1c:	3b01      	subs	r3, #1
 8000c1e:	d503      	bpl.n	8000c28 <__sfp+0x28>
 8000c20:	6833      	ldr	r3, [r6, #0]
 8000c22:	b30b      	cbz	r3, 8000c68 <__sfp+0x68>
 8000c24:	6836      	ldr	r6, [r6, #0]
 8000c26:	e7f7      	b.n	8000c18 <__sfp+0x18>
 8000c28:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000c2c:	b9d5      	cbnz	r5, 8000c64 <__sfp+0x64>
 8000c2e:	4b16      	ldr	r3, [pc, #88]	; (8000c88 <__sfp+0x88>)
 8000c30:	60e3      	str	r3, [r4, #12]
 8000c32:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000c36:	6665      	str	r5, [r4, #100]	; 0x64
 8000c38:	f000 f847 	bl	8000cca <__retarget_lock_init_recursive>
 8000c3c:	f7ff ff96 	bl	8000b6c <__sfp_lock_release>
 8000c40:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000c44:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000c48:	6025      	str	r5, [r4, #0]
 8000c4a:	61a5      	str	r5, [r4, #24]
 8000c4c:	2208      	movs	r2, #8
 8000c4e:	4629      	mov	r1, r5
 8000c50:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000c54:	f7ff fd2c 	bl	80006b0 <memset>
 8000c58:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000c5c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000c60:	4620      	mov	r0, r4
 8000c62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c64:	3468      	adds	r4, #104	; 0x68
 8000c66:	e7d9      	b.n	8000c1c <__sfp+0x1c>
 8000c68:	2104      	movs	r1, #4
 8000c6a:	4638      	mov	r0, r7
 8000c6c:	f7ff ff62 	bl	8000b34 <__sfmoreglue>
 8000c70:	4604      	mov	r4, r0
 8000c72:	6030      	str	r0, [r6, #0]
 8000c74:	2800      	cmp	r0, #0
 8000c76:	d1d5      	bne.n	8000c24 <__sfp+0x24>
 8000c78:	f7ff ff78 	bl	8000b6c <__sfp_lock_release>
 8000c7c:	230c      	movs	r3, #12
 8000c7e:	603b      	str	r3, [r7, #0]
 8000c80:	e7ee      	b.n	8000c60 <__sfp+0x60>
 8000c82:	bf00      	nop
 8000c84:	08001700 	.word	0x08001700
 8000c88:	ffff0001 	.word	0xffff0001

08000c8c <_fwalk_reent>:
 8000c8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c90:	4606      	mov	r6, r0
 8000c92:	4688      	mov	r8, r1
 8000c94:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000c98:	2700      	movs	r7, #0
 8000c9a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c9e:	f1b9 0901 	subs.w	r9, r9, #1
 8000ca2:	d505      	bpl.n	8000cb0 <_fwalk_reent+0x24>
 8000ca4:	6824      	ldr	r4, [r4, #0]
 8000ca6:	2c00      	cmp	r4, #0
 8000ca8:	d1f7      	bne.n	8000c9a <_fwalk_reent+0xe>
 8000caa:	4638      	mov	r0, r7
 8000cac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000cb0:	89ab      	ldrh	r3, [r5, #12]
 8000cb2:	2b01      	cmp	r3, #1
 8000cb4:	d907      	bls.n	8000cc6 <_fwalk_reent+0x3a>
 8000cb6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000cba:	3301      	adds	r3, #1
 8000cbc:	d003      	beq.n	8000cc6 <_fwalk_reent+0x3a>
 8000cbe:	4629      	mov	r1, r5
 8000cc0:	4630      	mov	r0, r6
 8000cc2:	47c0      	blx	r8
 8000cc4:	4307      	orrs	r7, r0
 8000cc6:	3568      	adds	r5, #104	; 0x68
 8000cc8:	e7e9      	b.n	8000c9e <_fwalk_reent+0x12>

08000cca <__retarget_lock_init_recursive>:
 8000cca:	4770      	bx	lr

08000ccc <__retarget_lock_acquire_recursive>:
 8000ccc:	4770      	bx	lr

08000cce <__retarget_lock_release_recursive>:
 8000cce:	4770      	bx	lr

08000cd0 <__swhatbuf_r>:
 8000cd0:	b570      	push	{r4, r5, r6, lr}
 8000cd2:	460e      	mov	r6, r1
 8000cd4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cd8:	2900      	cmp	r1, #0
 8000cda:	b096      	sub	sp, #88	; 0x58
 8000cdc:	4614      	mov	r4, r2
 8000cde:	461d      	mov	r5, r3
 8000ce0:	da08      	bge.n	8000cf4 <__swhatbuf_r+0x24>
 8000ce2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	602a      	str	r2, [r5, #0]
 8000cea:	061a      	lsls	r2, r3, #24
 8000cec:	d410      	bmi.n	8000d10 <__swhatbuf_r+0x40>
 8000cee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000cf2:	e00e      	b.n	8000d12 <__swhatbuf_r+0x42>
 8000cf4:	466a      	mov	r2, sp
 8000cf6:	f000 fc95 	bl	8001624 <_fstat_r>
 8000cfa:	2800      	cmp	r0, #0
 8000cfc:	dbf1      	blt.n	8000ce2 <__swhatbuf_r+0x12>
 8000cfe:	9a01      	ldr	r2, [sp, #4]
 8000d00:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000d04:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000d08:	425a      	negs	r2, r3
 8000d0a:	415a      	adcs	r2, r3
 8000d0c:	602a      	str	r2, [r5, #0]
 8000d0e:	e7ee      	b.n	8000cee <__swhatbuf_r+0x1e>
 8000d10:	2340      	movs	r3, #64	; 0x40
 8000d12:	2000      	movs	r0, #0
 8000d14:	6023      	str	r3, [r4, #0]
 8000d16:	b016      	add	sp, #88	; 0x58
 8000d18:	bd70      	pop	{r4, r5, r6, pc}
	...

08000d1c <__smakebuf_r>:
 8000d1c:	898b      	ldrh	r3, [r1, #12]
 8000d1e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000d20:	079d      	lsls	r5, r3, #30
 8000d22:	4606      	mov	r6, r0
 8000d24:	460c      	mov	r4, r1
 8000d26:	d507      	bpl.n	8000d38 <__smakebuf_r+0x1c>
 8000d28:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000d2c:	6023      	str	r3, [r4, #0]
 8000d2e:	6123      	str	r3, [r4, #16]
 8000d30:	2301      	movs	r3, #1
 8000d32:	6163      	str	r3, [r4, #20]
 8000d34:	b002      	add	sp, #8
 8000d36:	bd70      	pop	{r4, r5, r6, pc}
 8000d38:	ab01      	add	r3, sp, #4
 8000d3a:	466a      	mov	r2, sp
 8000d3c:	f7ff ffc8 	bl	8000cd0 <__swhatbuf_r>
 8000d40:	9900      	ldr	r1, [sp, #0]
 8000d42:	4605      	mov	r5, r0
 8000d44:	4630      	mov	r0, r6
 8000d46:	f000 f895 	bl	8000e74 <_malloc_r>
 8000d4a:	b948      	cbnz	r0, 8000d60 <__smakebuf_r+0x44>
 8000d4c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d50:	059a      	lsls	r2, r3, #22
 8000d52:	d4ef      	bmi.n	8000d34 <__smakebuf_r+0x18>
 8000d54:	f023 0303 	bic.w	r3, r3, #3
 8000d58:	f043 0302 	orr.w	r3, r3, #2
 8000d5c:	81a3      	strh	r3, [r4, #12]
 8000d5e:	e7e3      	b.n	8000d28 <__smakebuf_r+0xc>
 8000d60:	4b0d      	ldr	r3, [pc, #52]	; (8000d98 <__smakebuf_r+0x7c>)
 8000d62:	62b3      	str	r3, [r6, #40]	; 0x28
 8000d64:	89a3      	ldrh	r3, [r4, #12]
 8000d66:	6020      	str	r0, [r4, #0]
 8000d68:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d6c:	81a3      	strh	r3, [r4, #12]
 8000d6e:	9b00      	ldr	r3, [sp, #0]
 8000d70:	6163      	str	r3, [r4, #20]
 8000d72:	9b01      	ldr	r3, [sp, #4]
 8000d74:	6120      	str	r0, [r4, #16]
 8000d76:	b15b      	cbz	r3, 8000d90 <__smakebuf_r+0x74>
 8000d78:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d7c:	4630      	mov	r0, r6
 8000d7e:	f000 fc63 	bl	8001648 <_isatty_r>
 8000d82:	b128      	cbz	r0, 8000d90 <__smakebuf_r+0x74>
 8000d84:	89a3      	ldrh	r3, [r4, #12]
 8000d86:	f023 0303 	bic.w	r3, r3, #3
 8000d8a:	f043 0301 	orr.w	r3, r3, #1
 8000d8e:	81a3      	strh	r3, [r4, #12]
 8000d90:	89a0      	ldrh	r0, [r4, #12]
 8000d92:	4305      	orrs	r5, r0
 8000d94:	81a5      	strh	r5, [r4, #12]
 8000d96:	e7cd      	b.n	8000d34 <__smakebuf_r+0x18>
 8000d98:	08000b29 	.word	0x08000b29

08000d9c <_free_r>:
 8000d9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000d9e:	2900      	cmp	r1, #0
 8000da0:	d044      	beq.n	8000e2c <_free_r+0x90>
 8000da2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000da6:	9001      	str	r0, [sp, #4]
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	f1a1 0404 	sub.w	r4, r1, #4
 8000dae:	bfb8      	it	lt
 8000db0:	18e4      	addlt	r4, r4, r3
 8000db2:	f000 fc6b 	bl	800168c <__malloc_lock>
 8000db6:	4a1e      	ldr	r2, [pc, #120]	; (8000e30 <_free_r+0x94>)
 8000db8:	9801      	ldr	r0, [sp, #4]
 8000dba:	6813      	ldr	r3, [r2, #0]
 8000dbc:	b933      	cbnz	r3, 8000dcc <_free_r+0x30>
 8000dbe:	6063      	str	r3, [r4, #4]
 8000dc0:	6014      	str	r4, [r2, #0]
 8000dc2:	b003      	add	sp, #12
 8000dc4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000dc8:	f000 bc66 	b.w	8001698 <__malloc_unlock>
 8000dcc:	42a3      	cmp	r3, r4
 8000dce:	d908      	bls.n	8000de2 <_free_r+0x46>
 8000dd0:	6825      	ldr	r5, [r4, #0]
 8000dd2:	1961      	adds	r1, r4, r5
 8000dd4:	428b      	cmp	r3, r1
 8000dd6:	bf01      	itttt	eq
 8000dd8:	6819      	ldreq	r1, [r3, #0]
 8000dda:	685b      	ldreq	r3, [r3, #4]
 8000ddc:	1949      	addeq	r1, r1, r5
 8000dde:	6021      	streq	r1, [r4, #0]
 8000de0:	e7ed      	b.n	8000dbe <_free_r+0x22>
 8000de2:	461a      	mov	r2, r3
 8000de4:	685b      	ldr	r3, [r3, #4]
 8000de6:	b10b      	cbz	r3, 8000dec <_free_r+0x50>
 8000de8:	42a3      	cmp	r3, r4
 8000dea:	d9fa      	bls.n	8000de2 <_free_r+0x46>
 8000dec:	6811      	ldr	r1, [r2, #0]
 8000dee:	1855      	adds	r5, r2, r1
 8000df0:	42a5      	cmp	r5, r4
 8000df2:	d10b      	bne.n	8000e0c <_free_r+0x70>
 8000df4:	6824      	ldr	r4, [r4, #0]
 8000df6:	4421      	add	r1, r4
 8000df8:	1854      	adds	r4, r2, r1
 8000dfa:	42a3      	cmp	r3, r4
 8000dfc:	6011      	str	r1, [r2, #0]
 8000dfe:	d1e0      	bne.n	8000dc2 <_free_r+0x26>
 8000e00:	681c      	ldr	r4, [r3, #0]
 8000e02:	685b      	ldr	r3, [r3, #4]
 8000e04:	6053      	str	r3, [r2, #4]
 8000e06:	4421      	add	r1, r4
 8000e08:	6011      	str	r1, [r2, #0]
 8000e0a:	e7da      	b.n	8000dc2 <_free_r+0x26>
 8000e0c:	d902      	bls.n	8000e14 <_free_r+0x78>
 8000e0e:	230c      	movs	r3, #12
 8000e10:	6003      	str	r3, [r0, #0]
 8000e12:	e7d6      	b.n	8000dc2 <_free_r+0x26>
 8000e14:	6825      	ldr	r5, [r4, #0]
 8000e16:	1961      	adds	r1, r4, r5
 8000e18:	428b      	cmp	r3, r1
 8000e1a:	bf04      	itt	eq
 8000e1c:	6819      	ldreq	r1, [r3, #0]
 8000e1e:	685b      	ldreq	r3, [r3, #4]
 8000e20:	6063      	str	r3, [r4, #4]
 8000e22:	bf04      	itt	eq
 8000e24:	1949      	addeq	r1, r1, r5
 8000e26:	6021      	streq	r1, [r4, #0]
 8000e28:	6054      	str	r4, [r2, #4]
 8000e2a:	e7ca      	b.n	8000dc2 <_free_r+0x26>
 8000e2c:	b003      	add	sp, #12
 8000e2e:	bd30      	pop	{r4, r5, pc}
 8000e30:	200000ac 	.word	0x200000ac

08000e34 <sbrk_aligned>:
 8000e34:	b570      	push	{r4, r5, r6, lr}
 8000e36:	4e0e      	ldr	r6, [pc, #56]	; (8000e70 <sbrk_aligned+0x3c>)
 8000e38:	460c      	mov	r4, r1
 8000e3a:	6831      	ldr	r1, [r6, #0]
 8000e3c:	4605      	mov	r5, r0
 8000e3e:	b911      	cbnz	r1, 8000e46 <sbrk_aligned+0x12>
 8000e40:	f000 fb7a 	bl	8001538 <_sbrk_r>
 8000e44:	6030      	str	r0, [r6, #0]
 8000e46:	4621      	mov	r1, r4
 8000e48:	4628      	mov	r0, r5
 8000e4a:	f000 fb75 	bl	8001538 <_sbrk_r>
 8000e4e:	1c43      	adds	r3, r0, #1
 8000e50:	d00a      	beq.n	8000e68 <sbrk_aligned+0x34>
 8000e52:	1cc4      	adds	r4, r0, #3
 8000e54:	f024 0403 	bic.w	r4, r4, #3
 8000e58:	42a0      	cmp	r0, r4
 8000e5a:	d007      	beq.n	8000e6c <sbrk_aligned+0x38>
 8000e5c:	1a21      	subs	r1, r4, r0
 8000e5e:	4628      	mov	r0, r5
 8000e60:	f000 fb6a 	bl	8001538 <_sbrk_r>
 8000e64:	3001      	adds	r0, #1
 8000e66:	d101      	bne.n	8000e6c <sbrk_aligned+0x38>
 8000e68:	f04f 34ff 	mov.w	r4, #4294967295
 8000e6c:	4620      	mov	r0, r4
 8000e6e:	bd70      	pop	{r4, r5, r6, pc}
 8000e70:	200000b0 	.word	0x200000b0

08000e74 <_malloc_r>:
 8000e74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e78:	1ccd      	adds	r5, r1, #3
 8000e7a:	f025 0503 	bic.w	r5, r5, #3
 8000e7e:	3508      	adds	r5, #8
 8000e80:	2d0c      	cmp	r5, #12
 8000e82:	bf38      	it	cc
 8000e84:	250c      	movcc	r5, #12
 8000e86:	2d00      	cmp	r5, #0
 8000e88:	4607      	mov	r7, r0
 8000e8a:	db01      	blt.n	8000e90 <_malloc_r+0x1c>
 8000e8c:	42a9      	cmp	r1, r5
 8000e8e:	d905      	bls.n	8000e9c <_malloc_r+0x28>
 8000e90:	230c      	movs	r3, #12
 8000e92:	603b      	str	r3, [r7, #0]
 8000e94:	2600      	movs	r6, #0
 8000e96:	4630      	mov	r0, r6
 8000e98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000e9c:	4e2e      	ldr	r6, [pc, #184]	; (8000f58 <_malloc_r+0xe4>)
 8000e9e:	f000 fbf5 	bl	800168c <__malloc_lock>
 8000ea2:	6833      	ldr	r3, [r6, #0]
 8000ea4:	461c      	mov	r4, r3
 8000ea6:	bb34      	cbnz	r4, 8000ef6 <_malloc_r+0x82>
 8000ea8:	4629      	mov	r1, r5
 8000eaa:	4638      	mov	r0, r7
 8000eac:	f7ff ffc2 	bl	8000e34 <sbrk_aligned>
 8000eb0:	1c43      	adds	r3, r0, #1
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	d14d      	bne.n	8000f52 <_malloc_r+0xde>
 8000eb6:	6834      	ldr	r4, [r6, #0]
 8000eb8:	4626      	mov	r6, r4
 8000eba:	2e00      	cmp	r6, #0
 8000ebc:	d140      	bne.n	8000f40 <_malloc_r+0xcc>
 8000ebe:	6823      	ldr	r3, [r4, #0]
 8000ec0:	4631      	mov	r1, r6
 8000ec2:	4638      	mov	r0, r7
 8000ec4:	eb04 0803 	add.w	r8, r4, r3
 8000ec8:	f000 fb36 	bl	8001538 <_sbrk_r>
 8000ecc:	4580      	cmp	r8, r0
 8000ece:	d13a      	bne.n	8000f46 <_malloc_r+0xd2>
 8000ed0:	6821      	ldr	r1, [r4, #0]
 8000ed2:	3503      	adds	r5, #3
 8000ed4:	1a6d      	subs	r5, r5, r1
 8000ed6:	f025 0503 	bic.w	r5, r5, #3
 8000eda:	3508      	adds	r5, #8
 8000edc:	2d0c      	cmp	r5, #12
 8000ede:	bf38      	it	cc
 8000ee0:	250c      	movcc	r5, #12
 8000ee2:	4629      	mov	r1, r5
 8000ee4:	4638      	mov	r0, r7
 8000ee6:	f7ff ffa5 	bl	8000e34 <sbrk_aligned>
 8000eea:	3001      	adds	r0, #1
 8000eec:	d02b      	beq.n	8000f46 <_malloc_r+0xd2>
 8000eee:	6823      	ldr	r3, [r4, #0]
 8000ef0:	442b      	add	r3, r5
 8000ef2:	6023      	str	r3, [r4, #0]
 8000ef4:	e00e      	b.n	8000f14 <_malloc_r+0xa0>
 8000ef6:	6822      	ldr	r2, [r4, #0]
 8000ef8:	1b52      	subs	r2, r2, r5
 8000efa:	d41e      	bmi.n	8000f3a <_malloc_r+0xc6>
 8000efc:	2a0b      	cmp	r2, #11
 8000efe:	d916      	bls.n	8000f2e <_malloc_r+0xba>
 8000f00:	1961      	adds	r1, r4, r5
 8000f02:	42a3      	cmp	r3, r4
 8000f04:	6025      	str	r5, [r4, #0]
 8000f06:	bf18      	it	ne
 8000f08:	6059      	strne	r1, [r3, #4]
 8000f0a:	6863      	ldr	r3, [r4, #4]
 8000f0c:	bf08      	it	eq
 8000f0e:	6031      	streq	r1, [r6, #0]
 8000f10:	5162      	str	r2, [r4, r5]
 8000f12:	604b      	str	r3, [r1, #4]
 8000f14:	4638      	mov	r0, r7
 8000f16:	f104 060b 	add.w	r6, r4, #11
 8000f1a:	f000 fbbd 	bl	8001698 <__malloc_unlock>
 8000f1e:	f026 0607 	bic.w	r6, r6, #7
 8000f22:	1d23      	adds	r3, r4, #4
 8000f24:	1af2      	subs	r2, r6, r3
 8000f26:	d0b6      	beq.n	8000e96 <_malloc_r+0x22>
 8000f28:	1b9b      	subs	r3, r3, r6
 8000f2a:	50a3      	str	r3, [r4, r2]
 8000f2c:	e7b3      	b.n	8000e96 <_malloc_r+0x22>
 8000f2e:	6862      	ldr	r2, [r4, #4]
 8000f30:	42a3      	cmp	r3, r4
 8000f32:	bf0c      	ite	eq
 8000f34:	6032      	streq	r2, [r6, #0]
 8000f36:	605a      	strne	r2, [r3, #4]
 8000f38:	e7ec      	b.n	8000f14 <_malloc_r+0xa0>
 8000f3a:	4623      	mov	r3, r4
 8000f3c:	6864      	ldr	r4, [r4, #4]
 8000f3e:	e7b2      	b.n	8000ea6 <_malloc_r+0x32>
 8000f40:	4634      	mov	r4, r6
 8000f42:	6876      	ldr	r6, [r6, #4]
 8000f44:	e7b9      	b.n	8000eba <_malloc_r+0x46>
 8000f46:	230c      	movs	r3, #12
 8000f48:	603b      	str	r3, [r7, #0]
 8000f4a:	4638      	mov	r0, r7
 8000f4c:	f000 fba4 	bl	8001698 <__malloc_unlock>
 8000f50:	e7a1      	b.n	8000e96 <_malloc_r+0x22>
 8000f52:	6025      	str	r5, [r4, #0]
 8000f54:	e7de      	b.n	8000f14 <_malloc_r+0xa0>
 8000f56:	bf00      	nop
 8000f58:	200000ac 	.word	0x200000ac

08000f5c <__sfputc_r>:
 8000f5c:	6893      	ldr	r3, [r2, #8]
 8000f5e:	3b01      	subs	r3, #1
 8000f60:	2b00      	cmp	r3, #0
 8000f62:	b410      	push	{r4}
 8000f64:	6093      	str	r3, [r2, #8]
 8000f66:	da08      	bge.n	8000f7a <__sfputc_r+0x1e>
 8000f68:	6994      	ldr	r4, [r2, #24]
 8000f6a:	42a3      	cmp	r3, r4
 8000f6c:	db01      	blt.n	8000f72 <__sfputc_r+0x16>
 8000f6e:	290a      	cmp	r1, #10
 8000f70:	d103      	bne.n	8000f7a <__sfputc_r+0x1e>
 8000f72:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f76:	f7ff bc31 	b.w	80007dc <__swbuf_r>
 8000f7a:	6813      	ldr	r3, [r2, #0]
 8000f7c:	1c58      	adds	r0, r3, #1
 8000f7e:	6010      	str	r0, [r2, #0]
 8000f80:	7019      	strb	r1, [r3, #0]
 8000f82:	4608      	mov	r0, r1
 8000f84:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f88:	4770      	bx	lr

08000f8a <__sfputs_r>:
 8000f8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f8c:	4606      	mov	r6, r0
 8000f8e:	460f      	mov	r7, r1
 8000f90:	4614      	mov	r4, r2
 8000f92:	18d5      	adds	r5, r2, r3
 8000f94:	42ac      	cmp	r4, r5
 8000f96:	d101      	bne.n	8000f9c <__sfputs_r+0x12>
 8000f98:	2000      	movs	r0, #0
 8000f9a:	e007      	b.n	8000fac <__sfputs_r+0x22>
 8000f9c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000fa0:	463a      	mov	r2, r7
 8000fa2:	4630      	mov	r0, r6
 8000fa4:	f7ff ffda 	bl	8000f5c <__sfputc_r>
 8000fa8:	1c43      	adds	r3, r0, #1
 8000faa:	d1f3      	bne.n	8000f94 <__sfputs_r+0xa>
 8000fac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000fb0 <_vfiprintf_r>:
 8000fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fb4:	460d      	mov	r5, r1
 8000fb6:	b09d      	sub	sp, #116	; 0x74
 8000fb8:	4614      	mov	r4, r2
 8000fba:	4698      	mov	r8, r3
 8000fbc:	4606      	mov	r6, r0
 8000fbe:	b118      	cbz	r0, 8000fc8 <_vfiprintf_r+0x18>
 8000fc0:	6983      	ldr	r3, [r0, #24]
 8000fc2:	b90b      	cbnz	r3, 8000fc8 <_vfiprintf_r+0x18>
 8000fc4:	f7ff fde4 	bl	8000b90 <__sinit>
 8000fc8:	4b89      	ldr	r3, [pc, #548]	; (80011f0 <_vfiprintf_r+0x240>)
 8000fca:	429d      	cmp	r5, r3
 8000fcc:	d11b      	bne.n	8001006 <_vfiprintf_r+0x56>
 8000fce:	6875      	ldr	r5, [r6, #4]
 8000fd0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000fd2:	07d9      	lsls	r1, r3, #31
 8000fd4:	d405      	bmi.n	8000fe2 <_vfiprintf_r+0x32>
 8000fd6:	89ab      	ldrh	r3, [r5, #12]
 8000fd8:	059a      	lsls	r2, r3, #22
 8000fda:	d402      	bmi.n	8000fe2 <_vfiprintf_r+0x32>
 8000fdc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000fde:	f7ff fe75 	bl	8000ccc <__retarget_lock_acquire_recursive>
 8000fe2:	89ab      	ldrh	r3, [r5, #12]
 8000fe4:	071b      	lsls	r3, r3, #28
 8000fe6:	d501      	bpl.n	8000fec <_vfiprintf_r+0x3c>
 8000fe8:	692b      	ldr	r3, [r5, #16]
 8000fea:	b9eb      	cbnz	r3, 8001028 <_vfiprintf_r+0x78>
 8000fec:	4629      	mov	r1, r5
 8000fee:	4630      	mov	r0, r6
 8000ff0:	f7ff fc46 	bl	8000880 <__swsetup_r>
 8000ff4:	b1c0      	cbz	r0, 8001028 <_vfiprintf_r+0x78>
 8000ff6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ff8:	07dc      	lsls	r4, r3, #31
 8000ffa:	d50e      	bpl.n	800101a <_vfiprintf_r+0x6a>
 8000ffc:	f04f 30ff 	mov.w	r0, #4294967295
 8001000:	b01d      	add	sp, #116	; 0x74
 8001002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001006:	4b7b      	ldr	r3, [pc, #492]	; (80011f4 <_vfiprintf_r+0x244>)
 8001008:	429d      	cmp	r5, r3
 800100a:	d101      	bne.n	8001010 <_vfiprintf_r+0x60>
 800100c:	68b5      	ldr	r5, [r6, #8]
 800100e:	e7df      	b.n	8000fd0 <_vfiprintf_r+0x20>
 8001010:	4b79      	ldr	r3, [pc, #484]	; (80011f8 <_vfiprintf_r+0x248>)
 8001012:	429d      	cmp	r5, r3
 8001014:	bf08      	it	eq
 8001016:	68f5      	ldreq	r5, [r6, #12]
 8001018:	e7da      	b.n	8000fd0 <_vfiprintf_r+0x20>
 800101a:	89ab      	ldrh	r3, [r5, #12]
 800101c:	0598      	lsls	r0, r3, #22
 800101e:	d4ed      	bmi.n	8000ffc <_vfiprintf_r+0x4c>
 8001020:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001022:	f7ff fe54 	bl	8000cce <__retarget_lock_release_recursive>
 8001026:	e7e9      	b.n	8000ffc <_vfiprintf_r+0x4c>
 8001028:	2300      	movs	r3, #0
 800102a:	9309      	str	r3, [sp, #36]	; 0x24
 800102c:	2320      	movs	r3, #32
 800102e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001032:	f8cd 800c 	str.w	r8, [sp, #12]
 8001036:	2330      	movs	r3, #48	; 0x30
 8001038:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80011fc <_vfiprintf_r+0x24c>
 800103c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001040:	f04f 0901 	mov.w	r9, #1
 8001044:	4623      	mov	r3, r4
 8001046:	469a      	mov	sl, r3
 8001048:	f813 2b01 	ldrb.w	r2, [r3], #1
 800104c:	b10a      	cbz	r2, 8001052 <_vfiprintf_r+0xa2>
 800104e:	2a25      	cmp	r2, #37	; 0x25
 8001050:	d1f9      	bne.n	8001046 <_vfiprintf_r+0x96>
 8001052:	ebba 0b04 	subs.w	fp, sl, r4
 8001056:	d00b      	beq.n	8001070 <_vfiprintf_r+0xc0>
 8001058:	465b      	mov	r3, fp
 800105a:	4622      	mov	r2, r4
 800105c:	4629      	mov	r1, r5
 800105e:	4630      	mov	r0, r6
 8001060:	f7ff ff93 	bl	8000f8a <__sfputs_r>
 8001064:	3001      	adds	r0, #1
 8001066:	f000 80aa 	beq.w	80011be <_vfiprintf_r+0x20e>
 800106a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800106c:	445a      	add	r2, fp
 800106e:	9209      	str	r2, [sp, #36]	; 0x24
 8001070:	f89a 3000 	ldrb.w	r3, [sl]
 8001074:	2b00      	cmp	r3, #0
 8001076:	f000 80a2 	beq.w	80011be <_vfiprintf_r+0x20e>
 800107a:	2300      	movs	r3, #0
 800107c:	f04f 32ff 	mov.w	r2, #4294967295
 8001080:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001084:	f10a 0a01 	add.w	sl, sl, #1
 8001088:	9304      	str	r3, [sp, #16]
 800108a:	9307      	str	r3, [sp, #28]
 800108c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001090:	931a      	str	r3, [sp, #104]	; 0x68
 8001092:	4654      	mov	r4, sl
 8001094:	2205      	movs	r2, #5
 8001096:	f814 1b01 	ldrb.w	r1, [r4], #1
 800109a:	4858      	ldr	r0, [pc, #352]	; (80011fc <_vfiprintf_r+0x24c>)
 800109c:	f7ff f8a0 	bl	80001e0 <memchr>
 80010a0:	9a04      	ldr	r2, [sp, #16]
 80010a2:	b9d8      	cbnz	r0, 80010dc <_vfiprintf_r+0x12c>
 80010a4:	06d1      	lsls	r1, r2, #27
 80010a6:	bf44      	itt	mi
 80010a8:	2320      	movmi	r3, #32
 80010aa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80010ae:	0713      	lsls	r3, r2, #28
 80010b0:	bf44      	itt	mi
 80010b2:	232b      	movmi	r3, #43	; 0x2b
 80010b4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80010b8:	f89a 3000 	ldrb.w	r3, [sl]
 80010bc:	2b2a      	cmp	r3, #42	; 0x2a
 80010be:	d015      	beq.n	80010ec <_vfiprintf_r+0x13c>
 80010c0:	9a07      	ldr	r2, [sp, #28]
 80010c2:	4654      	mov	r4, sl
 80010c4:	2000      	movs	r0, #0
 80010c6:	f04f 0c0a 	mov.w	ip, #10
 80010ca:	4621      	mov	r1, r4
 80010cc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80010d0:	3b30      	subs	r3, #48	; 0x30
 80010d2:	2b09      	cmp	r3, #9
 80010d4:	d94e      	bls.n	8001174 <_vfiprintf_r+0x1c4>
 80010d6:	b1b0      	cbz	r0, 8001106 <_vfiprintf_r+0x156>
 80010d8:	9207      	str	r2, [sp, #28]
 80010da:	e014      	b.n	8001106 <_vfiprintf_r+0x156>
 80010dc:	eba0 0308 	sub.w	r3, r0, r8
 80010e0:	fa09 f303 	lsl.w	r3, r9, r3
 80010e4:	4313      	orrs	r3, r2
 80010e6:	9304      	str	r3, [sp, #16]
 80010e8:	46a2      	mov	sl, r4
 80010ea:	e7d2      	b.n	8001092 <_vfiprintf_r+0xe2>
 80010ec:	9b03      	ldr	r3, [sp, #12]
 80010ee:	1d19      	adds	r1, r3, #4
 80010f0:	681b      	ldr	r3, [r3, #0]
 80010f2:	9103      	str	r1, [sp, #12]
 80010f4:	2b00      	cmp	r3, #0
 80010f6:	bfbb      	ittet	lt
 80010f8:	425b      	neglt	r3, r3
 80010fa:	f042 0202 	orrlt.w	r2, r2, #2
 80010fe:	9307      	strge	r3, [sp, #28]
 8001100:	9307      	strlt	r3, [sp, #28]
 8001102:	bfb8      	it	lt
 8001104:	9204      	strlt	r2, [sp, #16]
 8001106:	7823      	ldrb	r3, [r4, #0]
 8001108:	2b2e      	cmp	r3, #46	; 0x2e
 800110a:	d10c      	bne.n	8001126 <_vfiprintf_r+0x176>
 800110c:	7863      	ldrb	r3, [r4, #1]
 800110e:	2b2a      	cmp	r3, #42	; 0x2a
 8001110:	d135      	bne.n	800117e <_vfiprintf_r+0x1ce>
 8001112:	9b03      	ldr	r3, [sp, #12]
 8001114:	1d1a      	adds	r2, r3, #4
 8001116:	681b      	ldr	r3, [r3, #0]
 8001118:	9203      	str	r2, [sp, #12]
 800111a:	2b00      	cmp	r3, #0
 800111c:	bfb8      	it	lt
 800111e:	f04f 33ff 	movlt.w	r3, #4294967295
 8001122:	3402      	adds	r4, #2
 8001124:	9305      	str	r3, [sp, #20]
 8001126:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800120c <_vfiprintf_r+0x25c>
 800112a:	7821      	ldrb	r1, [r4, #0]
 800112c:	2203      	movs	r2, #3
 800112e:	4650      	mov	r0, sl
 8001130:	f7ff f856 	bl	80001e0 <memchr>
 8001134:	b140      	cbz	r0, 8001148 <_vfiprintf_r+0x198>
 8001136:	2340      	movs	r3, #64	; 0x40
 8001138:	eba0 000a 	sub.w	r0, r0, sl
 800113c:	fa03 f000 	lsl.w	r0, r3, r0
 8001140:	9b04      	ldr	r3, [sp, #16]
 8001142:	4303      	orrs	r3, r0
 8001144:	3401      	adds	r4, #1
 8001146:	9304      	str	r3, [sp, #16]
 8001148:	f814 1b01 	ldrb.w	r1, [r4], #1
 800114c:	482c      	ldr	r0, [pc, #176]	; (8001200 <_vfiprintf_r+0x250>)
 800114e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001152:	2206      	movs	r2, #6
 8001154:	f7ff f844 	bl	80001e0 <memchr>
 8001158:	2800      	cmp	r0, #0
 800115a:	d03f      	beq.n	80011dc <_vfiprintf_r+0x22c>
 800115c:	4b29      	ldr	r3, [pc, #164]	; (8001204 <_vfiprintf_r+0x254>)
 800115e:	bb1b      	cbnz	r3, 80011a8 <_vfiprintf_r+0x1f8>
 8001160:	9b03      	ldr	r3, [sp, #12]
 8001162:	3307      	adds	r3, #7
 8001164:	f023 0307 	bic.w	r3, r3, #7
 8001168:	3308      	adds	r3, #8
 800116a:	9303      	str	r3, [sp, #12]
 800116c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800116e:	443b      	add	r3, r7
 8001170:	9309      	str	r3, [sp, #36]	; 0x24
 8001172:	e767      	b.n	8001044 <_vfiprintf_r+0x94>
 8001174:	fb0c 3202 	mla	r2, ip, r2, r3
 8001178:	460c      	mov	r4, r1
 800117a:	2001      	movs	r0, #1
 800117c:	e7a5      	b.n	80010ca <_vfiprintf_r+0x11a>
 800117e:	2300      	movs	r3, #0
 8001180:	3401      	adds	r4, #1
 8001182:	9305      	str	r3, [sp, #20]
 8001184:	4619      	mov	r1, r3
 8001186:	f04f 0c0a 	mov.w	ip, #10
 800118a:	4620      	mov	r0, r4
 800118c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001190:	3a30      	subs	r2, #48	; 0x30
 8001192:	2a09      	cmp	r2, #9
 8001194:	d903      	bls.n	800119e <_vfiprintf_r+0x1ee>
 8001196:	2b00      	cmp	r3, #0
 8001198:	d0c5      	beq.n	8001126 <_vfiprintf_r+0x176>
 800119a:	9105      	str	r1, [sp, #20]
 800119c:	e7c3      	b.n	8001126 <_vfiprintf_r+0x176>
 800119e:	fb0c 2101 	mla	r1, ip, r1, r2
 80011a2:	4604      	mov	r4, r0
 80011a4:	2301      	movs	r3, #1
 80011a6:	e7f0      	b.n	800118a <_vfiprintf_r+0x1da>
 80011a8:	ab03      	add	r3, sp, #12
 80011aa:	9300      	str	r3, [sp, #0]
 80011ac:	462a      	mov	r2, r5
 80011ae:	4b16      	ldr	r3, [pc, #88]	; (8001208 <_vfiprintf_r+0x258>)
 80011b0:	a904      	add	r1, sp, #16
 80011b2:	4630      	mov	r0, r6
 80011b4:	f3af 8000 	nop.w
 80011b8:	4607      	mov	r7, r0
 80011ba:	1c78      	adds	r0, r7, #1
 80011bc:	d1d6      	bne.n	800116c <_vfiprintf_r+0x1bc>
 80011be:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80011c0:	07d9      	lsls	r1, r3, #31
 80011c2:	d405      	bmi.n	80011d0 <_vfiprintf_r+0x220>
 80011c4:	89ab      	ldrh	r3, [r5, #12]
 80011c6:	059a      	lsls	r2, r3, #22
 80011c8:	d402      	bmi.n	80011d0 <_vfiprintf_r+0x220>
 80011ca:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80011cc:	f7ff fd7f 	bl	8000cce <__retarget_lock_release_recursive>
 80011d0:	89ab      	ldrh	r3, [r5, #12]
 80011d2:	065b      	lsls	r3, r3, #25
 80011d4:	f53f af12 	bmi.w	8000ffc <_vfiprintf_r+0x4c>
 80011d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80011da:	e711      	b.n	8001000 <_vfiprintf_r+0x50>
 80011dc:	ab03      	add	r3, sp, #12
 80011de:	9300      	str	r3, [sp, #0]
 80011e0:	462a      	mov	r2, r5
 80011e2:	4b09      	ldr	r3, [pc, #36]	; (8001208 <_vfiprintf_r+0x258>)
 80011e4:	a904      	add	r1, sp, #16
 80011e6:	4630      	mov	r0, r6
 80011e8:	f000 f880 	bl	80012ec <_printf_i>
 80011ec:	e7e4      	b.n	80011b8 <_vfiprintf_r+0x208>
 80011ee:	bf00      	nop
 80011f0:	08001724 	.word	0x08001724
 80011f4:	08001744 	.word	0x08001744
 80011f8:	08001704 	.word	0x08001704
 80011fc:	08001764 	.word	0x08001764
 8001200:	0800176e 	.word	0x0800176e
 8001204:	00000000 	.word	0x00000000
 8001208:	08000f8b 	.word	0x08000f8b
 800120c:	0800176a 	.word	0x0800176a

08001210 <_printf_common>:
 8001210:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001214:	4616      	mov	r6, r2
 8001216:	4699      	mov	r9, r3
 8001218:	688a      	ldr	r2, [r1, #8]
 800121a:	690b      	ldr	r3, [r1, #16]
 800121c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001220:	4293      	cmp	r3, r2
 8001222:	bfb8      	it	lt
 8001224:	4613      	movlt	r3, r2
 8001226:	6033      	str	r3, [r6, #0]
 8001228:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800122c:	4607      	mov	r7, r0
 800122e:	460c      	mov	r4, r1
 8001230:	b10a      	cbz	r2, 8001236 <_printf_common+0x26>
 8001232:	3301      	adds	r3, #1
 8001234:	6033      	str	r3, [r6, #0]
 8001236:	6823      	ldr	r3, [r4, #0]
 8001238:	0699      	lsls	r1, r3, #26
 800123a:	bf42      	ittt	mi
 800123c:	6833      	ldrmi	r3, [r6, #0]
 800123e:	3302      	addmi	r3, #2
 8001240:	6033      	strmi	r3, [r6, #0]
 8001242:	6825      	ldr	r5, [r4, #0]
 8001244:	f015 0506 	ands.w	r5, r5, #6
 8001248:	d106      	bne.n	8001258 <_printf_common+0x48>
 800124a:	f104 0a19 	add.w	sl, r4, #25
 800124e:	68e3      	ldr	r3, [r4, #12]
 8001250:	6832      	ldr	r2, [r6, #0]
 8001252:	1a9b      	subs	r3, r3, r2
 8001254:	42ab      	cmp	r3, r5
 8001256:	dc26      	bgt.n	80012a6 <_printf_common+0x96>
 8001258:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800125c:	1e13      	subs	r3, r2, #0
 800125e:	6822      	ldr	r2, [r4, #0]
 8001260:	bf18      	it	ne
 8001262:	2301      	movne	r3, #1
 8001264:	0692      	lsls	r2, r2, #26
 8001266:	d42b      	bmi.n	80012c0 <_printf_common+0xb0>
 8001268:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800126c:	4649      	mov	r1, r9
 800126e:	4638      	mov	r0, r7
 8001270:	47c0      	blx	r8
 8001272:	3001      	adds	r0, #1
 8001274:	d01e      	beq.n	80012b4 <_printf_common+0xa4>
 8001276:	6823      	ldr	r3, [r4, #0]
 8001278:	68e5      	ldr	r5, [r4, #12]
 800127a:	6832      	ldr	r2, [r6, #0]
 800127c:	f003 0306 	and.w	r3, r3, #6
 8001280:	2b04      	cmp	r3, #4
 8001282:	bf08      	it	eq
 8001284:	1aad      	subeq	r5, r5, r2
 8001286:	68a3      	ldr	r3, [r4, #8]
 8001288:	6922      	ldr	r2, [r4, #16]
 800128a:	bf0c      	ite	eq
 800128c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001290:	2500      	movne	r5, #0
 8001292:	4293      	cmp	r3, r2
 8001294:	bfc4      	itt	gt
 8001296:	1a9b      	subgt	r3, r3, r2
 8001298:	18ed      	addgt	r5, r5, r3
 800129a:	2600      	movs	r6, #0
 800129c:	341a      	adds	r4, #26
 800129e:	42b5      	cmp	r5, r6
 80012a0:	d11a      	bne.n	80012d8 <_printf_common+0xc8>
 80012a2:	2000      	movs	r0, #0
 80012a4:	e008      	b.n	80012b8 <_printf_common+0xa8>
 80012a6:	2301      	movs	r3, #1
 80012a8:	4652      	mov	r2, sl
 80012aa:	4649      	mov	r1, r9
 80012ac:	4638      	mov	r0, r7
 80012ae:	47c0      	blx	r8
 80012b0:	3001      	adds	r0, #1
 80012b2:	d103      	bne.n	80012bc <_printf_common+0xac>
 80012b4:	f04f 30ff 	mov.w	r0, #4294967295
 80012b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012bc:	3501      	adds	r5, #1
 80012be:	e7c6      	b.n	800124e <_printf_common+0x3e>
 80012c0:	18e1      	adds	r1, r4, r3
 80012c2:	1c5a      	adds	r2, r3, #1
 80012c4:	2030      	movs	r0, #48	; 0x30
 80012c6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80012ca:	4422      	add	r2, r4
 80012cc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80012d0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80012d4:	3302      	adds	r3, #2
 80012d6:	e7c7      	b.n	8001268 <_printf_common+0x58>
 80012d8:	2301      	movs	r3, #1
 80012da:	4622      	mov	r2, r4
 80012dc:	4649      	mov	r1, r9
 80012de:	4638      	mov	r0, r7
 80012e0:	47c0      	blx	r8
 80012e2:	3001      	adds	r0, #1
 80012e4:	d0e6      	beq.n	80012b4 <_printf_common+0xa4>
 80012e6:	3601      	adds	r6, #1
 80012e8:	e7d9      	b.n	800129e <_printf_common+0x8e>
	...

080012ec <_printf_i>:
 80012ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80012f0:	7e0f      	ldrb	r7, [r1, #24]
 80012f2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80012f4:	2f78      	cmp	r7, #120	; 0x78
 80012f6:	4691      	mov	r9, r2
 80012f8:	4680      	mov	r8, r0
 80012fa:	460c      	mov	r4, r1
 80012fc:	469a      	mov	sl, r3
 80012fe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001302:	d807      	bhi.n	8001314 <_printf_i+0x28>
 8001304:	2f62      	cmp	r7, #98	; 0x62
 8001306:	d80a      	bhi.n	800131e <_printf_i+0x32>
 8001308:	2f00      	cmp	r7, #0
 800130a:	f000 80d8 	beq.w	80014be <_printf_i+0x1d2>
 800130e:	2f58      	cmp	r7, #88	; 0x58
 8001310:	f000 80a3 	beq.w	800145a <_printf_i+0x16e>
 8001314:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001318:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800131c:	e03a      	b.n	8001394 <_printf_i+0xa8>
 800131e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001322:	2b15      	cmp	r3, #21
 8001324:	d8f6      	bhi.n	8001314 <_printf_i+0x28>
 8001326:	a101      	add	r1, pc, #4	; (adr r1, 800132c <_printf_i+0x40>)
 8001328:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800132c:	08001385 	.word	0x08001385
 8001330:	08001399 	.word	0x08001399
 8001334:	08001315 	.word	0x08001315
 8001338:	08001315 	.word	0x08001315
 800133c:	08001315 	.word	0x08001315
 8001340:	08001315 	.word	0x08001315
 8001344:	08001399 	.word	0x08001399
 8001348:	08001315 	.word	0x08001315
 800134c:	08001315 	.word	0x08001315
 8001350:	08001315 	.word	0x08001315
 8001354:	08001315 	.word	0x08001315
 8001358:	080014a5 	.word	0x080014a5
 800135c:	080013c9 	.word	0x080013c9
 8001360:	08001487 	.word	0x08001487
 8001364:	08001315 	.word	0x08001315
 8001368:	08001315 	.word	0x08001315
 800136c:	080014c7 	.word	0x080014c7
 8001370:	08001315 	.word	0x08001315
 8001374:	080013c9 	.word	0x080013c9
 8001378:	08001315 	.word	0x08001315
 800137c:	08001315 	.word	0x08001315
 8001380:	0800148f 	.word	0x0800148f
 8001384:	682b      	ldr	r3, [r5, #0]
 8001386:	1d1a      	adds	r2, r3, #4
 8001388:	681b      	ldr	r3, [r3, #0]
 800138a:	602a      	str	r2, [r5, #0]
 800138c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001390:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001394:	2301      	movs	r3, #1
 8001396:	e0a3      	b.n	80014e0 <_printf_i+0x1f4>
 8001398:	6820      	ldr	r0, [r4, #0]
 800139a:	6829      	ldr	r1, [r5, #0]
 800139c:	0606      	lsls	r6, r0, #24
 800139e:	f101 0304 	add.w	r3, r1, #4
 80013a2:	d50a      	bpl.n	80013ba <_printf_i+0xce>
 80013a4:	680e      	ldr	r6, [r1, #0]
 80013a6:	602b      	str	r3, [r5, #0]
 80013a8:	2e00      	cmp	r6, #0
 80013aa:	da03      	bge.n	80013b4 <_printf_i+0xc8>
 80013ac:	232d      	movs	r3, #45	; 0x2d
 80013ae:	4276      	negs	r6, r6
 80013b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013b4:	485e      	ldr	r0, [pc, #376]	; (8001530 <_printf_i+0x244>)
 80013b6:	230a      	movs	r3, #10
 80013b8:	e019      	b.n	80013ee <_printf_i+0x102>
 80013ba:	680e      	ldr	r6, [r1, #0]
 80013bc:	602b      	str	r3, [r5, #0]
 80013be:	f010 0f40 	tst.w	r0, #64	; 0x40
 80013c2:	bf18      	it	ne
 80013c4:	b236      	sxthne	r6, r6
 80013c6:	e7ef      	b.n	80013a8 <_printf_i+0xbc>
 80013c8:	682b      	ldr	r3, [r5, #0]
 80013ca:	6820      	ldr	r0, [r4, #0]
 80013cc:	1d19      	adds	r1, r3, #4
 80013ce:	6029      	str	r1, [r5, #0]
 80013d0:	0601      	lsls	r1, r0, #24
 80013d2:	d501      	bpl.n	80013d8 <_printf_i+0xec>
 80013d4:	681e      	ldr	r6, [r3, #0]
 80013d6:	e002      	b.n	80013de <_printf_i+0xf2>
 80013d8:	0646      	lsls	r6, r0, #25
 80013da:	d5fb      	bpl.n	80013d4 <_printf_i+0xe8>
 80013dc:	881e      	ldrh	r6, [r3, #0]
 80013de:	4854      	ldr	r0, [pc, #336]	; (8001530 <_printf_i+0x244>)
 80013e0:	2f6f      	cmp	r7, #111	; 0x6f
 80013e2:	bf0c      	ite	eq
 80013e4:	2308      	moveq	r3, #8
 80013e6:	230a      	movne	r3, #10
 80013e8:	2100      	movs	r1, #0
 80013ea:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80013ee:	6865      	ldr	r5, [r4, #4]
 80013f0:	60a5      	str	r5, [r4, #8]
 80013f2:	2d00      	cmp	r5, #0
 80013f4:	bfa2      	ittt	ge
 80013f6:	6821      	ldrge	r1, [r4, #0]
 80013f8:	f021 0104 	bicge.w	r1, r1, #4
 80013fc:	6021      	strge	r1, [r4, #0]
 80013fe:	b90e      	cbnz	r6, 8001404 <_printf_i+0x118>
 8001400:	2d00      	cmp	r5, #0
 8001402:	d04d      	beq.n	80014a0 <_printf_i+0x1b4>
 8001404:	4615      	mov	r5, r2
 8001406:	fbb6 f1f3 	udiv	r1, r6, r3
 800140a:	fb03 6711 	mls	r7, r3, r1, r6
 800140e:	5dc7      	ldrb	r7, [r0, r7]
 8001410:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001414:	4637      	mov	r7, r6
 8001416:	42bb      	cmp	r3, r7
 8001418:	460e      	mov	r6, r1
 800141a:	d9f4      	bls.n	8001406 <_printf_i+0x11a>
 800141c:	2b08      	cmp	r3, #8
 800141e:	d10b      	bne.n	8001438 <_printf_i+0x14c>
 8001420:	6823      	ldr	r3, [r4, #0]
 8001422:	07de      	lsls	r6, r3, #31
 8001424:	d508      	bpl.n	8001438 <_printf_i+0x14c>
 8001426:	6923      	ldr	r3, [r4, #16]
 8001428:	6861      	ldr	r1, [r4, #4]
 800142a:	4299      	cmp	r1, r3
 800142c:	bfde      	ittt	le
 800142e:	2330      	movle	r3, #48	; 0x30
 8001430:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001434:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001438:	1b52      	subs	r2, r2, r5
 800143a:	6122      	str	r2, [r4, #16]
 800143c:	f8cd a000 	str.w	sl, [sp]
 8001440:	464b      	mov	r3, r9
 8001442:	aa03      	add	r2, sp, #12
 8001444:	4621      	mov	r1, r4
 8001446:	4640      	mov	r0, r8
 8001448:	f7ff fee2 	bl	8001210 <_printf_common>
 800144c:	3001      	adds	r0, #1
 800144e:	d14c      	bne.n	80014ea <_printf_i+0x1fe>
 8001450:	f04f 30ff 	mov.w	r0, #4294967295
 8001454:	b004      	add	sp, #16
 8001456:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800145a:	4835      	ldr	r0, [pc, #212]	; (8001530 <_printf_i+0x244>)
 800145c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001460:	6829      	ldr	r1, [r5, #0]
 8001462:	6823      	ldr	r3, [r4, #0]
 8001464:	f851 6b04 	ldr.w	r6, [r1], #4
 8001468:	6029      	str	r1, [r5, #0]
 800146a:	061d      	lsls	r5, r3, #24
 800146c:	d514      	bpl.n	8001498 <_printf_i+0x1ac>
 800146e:	07df      	lsls	r7, r3, #31
 8001470:	bf44      	itt	mi
 8001472:	f043 0320 	orrmi.w	r3, r3, #32
 8001476:	6023      	strmi	r3, [r4, #0]
 8001478:	b91e      	cbnz	r6, 8001482 <_printf_i+0x196>
 800147a:	6823      	ldr	r3, [r4, #0]
 800147c:	f023 0320 	bic.w	r3, r3, #32
 8001480:	6023      	str	r3, [r4, #0]
 8001482:	2310      	movs	r3, #16
 8001484:	e7b0      	b.n	80013e8 <_printf_i+0xfc>
 8001486:	6823      	ldr	r3, [r4, #0]
 8001488:	f043 0320 	orr.w	r3, r3, #32
 800148c:	6023      	str	r3, [r4, #0]
 800148e:	2378      	movs	r3, #120	; 0x78
 8001490:	4828      	ldr	r0, [pc, #160]	; (8001534 <_printf_i+0x248>)
 8001492:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001496:	e7e3      	b.n	8001460 <_printf_i+0x174>
 8001498:	0659      	lsls	r1, r3, #25
 800149a:	bf48      	it	mi
 800149c:	b2b6      	uxthmi	r6, r6
 800149e:	e7e6      	b.n	800146e <_printf_i+0x182>
 80014a0:	4615      	mov	r5, r2
 80014a2:	e7bb      	b.n	800141c <_printf_i+0x130>
 80014a4:	682b      	ldr	r3, [r5, #0]
 80014a6:	6826      	ldr	r6, [r4, #0]
 80014a8:	6961      	ldr	r1, [r4, #20]
 80014aa:	1d18      	adds	r0, r3, #4
 80014ac:	6028      	str	r0, [r5, #0]
 80014ae:	0635      	lsls	r5, r6, #24
 80014b0:	681b      	ldr	r3, [r3, #0]
 80014b2:	d501      	bpl.n	80014b8 <_printf_i+0x1cc>
 80014b4:	6019      	str	r1, [r3, #0]
 80014b6:	e002      	b.n	80014be <_printf_i+0x1d2>
 80014b8:	0670      	lsls	r0, r6, #25
 80014ba:	d5fb      	bpl.n	80014b4 <_printf_i+0x1c8>
 80014bc:	8019      	strh	r1, [r3, #0]
 80014be:	2300      	movs	r3, #0
 80014c0:	6123      	str	r3, [r4, #16]
 80014c2:	4615      	mov	r5, r2
 80014c4:	e7ba      	b.n	800143c <_printf_i+0x150>
 80014c6:	682b      	ldr	r3, [r5, #0]
 80014c8:	1d1a      	adds	r2, r3, #4
 80014ca:	602a      	str	r2, [r5, #0]
 80014cc:	681d      	ldr	r5, [r3, #0]
 80014ce:	6862      	ldr	r2, [r4, #4]
 80014d0:	2100      	movs	r1, #0
 80014d2:	4628      	mov	r0, r5
 80014d4:	f7fe fe84 	bl	80001e0 <memchr>
 80014d8:	b108      	cbz	r0, 80014de <_printf_i+0x1f2>
 80014da:	1b40      	subs	r0, r0, r5
 80014dc:	6060      	str	r0, [r4, #4]
 80014de:	6863      	ldr	r3, [r4, #4]
 80014e0:	6123      	str	r3, [r4, #16]
 80014e2:	2300      	movs	r3, #0
 80014e4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80014e8:	e7a8      	b.n	800143c <_printf_i+0x150>
 80014ea:	6923      	ldr	r3, [r4, #16]
 80014ec:	462a      	mov	r2, r5
 80014ee:	4649      	mov	r1, r9
 80014f0:	4640      	mov	r0, r8
 80014f2:	47d0      	blx	sl
 80014f4:	3001      	adds	r0, #1
 80014f6:	d0ab      	beq.n	8001450 <_printf_i+0x164>
 80014f8:	6823      	ldr	r3, [r4, #0]
 80014fa:	079b      	lsls	r3, r3, #30
 80014fc:	d413      	bmi.n	8001526 <_printf_i+0x23a>
 80014fe:	68e0      	ldr	r0, [r4, #12]
 8001500:	9b03      	ldr	r3, [sp, #12]
 8001502:	4298      	cmp	r0, r3
 8001504:	bfb8      	it	lt
 8001506:	4618      	movlt	r0, r3
 8001508:	e7a4      	b.n	8001454 <_printf_i+0x168>
 800150a:	2301      	movs	r3, #1
 800150c:	4632      	mov	r2, r6
 800150e:	4649      	mov	r1, r9
 8001510:	4640      	mov	r0, r8
 8001512:	47d0      	blx	sl
 8001514:	3001      	adds	r0, #1
 8001516:	d09b      	beq.n	8001450 <_printf_i+0x164>
 8001518:	3501      	adds	r5, #1
 800151a:	68e3      	ldr	r3, [r4, #12]
 800151c:	9903      	ldr	r1, [sp, #12]
 800151e:	1a5b      	subs	r3, r3, r1
 8001520:	42ab      	cmp	r3, r5
 8001522:	dcf2      	bgt.n	800150a <_printf_i+0x21e>
 8001524:	e7eb      	b.n	80014fe <_printf_i+0x212>
 8001526:	2500      	movs	r5, #0
 8001528:	f104 0619 	add.w	r6, r4, #25
 800152c:	e7f5      	b.n	800151a <_printf_i+0x22e>
 800152e:	bf00      	nop
 8001530:	08001775 	.word	0x08001775
 8001534:	08001786 	.word	0x08001786

08001538 <_sbrk_r>:
 8001538:	b538      	push	{r3, r4, r5, lr}
 800153a:	4d06      	ldr	r5, [pc, #24]	; (8001554 <_sbrk_r+0x1c>)
 800153c:	2300      	movs	r3, #0
 800153e:	4604      	mov	r4, r0
 8001540:	4608      	mov	r0, r1
 8001542:	602b      	str	r3, [r5, #0]
 8001544:	f7ff f82a 	bl	800059c <_sbrk>
 8001548:	1c43      	adds	r3, r0, #1
 800154a:	d102      	bne.n	8001552 <_sbrk_r+0x1a>
 800154c:	682b      	ldr	r3, [r5, #0]
 800154e:	b103      	cbz	r3, 8001552 <_sbrk_r+0x1a>
 8001550:	6023      	str	r3, [r4, #0]
 8001552:	bd38      	pop	{r3, r4, r5, pc}
 8001554:	200000b4 	.word	0x200000b4

08001558 <__sread>:
 8001558:	b510      	push	{r4, lr}
 800155a:	460c      	mov	r4, r1
 800155c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001560:	f000 f8a0 	bl	80016a4 <_read_r>
 8001564:	2800      	cmp	r0, #0
 8001566:	bfab      	itete	ge
 8001568:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800156a:	89a3      	ldrhlt	r3, [r4, #12]
 800156c:	181b      	addge	r3, r3, r0
 800156e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001572:	bfac      	ite	ge
 8001574:	6563      	strge	r3, [r4, #84]	; 0x54
 8001576:	81a3      	strhlt	r3, [r4, #12]
 8001578:	bd10      	pop	{r4, pc}

0800157a <__swrite>:
 800157a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800157e:	461f      	mov	r7, r3
 8001580:	898b      	ldrh	r3, [r1, #12]
 8001582:	05db      	lsls	r3, r3, #23
 8001584:	4605      	mov	r5, r0
 8001586:	460c      	mov	r4, r1
 8001588:	4616      	mov	r6, r2
 800158a:	d505      	bpl.n	8001598 <__swrite+0x1e>
 800158c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001590:	2302      	movs	r3, #2
 8001592:	2200      	movs	r2, #0
 8001594:	f000 f868 	bl	8001668 <_lseek_r>
 8001598:	89a3      	ldrh	r3, [r4, #12]
 800159a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800159e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80015a2:	81a3      	strh	r3, [r4, #12]
 80015a4:	4632      	mov	r2, r6
 80015a6:	463b      	mov	r3, r7
 80015a8:	4628      	mov	r0, r5
 80015aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80015ae:	f000 b817 	b.w	80015e0 <_write_r>

080015b2 <__sseek>:
 80015b2:	b510      	push	{r4, lr}
 80015b4:	460c      	mov	r4, r1
 80015b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015ba:	f000 f855 	bl	8001668 <_lseek_r>
 80015be:	1c43      	adds	r3, r0, #1
 80015c0:	89a3      	ldrh	r3, [r4, #12]
 80015c2:	bf15      	itete	ne
 80015c4:	6560      	strne	r0, [r4, #84]	; 0x54
 80015c6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80015ca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80015ce:	81a3      	strheq	r3, [r4, #12]
 80015d0:	bf18      	it	ne
 80015d2:	81a3      	strhne	r3, [r4, #12]
 80015d4:	bd10      	pop	{r4, pc}

080015d6 <__sclose>:
 80015d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015da:	f000 b813 	b.w	8001604 <_close_r>
	...

080015e0 <_write_r>:
 80015e0:	b538      	push	{r3, r4, r5, lr}
 80015e2:	4d07      	ldr	r5, [pc, #28]	; (8001600 <_write_r+0x20>)
 80015e4:	4604      	mov	r4, r0
 80015e6:	4608      	mov	r0, r1
 80015e8:	4611      	mov	r1, r2
 80015ea:	2200      	movs	r2, #0
 80015ec:	602a      	str	r2, [r5, #0]
 80015ee:	461a      	mov	r2, r3
 80015f0:	f7fe ff83 	bl	80004fa <_write>
 80015f4:	1c43      	adds	r3, r0, #1
 80015f6:	d102      	bne.n	80015fe <_write_r+0x1e>
 80015f8:	682b      	ldr	r3, [r5, #0]
 80015fa:	b103      	cbz	r3, 80015fe <_write_r+0x1e>
 80015fc:	6023      	str	r3, [r4, #0]
 80015fe:	bd38      	pop	{r3, r4, r5, pc}
 8001600:	200000b4 	.word	0x200000b4

08001604 <_close_r>:
 8001604:	b538      	push	{r3, r4, r5, lr}
 8001606:	4d06      	ldr	r5, [pc, #24]	; (8001620 <_close_r+0x1c>)
 8001608:	2300      	movs	r3, #0
 800160a:	4604      	mov	r4, r0
 800160c:	4608      	mov	r0, r1
 800160e:	602b      	str	r3, [r5, #0]
 8001610:	f7fe ff8f 	bl	8000532 <_close>
 8001614:	1c43      	adds	r3, r0, #1
 8001616:	d102      	bne.n	800161e <_close_r+0x1a>
 8001618:	682b      	ldr	r3, [r5, #0]
 800161a:	b103      	cbz	r3, 800161e <_close_r+0x1a>
 800161c:	6023      	str	r3, [r4, #0]
 800161e:	bd38      	pop	{r3, r4, r5, pc}
 8001620:	200000b4 	.word	0x200000b4

08001624 <_fstat_r>:
 8001624:	b538      	push	{r3, r4, r5, lr}
 8001626:	4d07      	ldr	r5, [pc, #28]	; (8001644 <_fstat_r+0x20>)
 8001628:	2300      	movs	r3, #0
 800162a:	4604      	mov	r4, r0
 800162c:	4608      	mov	r0, r1
 800162e:	4611      	mov	r1, r2
 8001630:	602b      	str	r3, [r5, #0]
 8001632:	f7fe ff8a 	bl	800054a <_fstat>
 8001636:	1c43      	adds	r3, r0, #1
 8001638:	d102      	bne.n	8001640 <_fstat_r+0x1c>
 800163a:	682b      	ldr	r3, [r5, #0]
 800163c:	b103      	cbz	r3, 8001640 <_fstat_r+0x1c>
 800163e:	6023      	str	r3, [r4, #0]
 8001640:	bd38      	pop	{r3, r4, r5, pc}
 8001642:	bf00      	nop
 8001644:	200000b4 	.word	0x200000b4

08001648 <_isatty_r>:
 8001648:	b538      	push	{r3, r4, r5, lr}
 800164a:	4d06      	ldr	r5, [pc, #24]	; (8001664 <_isatty_r+0x1c>)
 800164c:	2300      	movs	r3, #0
 800164e:	4604      	mov	r4, r0
 8001650:	4608      	mov	r0, r1
 8001652:	602b      	str	r3, [r5, #0]
 8001654:	f7fe ff89 	bl	800056a <_isatty>
 8001658:	1c43      	adds	r3, r0, #1
 800165a:	d102      	bne.n	8001662 <_isatty_r+0x1a>
 800165c:	682b      	ldr	r3, [r5, #0]
 800165e:	b103      	cbz	r3, 8001662 <_isatty_r+0x1a>
 8001660:	6023      	str	r3, [r4, #0]
 8001662:	bd38      	pop	{r3, r4, r5, pc}
 8001664:	200000b4 	.word	0x200000b4

08001668 <_lseek_r>:
 8001668:	b538      	push	{r3, r4, r5, lr}
 800166a:	4d07      	ldr	r5, [pc, #28]	; (8001688 <_lseek_r+0x20>)
 800166c:	4604      	mov	r4, r0
 800166e:	4608      	mov	r0, r1
 8001670:	4611      	mov	r1, r2
 8001672:	2200      	movs	r2, #0
 8001674:	602a      	str	r2, [r5, #0]
 8001676:	461a      	mov	r2, r3
 8001678:	f7fe ff82 	bl	8000580 <_lseek>
 800167c:	1c43      	adds	r3, r0, #1
 800167e:	d102      	bne.n	8001686 <_lseek_r+0x1e>
 8001680:	682b      	ldr	r3, [r5, #0]
 8001682:	b103      	cbz	r3, 8001686 <_lseek_r+0x1e>
 8001684:	6023      	str	r3, [r4, #0]
 8001686:	bd38      	pop	{r3, r4, r5, pc}
 8001688:	200000b4 	.word	0x200000b4

0800168c <__malloc_lock>:
 800168c:	4801      	ldr	r0, [pc, #4]	; (8001694 <__malloc_lock+0x8>)
 800168e:	f7ff bb1d 	b.w	8000ccc <__retarget_lock_acquire_recursive>
 8001692:	bf00      	nop
 8001694:	200000a8 	.word	0x200000a8

08001698 <__malloc_unlock>:
 8001698:	4801      	ldr	r0, [pc, #4]	; (80016a0 <__malloc_unlock+0x8>)
 800169a:	f7ff bb18 	b.w	8000cce <__retarget_lock_release_recursive>
 800169e:	bf00      	nop
 80016a0:	200000a8 	.word	0x200000a8

080016a4 <_read_r>:
 80016a4:	b538      	push	{r3, r4, r5, lr}
 80016a6:	4d07      	ldr	r5, [pc, #28]	; (80016c4 <_read_r+0x20>)
 80016a8:	4604      	mov	r4, r0
 80016aa:	4608      	mov	r0, r1
 80016ac:	4611      	mov	r1, r2
 80016ae:	2200      	movs	r2, #0
 80016b0:	602a      	str	r2, [r5, #0]
 80016b2:	461a      	mov	r2, r3
 80016b4:	f7fe ff04 	bl	80004c0 <_read>
 80016b8:	1c43      	adds	r3, r0, #1
 80016ba:	d102      	bne.n	80016c2 <_read_r+0x1e>
 80016bc:	682b      	ldr	r3, [r5, #0]
 80016be:	b103      	cbz	r3, 80016c2 <_read_r+0x1e>
 80016c0:	6023      	str	r3, [r4, #0]
 80016c2:	bd38      	pop	{r3, r4, r5, pc}
 80016c4:	200000b4 	.word	0x200000b4

080016c8 <_init>:
 80016c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016ca:	bf00      	nop
 80016cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016ce:	bc08      	pop	{r3}
 80016d0:	469e      	mov	lr, r3
 80016d2:	4770      	bx	lr

080016d4 <_fini>:
 80016d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016d6:	bf00      	nop
 80016d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016da:	bc08      	pop	{r3}
 80016dc:	469e      	mov	lr, r3
 80016de:	4770      	bx	lr
