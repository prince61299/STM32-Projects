
Example_02.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001424  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  080015c4  080015c4  000115c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016b8  080016b8  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016b8  080016b8  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016b8  080016b8  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016b8  080016b8  000116b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016bc  080016bc  000116bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016c0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001724  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001724  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001159  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000461  00000000  00000000  000211ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000128  00000000  00000000  00021650  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f0  00000000  00000000  00021778  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bf2  00000000  00000000  00021868  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000135d  00000000  00000000  0002445a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009650  00000000  00000000  000257b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002ee07  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bf0  00000000  00000000  0002ee58  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080015ac 	.word	0x080015ac

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080015ac 	.word	0x080015ac

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <add>:
#include <stdio.h>

int add(int a, int b);
int mul(int a, int b);

int add(int a, int b){
 8000280:	b480      	push	{r7}
 8000282:	b085      	sub	sp, #20
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
 8000288:	6039      	str	r1, [r7, #0]
	int sum = a+b;
 800028a:	687a      	ldr	r2, [r7, #4]
 800028c:	683b      	ldr	r3, [r7, #0]
 800028e:	4413      	add	r3, r2
 8000290:	60fb      	str	r3, [r7, #12]
	return sum;
 8000292:	68fb      	ldr	r3, [r7, #12]
}
 8000294:	4618      	mov	r0, r3
 8000296:	3714      	adds	r7, #20
 8000298:	46bd      	mov	sp, r7
 800029a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800029e:	4770      	bx	lr

080002a0 <mul>:

int mul(int a, int b){
 80002a0:	b480      	push	{r7}
 80002a2:	b085      	sub	sp, #20
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
 80002a8:	6039      	str	r1, [r7, #0]
	int product=a*b;
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	683a      	ldr	r2, [r7, #0]
 80002ae:	fb02 f303 	mul.w	r3, r2, r3
 80002b2:	60fb      	str	r3, [r7, #12]
	return product;
 80002b4:	68fb      	ldr	r3, [r7, #12]
}
 80002b6:	4618      	mov	r0, r3
 80002b8:	3714      	adds	r7, #20
 80002ba:	46bd      	mov	sp, r7
 80002bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c0:	4770      	bx	lr
	...

080002c4 <main>:
int main(void)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b084      	sub	sp, #16
 80002c8:	af00      	add	r7, sp, #0
    	int a=10, b=20, sum, product;
 80002ca:	230a      	movs	r3, #10
 80002cc:	60fb      	str	r3, [r7, #12]
 80002ce:	2314      	movs	r3, #20
 80002d0:	60bb      	str	r3, [r7, #8]
    	printf("Add two number \n");
 80002d2:	4811      	ldr	r0, [pc, #68]	; (8000318 <main+0x54>)
 80002d4:	f000 fc86 	bl	8000be4 <puts>
    	sum=add(a,b);
 80002d8:	68b9      	ldr	r1, [r7, #8]
 80002da:	68f8      	ldr	r0, [r7, #12]
 80002dc:	f7ff ffd0 	bl	8000280 <add>
 80002e0:	6078      	str	r0, [r7, #4]
    	printf("Sum of two numbers %d \n", sum);
 80002e2:	6879      	ldr	r1, [r7, #4]
 80002e4:	480d      	ldr	r0, [pc, #52]	; (800031c <main+0x58>)
 80002e6:	f000 fbf7 	bl	8000ad8 <iprintf>

    	printf("Multiply two number \n");
 80002ea:	480d      	ldr	r0, [pc, #52]	; (8000320 <main+0x5c>)
 80002ec:	f000 fc7a 	bl	8000be4 <puts>
    	product=mul(a,b);
 80002f0:	68b9      	ldr	r1, [r7, #8]
 80002f2:	68f8      	ldr	r0, [r7, #12]
 80002f4:	f7ff ffd4 	bl	80002a0 <mul>
 80002f8:	6038      	str	r0, [r7, #0]
    	printf("Product of two numbers %d \n", product);
 80002fa:	6839      	ldr	r1, [r7, #0]
 80002fc:	4809      	ldr	r0, [pc, #36]	; (8000324 <main+0x60>)
 80002fe:	f000 fbeb 	bl	8000ad8 <iprintf>

    	fflush(stdout);
 8000302:	4b09      	ldr	r3, [pc, #36]	; (8000328 <main+0x64>)
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	689b      	ldr	r3, [r3, #8]
 8000308:	4618      	mov	r0, r3
 800030a:	f000 f9cd 	bl	80006a8 <fflush>
    return 0;
 800030e:	2300      	movs	r3, #0
}
 8000310:	4618      	mov	r0, r3
 8000312:	3710      	adds	r7, #16
 8000314:	46bd      	mov	sp, r7
 8000316:	bd80      	pop	{r7, pc}
 8000318:	080015c4 	.word	0x080015c4
 800031c:	080015d4 	.word	0x080015d4
 8000320:	080015ec 	.word	0x080015ec
 8000324:	08001604 	.word	0x08001604
 8000328:	20000000 	.word	0x20000000

0800032c <ITM_SendChar>:
#define DEMCR *((volatile uint32_t*) 0xE000EDFCU )
/* ITM register addresses */
#define ITM_STIMULUS_PORT0 *((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN *((volatile uint32_t*) 0xE0000E00 )
void ITM_SendChar(uint8_t ch)
{
 800032c:	b480      	push	{r7}
 800032e:	b083      	sub	sp, #12
 8000330:	af00      	add	r7, sp, #0
 8000332:	4603      	mov	r3, r0
 8000334:	71fb      	strb	r3, [r7, #7]
//Enable TRCENA
DEMCR |= ( 1 << 24);
 8000336:	4b0f      	ldr	r3, [pc, #60]	; (8000374 <ITM_SendChar+0x48>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	4a0e      	ldr	r2, [pc, #56]	; (8000374 <ITM_SendChar+0x48>)
 800033c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000340:	6013      	str	r3, [r2, #0]
//enable stimulus port 0
ITM_TRACE_EN |= ( 1 << 0);
 8000342:	4b0d      	ldr	r3, [pc, #52]	; (8000378 <ITM_SendChar+0x4c>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	4a0c      	ldr	r2, [pc, #48]	; (8000378 <ITM_SendChar+0x4c>)
 8000348:	f043 0301 	orr.w	r3, r3, #1
 800034c:	6013      	str	r3, [r2, #0]
// read FIFO status in bit [0]:
while(!(ITM_STIMULUS_PORT0 & 1));
 800034e:	bf00      	nop
 8000350:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	f003 0301 	and.w	r3, r3, #1
 800035a:	2b00      	cmp	r3, #0
 800035c:	d0f8      	beq.n	8000350 <ITM_SendChar+0x24>
//Write to ITM stimulus port0
ITM_STIMULUS_PORT0 = ch;
 800035e:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8000362:	79fb      	ldrb	r3, [r7, #7]
 8000364:	6013      	str	r3, [r2, #0]
}
 8000366:	bf00      	nop
 8000368:	370c      	adds	r7, #12
 800036a:	46bd      	mov	sp, r7
 800036c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000370:	4770      	bx	lr
 8000372:	bf00      	nop
 8000374:	e000edfc 	.word	0xe000edfc
 8000378:	e0000e00 	.word	0xe0000e00

0800037c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800037c:	b580      	push	{r7, lr}
 800037e:	b086      	sub	sp, #24
 8000380:	af00      	add	r7, sp, #0
 8000382:	60f8      	str	r0, [r7, #12]
 8000384:	60b9      	str	r1, [r7, #8]
 8000386:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000388:	2300      	movs	r3, #0
 800038a:	617b      	str	r3, [r7, #20]
 800038c:	e00a      	b.n	80003a4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800038e:	f3af 8000 	nop.w
 8000392:	4601      	mov	r1, r0
 8000394:	68bb      	ldr	r3, [r7, #8]
 8000396:	1c5a      	adds	r2, r3, #1
 8000398:	60ba      	str	r2, [r7, #8]
 800039a:	b2ca      	uxtb	r2, r1
 800039c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800039e:	697b      	ldr	r3, [r7, #20]
 80003a0:	3301      	adds	r3, #1
 80003a2:	617b      	str	r3, [r7, #20]
 80003a4:	697a      	ldr	r2, [r7, #20]
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	429a      	cmp	r2, r3
 80003aa:	dbf0      	blt.n	800038e <_read+0x12>
  }

  return len;
 80003ac:	687b      	ldr	r3, [r7, #4]
}
 80003ae:	4618      	mov	r0, r3
 80003b0:	3718      	adds	r7, #24
 80003b2:	46bd      	mov	sp, r7
 80003b4:	bd80      	pop	{r7, pc}

080003b6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003b6:	b580      	push	{r7, lr}
 80003b8:	b086      	sub	sp, #24
 80003ba:	af00      	add	r7, sp, #0
 80003bc:	60f8      	str	r0, [r7, #12]
 80003be:	60b9      	str	r1, [r7, #8]
 80003c0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003c2:	2300      	movs	r3, #0
 80003c4:	617b      	str	r3, [r7, #20]
 80003c6:	e009      	b.n	80003dc <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 80003c8:	68bb      	ldr	r3, [r7, #8]
 80003ca:	1c5a      	adds	r2, r3, #1
 80003cc:	60ba      	str	r2, [r7, #8]
 80003ce:	781b      	ldrb	r3, [r3, #0]
 80003d0:	4618      	mov	r0, r3
 80003d2:	f7ff ffab 	bl	800032c <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d6:	697b      	ldr	r3, [r7, #20]
 80003d8:	3301      	adds	r3, #1
 80003da:	617b      	str	r3, [r7, #20]
 80003dc:	697a      	ldr	r2, [r7, #20]
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	429a      	cmp	r2, r3
 80003e2:	dbf1      	blt.n	80003c8 <_write+0x12>
  }
  return len;
 80003e4:	687b      	ldr	r3, [r7, #4]
}
 80003e6:	4618      	mov	r0, r3
 80003e8:	3718      	adds	r7, #24
 80003ea:	46bd      	mov	sp, r7
 80003ec:	bd80      	pop	{r7, pc}

080003ee <_close>:

int _close(int file)
{
 80003ee:	b480      	push	{r7}
 80003f0:	b083      	sub	sp, #12
 80003f2:	af00      	add	r7, sp, #0
 80003f4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003f6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003fa:	4618      	mov	r0, r3
 80003fc:	370c      	adds	r7, #12
 80003fe:	46bd      	mov	sp, r7
 8000400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000404:	4770      	bx	lr

08000406 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000406:	b480      	push	{r7}
 8000408:	b083      	sub	sp, #12
 800040a:	af00      	add	r7, sp, #0
 800040c:	6078      	str	r0, [r7, #4]
 800040e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000410:	683b      	ldr	r3, [r7, #0]
 8000412:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000416:	605a      	str	r2, [r3, #4]
  return 0;
 8000418:	2300      	movs	r3, #0
}
 800041a:	4618      	mov	r0, r3
 800041c:	370c      	adds	r7, #12
 800041e:	46bd      	mov	sp, r7
 8000420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000424:	4770      	bx	lr

08000426 <_isatty>:

int _isatty(int file)
{
 8000426:	b480      	push	{r7}
 8000428:	b083      	sub	sp, #12
 800042a:	af00      	add	r7, sp, #0
 800042c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800042e:	2301      	movs	r3, #1
}
 8000430:	4618      	mov	r0, r3
 8000432:	370c      	adds	r7, #12
 8000434:	46bd      	mov	sp, r7
 8000436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800043a:	4770      	bx	lr

0800043c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800043c:	b480      	push	{r7}
 800043e:	b085      	sub	sp, #20
 8000440:	af00      	add	r7, sp, #0
 8000442:	60f8      	str	r0, [r7, #12]
 8000444:	60b9      	str	r1, [r7, #8]
 8000446:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000448:	2300      	movs	r3, #0
}
 800044a:	4618      	mov	r0, r3
 800044c:	3714      	adds	r7, #20
 800044e:	46bd      	mov	sp, r7
 8000450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000454:	4770      	bx	lr
	...

08000458 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000458:	b580      	push	{r7, lr}
 800045a:	b086      	sub	sp, #24
 800045c:	af00      	add	r7, sp, #0
 800045e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000460:	4a14      	ldr	r2, [pc, #80]	; (80004b4 <_sbrk+0x5c>)
 8000462:	4b15      	ldr	r3, [pc, #84]	; (80004b8 <_sbrk+0x60>)
 8000464:	1ad3      	subs	r3, r2, r3
 8000466:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000468:	697b      	ldr	r3, [r7, #20]
 800046a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800046c:	4b13      	ldr	r3, [pc, #76]	; (80004bc <_sbrk+0x64>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	2b00      	cmp	r3, #0
 8000472:	d102      	bne.n	800047a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000474:	4b11      	ldr	r3, [pc, #68]	; (80004bc <_sbrk+0x64>)
 8000476:	4a12      	ldr	r2, [pc, #72]	; (80004c0 <_sbrk+0x68>)
 8000478:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800047a:	4b10      	ldr	r3, [pc, #64]	; (80004bc <_sbrk+0x64>)
 800047c:	681a      	ldr	r2, [r3, #0]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	4413      	add	r3, r2
 8000482:	693a      	ldr	r2, [r7, #16]
 8000484:	429a      	cmp	r2, r3
 8000486:	d207      	bcs.n	8000498 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000488:	f000 f846 	bl	8000518 <__errno>
 800048c:	4603      	mov	r3, r0
 800048e:	220c      	movs	r2, #12
 8000490:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000492:	f04f 33ff 	mov.w	r3, #4294967295
 8000496:	e009      	b.n	80004ac <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000498:	4b08      	ldr	r3, [pc, #32]	; (80004bc <_sbrk+0x64>)
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800049e:	4b07      	ldr	r3, [pc, #28]	; (80004bc <_sbrk+0x64>)
 80004a0:	681a      	ldr	r2, [r3, #0]
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	4413      	add	r3, r2
 80004a6:	4a05      	ldr	r2, [pc, #20]	; (80004bc <_sbrk+0x64>)
 80004a8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004aa:	68fb      	ldr	r3, [r7, #12]
}
 80004ac:	4618      	mov	r0, r3
 80004ae:	3718      	adds	r7, #24
 80004b0:	46bd      	mov	sp, r7
 80004b2:	bd80      	pop	{r7, pc}
 80004b4:	20018000 	.word	0x20018000
 80004b8:	00000400 	.word	0x00000400
 80004bc:	20000080 	.word	0x20000080
 80004c0:	20000098 	.word	0x20000098

080004c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004c4:	480d      	ldr	r0, [pc, #52]	; (80004fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004c6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004cc:	480c      	ldr	r0, [pc, #48]	; (8000500 <LoopForever+0x6>)
  ldr r1, =_edata
 80004ce:	490d      	ldr	r1, [pc, #52]	; (8000504 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d0:	4a0d      	ldr	r2, [pc, #52]	; (8000508 <LoopForever+0xe>)
  movs r3, #0
 80004d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004d4:	e002      	b.n	80004dc <LoopCopyDataInit>

080004d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004da:	3304      	adds	r3, #4

080004dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e0:	d3f9      	bcc.n	80004d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004e2:	4a0a      	ldr	r2, [pc, #40]	; (800050c <LoopForever+0x12>)
  ldr r4, =_ebss
 80004e4:	4c0a      	ldr	r4, [pc, #40]	; (8000510 <LoopForever+0x16>)
  movs r3, #0
 80004e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004e8:	e001      	b.n	80004ee <LoopFillZerobss>

080004ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ec:	3204      	adds	r2, #4

080004ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f0:	d3fb      	bcc.n	80004ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004f2:	f000 f9e1 	bl	80008b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004f6:	f7ff fee5 	bl	80002c4 <main>

080004fa <LoopForever>:

LoopForever:
  b LoopForever
 80004fa:	e7fe      	b.n	80004fa <LoopForever>
  ldr   r0, =_estack
 80004fc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000500:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000504:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000508:	080016c0 	.word	0x080016c0
  ldr r2, =_sbss
 800050c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000510:	20000094 	.word	0x20000094

08000514 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000514:	e7fe      	b.n	8000514 <ADC_IRQHandler>
	...

08000518 <__errno>:
 8000518:	4b01      	ldr	r3, [pc, #4]	; (8000520 <__errno+0x8>)
 800051a:	6818      	ldr	r0, [r3, #0]
 800051c:	4770      	bx	lr
 800051e:	bf00      	nop
 8000520:	20000000 	.word	0x20000000

08000524 <__sflush_r>:
 8000524:	898a      	ldrh	r2, [r1, #12]
 8000526:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800052a:	4605      	mov	r5, r0
 800052c:	0710      	lsls	r0, r2, #28
 800052e:	460c      	mov	r4, r1
 8000530:	d458      	bmi.n	80005e4 <__sflush_r+0xc0>
 8000532:	684b      	ldr	r3, [r1, #4]
 8000534:	2b00      	cmp	r3, #0
 8000536:	dc05      	bgt.n	8000544 <__sflush_r+0x20>
 8000538:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800053a:	2b00      	cmp	r3, #0
 800053c:	dc02      	bgt.n	8000544 <__sflush_r+0x20>
 800053e:	2000      	movs	r0, #0
 8000540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000544:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000546:	2e00      	cmp	r6, #0
 8000548:	d0f9      	beq.n	800053e <__sflush_r+0x1a>
 800054a:	2300      	movs	r3, #0
 800054c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000550:	682f      	ldr	r7, [r5, #0]
 8000552:	602b      	str	r3, [r5, #0]
 8000554:	d032      	beq.n	80005bc <__sflush_r+0x98>
 8000556:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000558:	89a3      	ldrh	r3, [r4, #12]
 800055a:	075a      	lsls	r2, r3, #29
 800055c:	d505      	bpl.n	800056a <__sflush_r+0x46>
 800055e:	6863      	ldr	r3, [r4, #4]
 8000560:	1ac0      	subs	r0, r0, r3
 8000562:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000564:	b10b      	cbz	r3, 800056a <__sflush_r+0x46>
 8000566:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000568:	1ac0      	subs	r0, r0, r3
 800056a:	2300      	movs	r3, #0
 800056c:	4602      	mov	r2, r0
 800056e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000570:	6a21      	ldr	r1, [r4, #32]
 8000572:	4628      	mov	r0, r5
 8000574:	47b0      	blx	r6
 8000576:	1c43      	adds	r3, r0, #1
 8000578:	89a3      	ldrh	r3, [r4, #12]
 800057a:	d106      	bne.n	800058a <__sflush_r+0x66>
 800057c:	6829      	ldr	r1, [r5, #0]
 800057e:	291d      	cmp	r1, #29
 8000580:	d82c      	bhi.n	80005dc <__sflush_r+0xb8>
 8000582:	4a2a      	ldr	r2, [pc, #168]	; (800062c <__sflush_r+0x108>)
 8000584:	40ca      	lsrs	r2, r1
 8000586:	07d6      	lsls	r6, r2, #31
 8000588:	d528      	bpl.n	80005dc <__sflush_r+0xb8>
 800058a:	2200      	movs	r2, #0
 800058c:	6062      	str	r2, [r4, #4]
 800058e:	04d9      	lsls	r1, r3, #19
 8000590:	6922      	ldr	r2, [r4, #16]
 8000592:	6022      	str	r2, [r4, #0]
 8000594:	d504      	bpl.n	80005a0 <__sflush_r+0x7c>
 8000596:	1c42      	adds	r2, r0, #1
 8000598:	d101      	bne.n	800059e <__sflush_r+0x7a>
 800059a:	682b      	ldr	r3, [r5, #0]
 800059c:	b903      	cbnz	r3, 80005a0 <__sflush_r+0x7c>
 800059e:	6560      	str	r0, [r4, #84]	; 0x54
 80005a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80005a2:	602f      	str	r7, [r5, #0]
 80005a4:	2900      	cmp	r1, #0
 80005a6:	d0ca      	beq.n	800053e <__sflush_r+0x1a>
 80005a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80005ac:	4299      	cmp	r1, r3
 80005ae:	d002      	beq.n	80005b6 <__sflush_r+0x92>
 80005b0:	4628      	mov	r0, r5
 80005b2:	f000 f9b1 	bl	8000918 <_free_r>
 80005b6:	2000      	movs	r0, #0
 80005b8:	6360      	str	r0, [r4, #52]	; 0x34
 80005ba:	e7c1      	b.n	8000540 <__sflush_r+0x1c>
 80005bc:	6a21      	ldr	r1, [r4, #32]
 80005be:	2301      	movs	r3, #1
 80005c0:	4628      	mov	r0, r5
 80005c2:	47b0      	blx	r6
 80005c4:	1c41      	adds	r1, r0, #1
 80005c6:	d1c7      	bne.n	8000558 <__sflush_r+0x34>
 80005c8:	682b      	ldr	r3, [r5, #0]
 80005ca:	2b00      	cmp	r3, #0
 80005cc:	d0c4      	beq.n	8000558 <__sflush_r+0x34>
 80005ce:	2b1d      	cmp	r3, #29
 80005d0:	d001      	beq.n	80005d6 <__sflush_r+0xb2>
 80005d2:	2b16      	cmp	r3, #22
 80005d4:	d101      	bne.n	80005da <__sflush_r+0xb6>
 80005d6:	602f      	str	r7, [r5, #0]
 80005d8:	e7b1      	b.n	800053e <__sflush_r+0x1a>
 80005da:	89a3      	ldrh	r3, [r4, #12]
 80005dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005e0:	81a3      	strh	r3, [r4, #12]
 80005e2:	e7ad      	b.n	8000540 <__sflush_r+0x1c>
 80005e4:	690f      	ldr	r7, [r1, #16]
 80005e6:	2f00      	cmp	r7, #0
 80005e8:	d0a9      	beq.n	800053e <__sflush_r+0x1a>
 80005ea:	0793      	lsls	r3, r2, #30
 80005ec:	680e      	ldr	r6, [r1, #0]
 80005ee:	bf08      	it	eq
 80005f0:	694b      	ldreq	r3, [r1, #20]
 80005f2:	600f      	str	r7, [r1, #0]
 80005f4:	bf18      	it	ne
 80005f6:	2300      	movne	r3, #0
 80005f8:	eba6 0807 	sub.w	r8, r6, r7
 80005fc:	608b      	str	r3, [r1, #8]
 80005fe:	f1b8 0f00 	cmp.w	r8, #0
 8000602:	dd9c      	ble.n	800053e <__sflush_r+0x1a>
 8000604:	6a21      	ldr	r1, [r4, #32]
 8000606:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000608:	4643      	mov	r3, r8
 800060a:	463a      	mov	r2, r7
 800060c:	4628      	mov	r0, r5
 800060e:	47b0      	blx	r6
 8000610:	2800      	cmp	r0, #0
 8000612:	dc06      	bgt.n	8000622 <__sflush_r+0xfe>
 8000614:	89a3      	ldrh	r3, [r4, #12]
 8000616:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800061a:	81a3      	strh	r3, [r4, #12]
 800061c:	f04f 30ff 	mov.w	r0, #4294967295
 8000620:	e78e      	b.n	8000540 <__sflush_r+0x1c>
 8000622:	4407      	add	r7, r0
 8000624:	eba8 0800 	sub.w	r8, r8, r0
 8000628:	e7e9      	b.n	80005fe <__sflush_r+0xda>
 800062a:	bf00      	nop
 800062c:	20400001 	.word	0x20400001

08000630 <_fflush_r>:
 8000630:	b538      	push	{r3, r4, r5, lr}
 8000632:	690b      	ldr	r3, [r1, #16]
 8000634:	4605      	mov	r5, r0
 8000636:	460c      	mov	r4, r1
 8000638:	b913      	cbnz	r3, 8000640 <_fflush_r+0x10>
 800063a:	2500      	movs	r5, #0
 800063c:	4628      	mov	r0, r5
 800063e:	bd38      	pop	{r3, r4, r5, pc}
 8000640:	b118      	cbz	r0, 800064a <_fflush_r+0x1a>
 8000642:	6983      	ldr	r3, [r0, #24]
 8000644:	b90b      	cbnz	r3, 800064a <_fflush_r+0x1a>
 8000646:	f000 f899 	bl	800077c <__sinit>
 800064a:	4b14      	ldr	r3, [pc, #80]	; (800069c <_fflush_r+0x6c>)
 800064c:	429c      	cmp	r4, r3
 800064e:	d11b      	bne.n	8000688 <_fflush_r+0x58>
 8000650:	686c      	ldr	r4, [r5, #4]
 8000652:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000656:	2b00      	cmp	r3, #0
 8000658:	d0ef      	beq.n	800063a <_fflush_r+0xa>
 800065a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800065c:	07d0      	lsls	r0, r2, #31
 800065e:	d404      	bmi.n	800066a <_fflush_r+0x3a>
 8000660:	0599      	lsls	r1, r3, #22
 8000662:	d402      	bmi.n	800066a <_fflush_r+0x3a>
 8000664:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000666:	f000 f94c 	bl	8000902 <__retarget_lock_acquire_recursive>
 800066a:	4628      	mov	r0, r5
 800066c:	4621      	mov	r1, r4
 800066e:	f7ff ff59 	bl	8000524 <__sflush_r>
 8000672:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000674:	07da      	lsls	r2, r3, #31
 8000676:	4605      	mov	r5, r0
 8000678:	d4e0      	bmi.n	800063c <_fflush_r+0xc>
 800067a:	89a3      	ldrh	r3, [r4, #12]
 800067c:	059b      	lsls	r3, r3, #22
 800067e:	d4dd      	bmi.n	800063c <_fflush_r+0xc>
 8000680:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000682:	f000 f93f 	bl	8000904 <__retarget_lock_release_recursive>
 8000686:	e7d9      	b.n	800063c <_fflush_r+0xc>
 8000688:	4b05      	ldr	r3, [pc, #20]	; (80006a0 <_fflush_r+0x70>)
 800068a:	429c      	cmp	r4, r3
 800068c:	d101      	bne.n	8000692 <_fflush_r+0x62>
 800068e:	68ac      	ldr	r4, [r5, #8]
 8000690:	e7df      	b.n	8000652 <_fflush_r+0x22>
 8000692:	4b04      	ldr	r3, [pc, #16]	; (80006a4 <_fflush_r+0x74>)
 8000694:	429c      	cmp	r4, r3
 8000696:	bf08      	it	eq
 8000698:	68ec      	ldreq	r4, [r5, #12]
 800069a:	e7da      	b.n	8000652 <_fflush_r+0x22>
 800069c:	08001640 	.word	0x08001640
 80006a0:	08001660 	.word	0x08001660
 80006a4:	08001620 	.word	0x08001620

080006a8 <fflush>:
 80006a8:	4601      	mov	r1, r0
 80006aa:	b920      	cbnz	r0, 80006b6 <fflush+0xe>
 80006ac:	4b04      	ldr	r3, [pc, #16]	; (80006c0 <fflush+0x18>)
 80006ae:	4905      	ldr	r1, [pc, #20]	; (80006c4 <fflush+0x1c>)
 80006b0:	6818      	ldr	r0, [r3, #0]
 80006b2:	f000 b8e1 	b.w	8000878 <_fwalk_reent>
 80006b6:	4b04      	ldr	r3, [pc, #16]	; (80006c8 <fflush+0x20>)
 80006b8:	6818      	ldr	r0, [r3, #0]
 80006ba:	f7ff bfb9 	b.w	8000630 <_fflush_r>
 80006be:	bf00      	nop
 80006c0:	08001680 	.word	0x08001680
 80006c4:	08000631 	.word	0x08000631
 80006c8:	20000000 	.word	0x20000000

080006cc <std>:
 80006cc:	2300      	movs	r3, #0
 80006ce:	b510      	push	{r4, lr}
 80006d0:	4604      	mov	r4, r0
 80006d2:	e9c0 3300 	strd	r3, r3, [r0]
 80006d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006da:	6083      	str	r3, [r0, #8]
 80006dc:	8181      	strh	r1, [r0, #12]
 80006de:	6643      	str	r3, [r0, #100]	; 0x64
 80006e0:	81c2      	strh	r2, [r0, #14]
 80006e2:	6183      	str	r3, [r0, #24]
 80006e4:	4619      	mov	r1, r3
 80006e6:	2208      	movs	r2, #8
 80006e8:	305c      	adds	r0, #92	; 0x5c
 80006ea:	f000 f90c 	bl	8000906 <memset>
 80006ee:	4b05      	ldr	r3, [pc, #20]	; (8000704 <std+0x38>)
 80006f0:	6263      	str	r3, [r4, #36]	; 0x24
 80006f2:	4b05      	ldr	r3, [pc, #20]	; (8000708 <std+0x3c>)
 80006f4:	62a3      	str	r3, [r4, #40]	; 0x28
 80006f6:	4b05      	ldr	r3, [pc, #20]	; (800070c <std+0x40>)
 80006f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006fa:	4b05      	ldr	r3, [pc, #20]	; (8000710 <std+0x44>)
 80006fc:	6224      	str	r4, [r4, #32]
 80006fe:	6323      	str	r3, [r4, #48]	; 0x30
 8000700:	bd10      	pop	{r4, pc}
 8000702:	bf00      	nop
 8000704:	08000c15 	.word	0x08000c15
 8000708:	08000c37 	.word	0x08000c37
 800070c:	08000c6f 	.word	0x08000c6f
 8000710:	08000c93 	.word	0x08000c93

08000714 <_cleanup_r>:
 8000714:	4901      	ldr	r1, [pc, #4]	; (800071c <_cleanup_r+0x8>)
 8000716:	f000 b8af 	b.w	8000878 <_fwalk_reent>
 800071a:	bf00      	nop
 800071c:	08000631 	.word	0x08000631

08000720 <__sfmoreglue>:
 8000720:	b570      	push	{r4, r5, r6, lr}
 8000722:	2268      	movs	r2, #104	; 0x68
 8000724:	1e4d      	subs	r5, r1, #1
 8000726:	4355      	muls	r5, r2
 8000728:	460e      	mov	r6, r1
 800072a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800072e:	f000 f95f 	bl	80009f0 <_malloc_r>
 8000732:	4604      	mov	r4, r0
 8000734:	b140      	cbz	r0, 8000748 <__sfmoreglue+0x28>
 8000736:	2100      	movs	r1, #0
 8000738:	e9c0 1600 	strd	r1, r6, [r0]
 800073c:	300c      	adds	r0, #12
 800073e:	60a0      	str	r0, [r4, #8]
 8000740:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000744:	f000 f8df 	bl	8000906 <memset>
 8000748:	4620      	mov	r0, r4
 800074a:	bd70      	pop	{r4, r5, r6, pc}

0800074c <__sfp_lock_acquire>:
 800074c:	4801      	ldr	r0, [pc, #4]	; (8000754 <__sfp_lock_acquire+0x8>)
 800074e:	f000 b8d8 	b.w	8000902 <__retarget_lock_acquire_recursive>
 8000752:	bf00      	nop
 8000754:	20000085 	.word	0x20000085

08000758 <__sfp_lock_release>:
 8000758:	4801      	ldr	r0, [pc, #4]	; (8000760 <__sfp_lock_release+0x8>)
 800075a:	f000 b8d3 	b.w	8000904 <__retarget_lock_release_recursive>
 800075e:	bf00      	nop
 8000760:	20000085 	.word	0x20000085

08000764 <__sinit_lock_acquire>:
 8000764:	4801      	ldr	r0, [pc, #4]	; (800076c <__sinit_lock_acquire+0x8>)
 8000766:	f000 b8cc 	b.w	8000902 <__retarget_lock_acquire_recursive>
 800076a:	bf00      	nop
 800076c:	20000086 	.word	0x20000086

08000770 <__sinit_lock_release>:
 8000770:	4801      	ldr	r0, [pc, #4]	; (8000778 <__sinit_lock_release+0x8>)
 8000772:	f000 b8c7 	b.w	8000904 <__retarget_lock_release_recursive>
 8000776:	bf00      	nop
 8000778:	20000086 	.word	0x20000086

0800077c <__sinit>:
 800077c:	b510      	push	{r4, lr}
 800077e:	4604      	mov	r4, r0
 8000780:	f7ff fff0 	bl	8000764 <__sinit_lock_acquire>
 8000784:	69a3      	ldr	r3, [r4, #24]
 8000786:	b11b      	cbz	r3, 8000790 <__sinit+0x14>
 8000788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800078c:	f7ff bff0 	b.w	8000770 <__sinit_lock_release>
 8000790:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000794:	6523      	str	r3, [r4, #80]	; 0x50
 8000796:	4b13      	ldr	r3, [pc, #76]	; (80007e4 <__sinit+0x68>)
 8000798:	4a13      	ldr	r2, [pc, #76]	; (80007e8 <__sinit+0x6c>)
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	62a2      	str	r2, [r4, #40]	; 0x28
 800079e:	42a3      	cmp	r3, r4
 80007a0:	bf04      	itt	eq
 80007a2:	2301      	moveq	r3, #1
 80007a4:	61a3      	streq	r3, [r4, #24]
 80007a6:	4620      	mov	r0, r4
 80007a8:	f000 f820 	bl	80007ec <__sfp>
 80007ac:	6060      	str	r0, [r4, #4]
 80007ae:	4620      	mov	r0, r4
 80007b0:	f000 f81c 	bl	80007ec <__sfp>
 80007b4:	60a0      	str	r0, [r4, #8]
 80007b6:	4620      	mov	r0, r4
 80007b8:	f000 f818 	bl	80007ec <__sfp>
 80007bc:	2200      	movs	r2, #0
 80007be:	60e0      	str	r0, [r4, #12]
 80007c0:	2104      	movs	r1, #4
 80007c2:	6860      	ldr	r0, [r4, #4]
 80007c4:	f7ff ff82 	bl	80006cc <std>
 80007c8:	68a0      	ldr	r0, [r4, #8]
 80007ca:	2201      	movs	r2, #1
 80007cc:	2109      	movs	r1, #9
 80007ce:	f7ff ff7d 	bl	80006cc <std>
 80007d2:	68e0      	ldr	r0, [r4, #12]
 80007d4:	2202      	movs	r2, #2
 80007d6:	2112      	movs	r1, #18
 80007d8:	f7ff ff78 	bl	80006cc <std>
 80007dc:	2301      	movs	r3, #1
 80007de:	61a3      	str	r3, [r4, #24]
 80007e0:	e7d2      	b.n	8000788 <__sinit+0xc>
 80007e2:	bf00      	nop
 80007e4:	08001680 	.word	0x08001680
 80007e8:	08000715 	.word	0x08000715

080007ec <__sfp>:
 80007ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ee:	4607      	mov	r7, r0
 80007f0:	f7ff ffac 	bl	800074c <__sfp_lock_acquire>
 80007f4:	4b1e      	ldr	r3, [pc, #120]	; (8000870 <__sfp+0x84>)
 80007f6:	681e      	ldr	r6, [r3, #0]
 80007f8:	69b3      	ldr	r3, [r6, #24]
 80007fa:	b913      	cbnz	r3, 8000802 <__sfp+0x16>
 80007fc:	4630      	mov	r0, r6
 80007fe:	f7ff ffbd 	bl	800077c <__sinit>
 8000802:	3648      	adds	r6, #72	; 0x48
 8000804:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000808:	3b01      	subs	r3, #1
 800080a:	d503      	bpl.n	8000814 <__sfp+0x28>
 800080c:	6833      	ldr	r3, [r6, #0]
 800080e:	b30b      	cbz	r3, 8000854 <__sfp+0x68>
 8000810:	6836      	ldr	r6, [r6, #0]
 8000812:	e7f7      	b.n	8000804 <__sfp+0x18>
 8000814:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000818:	b9d5      	cbnz	r5, 8000850 <__sfp+0x64>
 800081a:	4b16      	ldr	r3, [pc, #88]	; (8000874 <__sfp+0x88>)
 800081c:	60e3      	str	r3, [r4, #12]
 800081e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000822:	6665      	str	r5, [r4, #100]	; 0x64
 8000824:	f000 f86c 	bl	8000900 <__retarget_lock_init_recursive>
 8000828:	f7ff ff96 	bl	8000758 <__sfp_lock_release>
 800082c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000830:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000834:	6025      	str	r5, [r4, #0]
 8000836:	61a5      	str	r5, [r4, #24]
 8000838:	2208      	movs	r2, #8
 800083a:	4629      	mov	r1, r5
 800083c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000840:	f000 f861 	bl	8000906 <memset>
 8000844:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000848:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800084c:	4620      	mov	r0, r4
 800084e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000850:	3468      	adds	r4, #104	; 0x68
 8000852:	e7d9      	b.n	8000808 <__sfp+0x1c>
 8000854:	2104      	movs	r1, #4
 8000856:	4638      	mov	r0, r7
 8000858:	f7ff ff62 	bl	8000720 <__sfmoreglue>
 800085c:	4604      	mov	r4, r0
 800085e:	6030      	str	r0, [r6, #0]
 8000860:	2800      	cmp	r0, #0
 8000862:	d1d5      	bne.n	8000810 <__sfp+0x24>
 8000864:	f7ff ff78 	bl	8000758 <__sfp_lock_release>
 8000868:	230c      	movs	r3, #12
 800086a:	603b      	str	r3, [r7, #0]
 800086c:	e7ee      	b.n	800084c <__sfp+0x60>
 800086e:	bf00      	nop
 8000870:	08001680 	.word	0x08001680
 8000874:	ffff0001 	.word	0xffff0001

08000878 <_fwalk_reent>:
 8000878:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800087c:	4606      	mov	r6, r0
 800087e:	4688      	mov	r8, r1
 8000880:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000884:	2700      	movs	r7, #0
 8000886:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800088a:	f1b9 0901 	subs.w	r9, r9, #1
 800088e:	d505      	bpl.n	800089c <_fwalk_reent+0x24>
 8000890:	6824      	ldr	r4, [r4, #0]
 8000892:	2c00      	cmp	r4, #0
 8000894:	d1f7      	bne.n	8000886 <_fwalk_reent+0xe>
 8000896:	4638      	mov	r0, r7
 8000898:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800089c:	89ab      	ldrh	r3, [r5, #12]
 800089e:	2b01      	cmp	r3, #1
 80008a0:	d907      	bls.n	80008b2 <_fwalk_reent+0x3a>
 80008a2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008a6:	3301      	adds	r3, #1
 80008a8:	d003      	beq.n	80008b2 <_fwalk_reent+0x3a>
 80008aa:	4629      	mov	r1, r5
 80008ac:	4630      	mov	r0, r6
 80008ae:	47c0      	blx	r8
 80008b0:	4307      	orrs	r7, r0
 80008b2:	3568      	adds	r5, #104	; 0x68
 80008b4:	e7e9      	b.n	800088a <_fwalk_reent+0x12>
	...

080008b8 <__libc_init_array>:
 80008b8:	b570      	push	{r4, r5, r6, lr}
 80008ba:	4d0d      	ldr	r5, [pc, #52]	; (80008f0 <__libc_init_array+0x38>)
 80008bc:	4c0d      	ldr	r4, [pc, #52]	; (80008f4 <__libc_init_array+0x3c>)
 80008be:	1b64      	subs	r4, r4, r5
 80008c0:	10a4      	asrs	r4, r4, #2
 80008c2:	2600      	movs	r6, #0
 80008c4:	42a6      	cmp	r6, r4
 80008c6:	d109      	bne.n	80008dc <__libc_init_array+0x24>
 80008c8:	4d0b      	ldr	r5, [pc, #44]	; (80008f8 <__libc_init_array+0x40>)
 80008ca:	4c0c      	ldr	r4, [pc, #48]	; (80008fc <__libc_init_array+0x44>)
 80008cc:	f000 fe6e 	bl	80015ac <_init>
 80008d0:	1b64      	subs	r4, r4, r5
 80008d2:	10a4      	asrs	r4, r4, #2
 80008d4:	2600      	movs	r6, #0
 80008d6:	42a6      	cmp	r6, r4
 80008d8:	d105      	bne.n	80008e6 <__libc_init_array+0x2e>
 80008da:	bd70      	pop	{r4, r5, r6, pc}
 80008dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80008e0:	4798      	blx	r3
 80008e2:	3601      	adds	r6, #1
 80008e4:	e7ee      	b.n	80008c4 <__libc_init_array+0xc>
 80008e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80008ea:	4798      	blx	r3
 80008ec:	3601      	adds	r6, #1
 80008ee:	e7f2      	b.n	80008d6 <__libc_init_array+0x1e>
 80008f0:	080016b8 	.word	0x080016b8
 80008f4:	080016b8 	.word	0x080016b8
 80008f8:	080016b8 	.word	0x080016b8
 80008fc:	080016bc 	.word	0x080016bc

08000900 <__retarget_lock_init_recursive>:
 8000900:	4770      	bx	lr

08000902 <__retarget_lock_acquire_recursive>:
 8000902:	4770      	bx	lr

08000904 <__retarget_lock_release_recursive>:
 8000904:	4770      	bx	lr

08000906 <memset>:
 8000906:	4402      	add	r2, r0
 8000908:	4603      	mov	r3, r0
 800090a:	4293      	cmp	r3, r2
 800090c:	d100      	bne.n	8000910 <memset+0xa>
 800090e:	4770      	bx	lr
 8000910:	f803 1b01 	strb.w	r1, [r3], #1
 8000914:	e7f9      	b.n	800090a <memset+0x4>
	...

08000918 <_free_r>:
 8000918:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800091a:	2900      	cmp	r1, #0
 800091c:	d044      	beq.n	80009a8 <_free_r+0x90>
 800091e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000922:	9001      	str	r0, [sp, #4]
 8000924:	2b00      	cmp	r3, #0
 8000926:	f1a1 0404 	sub.w	r4, r1, #4
 800092a:	bfb8      	it	lt
 800092c:	18e4      	addlt	r4, r4, r3
 800092e:	f000 fb0f 	bl	8000f50 <__malloc_lock>
 8000932:	4a1e      	ldr	r2, [pc, #120]	; (80009ac <_free_r+0x94>)
 8000934:	9801      	ldr	r0, [sp, #4]
 8000936:	6813      	ldr	r3, [r2, #0]
 8000938:	b933      	cbnz	r3, 8000948 <_free_r+0x30>
 800093a:	6063      	str	r3, [r4, #4]
 800093c:	6014      	str	r4, [r2, #0]
 800093e:	b003      	add	sp, #12
 8000940:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000944:	f000 bb0a 	b.w	8000f5c <__malloc_unlock>
 8000948:	42a3      	cmp	r3, r4
 800094a:	d908      	bls.n	800095e <_free_r+0x46>
 800094c:	6825      	ldr	r5, [r4, #0]
 800094e:	1961      	adds	r1, r4, r5
 8000950:	428b      	cmp	r3, r1
 8000952:	bf01      	itttt	eq
 8000954:	6819      	ldreq	r1, [r3, #0]
 8000956:	685b      	ldreq	r3, [r3, #4]
 8000958:	1949      	addeq	r1, r1, r5
 800095a:	6021      	streq	r1, [r4, #0]
 800095c:	e7ed      	b.n	800093a <_free_r+0x22>
 800095e:	461a      	mov	r2, r3
 8000960:	685b      	ldr	r3, [r3, #4]
 8000962:	b10b      	cbz	r3, 8000968 <_free_r+0x50>
 8000964:	42a3      	cmp	r3, r4
 8000966:	d9fa      	bls.n	800095e <_free_r+0x46>
 8000968:	6811      	ldr	r1, [r2, #0]
 800096a:	1855      	adds	r5, r2, r1
 800096c:	42a5      	cmp	r5, r4
 800096e:	d10b      	bne.n	8000988 <_free_r+0x70>
 8000970:	6824      	ldr	r4, [r4, #0]
 8000972:	4421      	add	r1, r4
 8000974:	1854      	adds	r4, r2, r1
 8000976:	42a3      	cmp	r3, r4
 8000978:	6011      	str	r1, [r2, #0]
 800097a:	d1e0      	bne.n	800093e <_free_r+0x26>
 800097c:	681c      	ldr	r4, [r3, #0]
 800097e:	685b      	ldr	r3, [r3, #4]
 8000980:	6053      	str	r3, [r2, #4]
 8000982:	4421      	add	r1, r4
 8000984:	6011      	str	r1, [r2, #0]
 8000986:	e7da      	b.n	800093e <_free_r+0x26>
 8000988:	d902      	bls.n	8000990 <_free_r+0x78>
 800098a:	230c      	movs	r3, #12
 800098c:	6003      	str	r3, [r0, #0]
 800098e:	e7d6      	b.n	800093e <_free_r+0x26>
 8000990:	6825      	ldr	r5, [r4, #0]
 8000992:	1961      	adds	r1, r4, r5
 8000994:	428b      	cmp	r3, r1
 8000996:	bf04      	itt	eq
 8000998:	6819      	ldreq	r1, [r3, #0]
 800099a:	685b      	ldreq	r3, [r3, #4]
 800099c:	6063      	str	r3, [r4, #4]
 800099e:	bf04      	itt	eq
 80009a0:	1949      	addeq	r1, r1, r5
 80009a2:	6021      	streq	r1, [r4, #0]
 80009a4:	6054      	str	r4, [r2, #4]
 80009a6:	e7ca      	b.n	800093e <_free_r+0x26>
 80009a8:	b003      	add	sp, #12
 80009aa:	bd30      	pop	{r4, r5, pc}
 80009ac:	20000088 	.word	0x20000088

080009b0 <sbrk_aligned>:
 80009b0:	b570      	push	{r4, r5, r6, lr}
 80009b2:	4e0e      	ldr	r6, [pc, #56]	; (80009ec <sbrk_aligned+0x3c>)
 80009b4:	460c      	mov	r4, r1
 80009b6:	6831      	ldr	r1, [r6, #0]
 80009b8:	4605      	mov	r5, r0
 80009ba:	b911      	cbnz	r1, 80009c2 <sbrk_aligned+0x12>
 80009bc:	f000 f91a 	bl	8000bf4 <_sbrk_r>
 80009c0:	6030      	str	r0, [r6, #0]
 80009c2:	4621      	mov	r1, r4
 80009c4:	4628      	mov	r0, r5
 80009c6:	f000 f915 	bl	8000bf4 <_sbrk_r>
 80009ca:	1c43      	adds	r3, r0, #1
 80009cc:	d00a      	beq.n	80009e4 <sbrk_aligned+0x34>
 80009ce:	1cc4      	adds	r4, r0, #3
 80009d0:	f024 0403 	bic.w	r4, r4, #3
 80009d4:	42a0      	cmp	r0, r4
 80009d6:	d007      	beq.n	80009e8 <sbrk_aligned+0x38>
 80009d8:	1a21      	subs	r1, r4, r0
 80009da:	4628      	mov	r0, r5
 80009dc:	f000 f90a 	bl	8000bf4 <_sbrk_r>
 80009e0:	3001      	adds	r0, #1
 80009e2:	d101      	bne.n	80009e8 <sbrk_aligned+0x38>
 80009e4:	f04f 34ff 	mov.w	r4, #4294967295
 80009e8:	4620      	mov	r0, r4
 80009ea:	bd70      	pop	{r4, r5, r6, pc}
 80009ec:	2000008c 	.word	0x2000008c

080009f0 <_malloc_r>:
 80009f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80009f4:	1ccd      	adds	r5, r1, #3
 80009f6:	f025 0503 	bic.w	r5, r5, #3
 80009fa:	3508      	adds	r5, #8
 80009fc:	2d0c      	cmp	r5, #12
 80009fe:	bf38      	it	cc
 8000a00:	250c      	movcc	r5, #12
 8000a02:	2d00      	cmp	r5, #0
 8000a04:	4607      	mov	r7, r0
 8000a06:	db01      	blt.n	8000a0c <_malloc_r+0x1c>
 8000a08:	42a9      	cmp	r1, r5
 8000a0a:	d905      	bls.n	8000a18 <_malloc_r+0x28>
 8000a0c:	230c      	movs	r3, #12
 8000a0e:	603b      	str	r3, [r7, #0]
 8000a10:	2600      	movs	r6, #0
 8000a12:	4630      	mov	r0, r6
 8000a14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a18:	4e2e      	ldr	r6, [pc, #184]	; (8000ad4 <_malloc_r+0xe4>)
 8000a1a:	f000 fa99 	bl	8000f50 <__malloc_lock>
 8000a1e:	6833      	ldr	r3, [r6, #0]
 8000a20:	461c      	mov	r4, r3
 8000a22:	bb34      	cbnz	r4, 8000a72 <_malloc_r+0x82>
 8000a24:	4629      	mov	r1, r5
 8000a26:	4638      	mov	r0, r7
 8000a28:	f7ff ffc2 	bl	80009b0 <sbrk_aligned>
 8000a2c:	1c43      	adds	r3, r0, #1
 8000a2e:	4604      	mov	r4, r0
 8000a30:	d14d      	bne.n	8000ace <_malloc_r+0xde>
 8000a32:	6834      	ldr	r4, [r6, #0]
 8000a34:	4626      	mov	r6, r4
 8000a36:	2e00      	cmp	r6, #0
 8000a38:	d140      	bne.n	8000abc <_malloc_r+0xcc>
 8000a3a:	6823      	ldr	r3, [r4, #0]
 8000a3c:	4631      	mov	r1, r6
 8000a3e:	4638      	mov	r0, r7
 8000a40:	eb04 0803 	add.w	r8, r4, r3
 8000a44:	f000 f8d6 	bl	8000bf4 <_sbrk_r>
 8000a48:	4580      	cmp	r8, r0
 8000a4a:	d13a      	bne.n	8000ac2 <_malloc_r+0xd2>
 8000a4c:	6821      	ldr	r1, [r4, #0]
 8000a4e:	3503      	adds	r5, #3
 8000a50:	1a6d      	subs	r5, r5, r1
 8000a52:	f025 0503 	bic.w	r5, r5, #3
 8000a56:	3508      	adds	r5, #8
 8000a58:	2d0c      	cmp	r5, #12
 8000a5a:	bf38      	it	cc
 8000a5c:	250c      	movcc	r5, #12
 8000a5e:	4629      	mov	r1, r5
 8000a60:	4638      	mov	r0, r7
 8000a62:	f7ff ffa5 	bl	80009b0 <sbrk_aligned>
 8000a66:	3001      	adds	r0, #1
 8000a68:	d02b      	beq.n	8000ac2 <_malloc_r+0xd2>
 8000a6a:	6823      	ldr	r3, [r4, #0]
 8000a6c:	442b      	add	r3, r5
 8000a6e:	6023      	str	r3, [r4, #0]
 8000a70:	e00e      	b.n	8000a90 <_malloc_r+0xa0>
 8000a72:	6822      	ldr	r2, [r4, #0]
 8000a74:	1b52      	subs	r2, r2, r5
 8000a76:	d41e      	bmi.n	8000ab6 <_malloc_r+0xc6>
 8000a78:	2a0b      	cmp	r2, #11
 8000a7a:	d916      	bls.n	8000aaa <_malloc_r+0xba>
 8000a7c:	1961      	adds	r1, r4, r5
 8000a7e:	42a3      	cmp	r3, r4
 8000a80:	6025      	str	r5, [r4, #0]
 8000a82:	bf18      	it	ne
 8000a84:	6059      	strne	r1, [r3, #4]
 8000a86:	6863      	ldr	r3, [r4, #4]
 8000a88:	bf08      	it	eq
 8000a8a:	6031      	streq	r1, [r6, #0]
 8000a8c:	5162      	str	r2, [r4, r5]
 8000a8e:	604b      	str	r3, [r1, #4]
 8000a90:	4638      	mov	r0, r7
 8000a92:	f104 060b 	add.w	r6, r4, #11
 8000a96:	f000 fa61 	bl	8000f5c <__malloc_unlock>
 8000a9a:	f026 0607 	bic.w	r6, r6, #7
 8000a9e:	1d23      	adds	r3, r4, #4
 8000aa0:	1af2      	subs	r2, r6, r3
 8000aa2:	d0b6      	beq.n	8000a12 <_malloc_r+0x22>
 8000aa4:	1b9b      	subs	r3, r3, r6
 8000aa6:	50a3      	str	r3, [r4, r2]
 8000aa8:	e7b3      	b.n	8000a12 <_malloc_r+0x22>
 8000aaa:	6862      	ldr	r2, [r4, #4]
 8000aac:	42a3      	cmp	r3, r4
 8000aae:	bf0c      	ite	eq
 8000ab0:	6032      	streq	r2, [r6, #0]
 8000ab2:	605a      	strne	r2, [r3, #4]
 8000ab4:	e7ec      	b.n	8000a90 <_malloc_r+0xa0>
 8000ab6:	4623      	mov	r3, r4
 8000ab8:	6864      	ldr	r4, [r4, #4]
 8000aba:	e7b2      	b.n	8000a22 <_malloc_r+0x32>
 8000abc:	4634      	mov	r4, r6
 8000abe:	6876      	ldr	r6, [r6, #4]
 8000ac0:	e7b9      	b.n	8000a36 <_malloc_r+0x46>
 8000ac2:	230c      	movs	r3, #12
 8000ac4:	603b      	str	r3, [r7, #0]
 8000ac6:	4638      	mov	r0, r7
 8000ac8:	f000 fa48 	bl	8000f5c <__malloc_unlock>
 8000acc:	e7a1      	b.n	8000a12 <_malloc_r+0x22>
 8000ace:	6025      	str	r5, [r4, #0]
 8000ad0:	e7de      	b.n	8000a90 <_malloc_r+0xa0>
 8000ad2:	bf00      	nop
 8000ad4:	20000088 	.word	0x20000088

08000ad8 <iprintf>:
 8000ad8:	b40f      	push	{r0, r1, r2, r3}
 8000ada:	4b0a      	ldr	r3, [pc, #40]	; (8000b04 <iprintf+0x2c>)
 8000adc:	b513      	push	{r0, r1, r4, lr}
 8000ade:	681c      	ldr	r4, [r3, #0]
 8000ae0:	b124      	cbz	r4, 8000aec <iprintf+0x14>
 8000ae2:	69a3      	ldr	r3, [r4, #24]
 8000ae4:	b913      	cbnz	r3, 8000aec <iprintf+0x14>
 8000ae6:	4620      	mov	r0, r4
 8000ae8:	f7ff fe48 	bl	800077c <__sinit>
 8000aec:	ab05      	add	r3, sp, #20
 8000aee:	9a04      	ldr	r2, [sp, #16]
 8000af0:	68a1      	ldr	r1, [r4, #8]
 8000af2:	9301      	str	r3, [sp, #4]
 8000af4:	4620      	mov	r0, r4
 8000af6:	f000 fa61 	bl	8000fbc <_vfiprintf_r>
 8000afa:	b002      	add	sp, #8
 8000afc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b00:	b004      	add	sp, #16
 8000b02:	4770      	bx	lr
 8000b04:	20000000 	.word	0x20000000

08000b08 <_puts_r>:
 8000b08:	b570      	push	{r4, r5, r6, lr}
 8000b0a:	460e      	mov	r6, r1
 8000b0c:	4605      	mov	r5, r0
 8000b0e:	b118      	cbz	r0, 8000b18 <_puts_r+0x10>
 8000b10:	6983      	ldr	r3, [r0, #24]
 8000b12:	b90b      	cbnz	r3, 8000b18 <_puts_r+0x10>
 8000b14:	f7ff fe32 	bl	800077c <__sinit>
 8000b18:	69ab      	ldr	r3, [r5, #24]
 8000b1a:	68ac      	ldr	r4, [r5, #8]
 8000b1c:	b913      	cbnz	r3, 8000b24 <_puts_r+0x1c>
 8000b1e:	4628      	mov	r0, r5
 8000b20:	f7ff fe2c 	bl	800077c <__sinit>
 8000b24:	4b2c      	ldr	r3, [pc, #176]	; (8000bd8 <_puts_r+0xd0>)
 8000b26:	429c      	cmp	r4, r3
 8000b28:	d120      	bne.n	8000b6c <_puts_r+0x64>
 8000b2a:	686c      	ldr	r4, [r5, #4]
 8000b2c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b2e:	07db      	lsls	r3, r3, #31
 8000b30:	d405      	bmi.n	8000b3e <_puts_r+0x36>
 8000b32:	89a3      	ldrh	r3, [r4, #12]
 8000b34:	0598      	lsls	r0, r3, #22
 8000b36:	d402      	bmi.n	8000b3e <_puts_r+0x36>
 8000b38:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b3a:	f7ff fee2 	bl	8000902 <__retarget_lock_acquire_recursive>
 8000b3e:	89a3      	ldrh	r3, [r4, #12]
 8000b40:	0719      	lsls	r1, r3, #28
 8000b42:	d51d      	bpl.n	8000b80 <_puts_r+0x78>
 8000b44:	6923      	ldr	r3, [r4, #16]
 8000b46:	b1db      	cbz	r3, 8000b80 <_puts_r+0x78>
 8000b48:	3e01      	subs	r6, #1
 8000b4a:	68a3      	ldr	r3, [r4, #8]
 8000b4c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000b50:	3b01      	subs	r3, #1
 8000b52:	60a3      	str	r3, [r4, #8]
 8000b54:	bb39      	cbnz	r1, 8000ba6 <_puts_r+0x9e>
 8000b56:	2b00      	cmp	r3, #0
 8000b58:	da38      	bge.n	8000bcc <_puts_r+0xc4>
 8000b5a:	4622      	mov	r2, r4
 8000b5c:	210a      	movs	r1, #10
 8000b5e:	4628      	mov	r0, r5
 8000b60:	f000 f89c 	bl	8000c9c <__swbuf_r>
 8000b64:	3001      	adds	r0, #1
 8000b66:	d011      	beq.n	8000b8c <_puts_r+0x84>
 8000b68:	250a      	movs	r5, #10
 8000b6a:	e011      	b.n	8000b90 <_puts_r+0x88>
 8000b6c:	4b1b      	ldr	r3, [pc, #108]	; (8000bdc <_puts_r+0xd4>)
 8000b6e:	429c      	cmp	r4, r3
 8000b70:	d101      	bne.n	8000b76 <_puts_r+0x6e>
 8000b72:	68ac      	ldr	r4, [r5, #8]
 8000b74:	e7da      	b.n	8000b2c <_puts_r+0x24>
 8000b76:	4b1a      	ldr	r3, [pc, #104]	; (8000be0 <_puts_r+0xd8>)
 8000b78:	429c      	cmp	r4, r3
 8000b7a:	bf08      	it	eq
 8000b7c:	68ec      	ldreq	r4, [r5, #12]
 8000b7e:	e7d5      	b.n	8000b2c <_puts_r+0x24>
 8000b80:	4621      	mov	r1, r4
 8000b82:	4628      	mov	r0, r5
 8000b84:	f000 f8ee 	bl	8000d64 <__swsetup_r>
 8000b88:	2800      	cmp	r0, #0
 8000b8a:	d0dd      	beq.n	8000b48 <_puts_r+0x40>
 8000b8c:	f04f 35ff 	mov.w	r5, #4294967295
 8000b90:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b92:	07da      	lsls	r2, r3, #31
 8000b94:	d405      	bmi.n	8000ba2 <_puts_r+0x9a>
 8000b96:	89a3      	ldrh	r3, [r4, #12]
 8000b98:	059b      	lsls	r3, r3, #22
 8000b9a:	d402      	bmi.n	8000ba2 <_puts_r+0x9a>
 8000b9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b9e:	f7ff feb1 	bl	8000904 <__retarget_lock_release_recursive>
 8000ba2:	4628      	mov	r0, r5
 8000ba4:	bd70      	pop	{r4, r5, r6, pc}
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	da04      	bge.n	8000bb4 <_puts_r+0xac>
 8000baa:	69a2      	ldr	r2, [r4, #24]
 8000bac:	429a      	cmp	r2, r3
 8000bae:	dc06      	bgt.n	8000bbe <_puts_r+0xb6>
 8000bb0:	290a      	cmp	r1, #10
 8000bb2:	d004      	beq.n	8000bbe <_puts_r+0xb6>
 8000bb4:	6823      	ldr	r3, [r4, #0]
 8000bb6:	1c5a      	adds	r2, r3, #1
 8000bb8:	6022      	str	r2, [r4, #0]
 8000bba:	7019      	strb	r1, [r3, #0]
 8000bbc:	e7c5      	b.n	8000b4a <_puts_r+0x42>
 8000bbe:	4622      	mov	r2, r4
 8000bc0:	4628      	mov	r0, r5
 8000bc2:	f000 f86b 	bl	8000c9c <__swbuf_r>
 8000bc6:	3001      	adds	r0, #1
 8000bc8:	d1bf      	bne.n	8000b4a <_puts_r+0x42>
 8000bca:	e7df      	b.n	8000b8c <_puts_r+0x84>
 8000bcc:	6823      	ldr	r3, [r4, #0]
 8000bce:	250a      	movs	r5, #10
 8000bd0:	1c5a      	adds	r2, r3, #1
 8000bd2:	6022      	str	r2, [r4, #0]
 8000bd4:	701d      	strb	r5, [r3, #0]
 8000bd6:	e7db      	b.n	8000b90 <_puts_r+0x88>
 8000bd8:	08001640 	.word	0x08001640
 8000bdc:	08001660 	.word	0x08001660
 8000be0:	08001620 	.word	0x08001620

08000be4 <puts>:
 8000be4:	4b02      	ldr	r3, [pc, #8]	; (8000bf0 <puts+0xc>)
 8000be6:	4601      	mov	r1, r0
 8000be8:	6818      	ldr	r0, [r3, #0]
 8000bea:	f7ff bf8d 	b.w	8000b08 <_puts_r>
 8000bee:	bf00      	nop
 8000bf0:	20000000 	.word	0x20000000

08000bf4 <_sbrk_r>:
 8000bf4:	b538      	push	{r3, r4, r5, lr}
 8000bf6:	4d06      	ldr	r5, [pc, #24]	; (8000c10 <_sbrk_r+0x1c>)
 8000bf8:	2300      	movs	r3, #0
 8000bfa:	4604      	mov	r4, r0
 8000bfc:	4608      	mov	r0, r1
 8000bfe:	602b      	str	r3, [r5, #0]
 8000c00:	f7ff fc2a 	bl	8000458 <_sbrk>
 8000c04:	1c43      	adds	r3, r0, #1
 8000c06:	d102      	bne.n	8000c0e <_sbrk_r+0x1a>
 8000c08:	682b      	ldr	r3, [r5, #0]
 8000c0a:	b103      	cbz	r3, 8000c0e <_sbrk_r+0x1a>
 8000c0c:	6023      	str	r3, [r4, #0]
 8000c0e:	bd38      	pop	{r3, r4, r5, pc}
 8000c10:	20000090 	.word	0x20000090

08000c14 <__sread>:
 8000c14:	b510      	push	{r4, lr}
 8000c16:	460c      	mov	r4, r1
 8000c18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c1c:	f000 fc92 	bl	8001544 <_read_r>
 8000c20:	2800      	cmp	r0, #0
 8000c22:	bfab      	itete	ge
 8000c24:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c26:	89a3      	ldrhlt	r3, [r4, #12]
 8000c28:	181b      	addge	r3, r3, r0
 8000c2a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c2e:	bfac      	ite	ge
 8000c30:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c32:	81a3      	strhlt	r3, [r4, #12]
 8000c34:	bd10      	pop	{r4, pc}

08000c36 <__swrite>:
 8000c36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c3a:	461f      	mov	r7, r3
 8000c3c:	898b      	ldrh	r3, [r1, #12]
 8000c3e:	05db      	lsls	r3, r3, #23
 8000c40:	4605      	mov	r5, r0
 8000c42:	460c      	mov	r4, r1
 8000c44:	4616      	mov	r6, r2
 8000c46:	d505      	bpl.n	8000c54 <__swrite+0x1e>
 8000c48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c4c:	2302      	movs	r3, #2
 8000c4e:	2200      	movs	r2, #0
 8000c50:	f000 f906 	bl	8000e60 <_lseek_r>
 8000c54:	89a3      	ldrh	r3, [r4, #12]
 8000c56:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c5a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c5e:	81a3      	strh	r3, [r4, #12]
 8000c60:	4632      	mov	r2, r6
 8000c62:	463b      	mov	r3, r7
 8000c64:	4628      	mov	r0, r5
 8000c66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000c6a:	f000 b869 	b.w	8000d40 <_write_r>

08000c6e <__sseek>:
 8000c6e:	b510      	push	{r4, lr}
 8000c70:	460c      	mov	r4, r1
 8000c72:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c76:	f000 f8f3 	bl	8000e60 <_lseek_r>
 8000c7a:	1c43      	adds	r3, r0, #1
 8000c7c:	89a3      	ldrh	r3, [r4, #12]
 8000c7e:	bf15      	itete	ne
 8000c80:	6560      	strne	r0, [r4, #84]	; 0x54
 8000c82:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000c86:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000c8a:	81a3      	strheq	r3, [r4, #12]
 8000c8c:	bf18      	it	ne
 8000c8e:	81a3      	strhne	r3, [r4, #12]
 8000c90:	bd10      	pop	{r4, pc}

08000c92 <__sclose>:
 8000c92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c96:	f000 b8d3 	b.w	8000e40 <_close_r>
	...

08000c9c <__swbuf_r>:
 8000c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c9e:	460e      	mov	r6, r1
 8000ca0:	4614      	mov	r4, r2
 8000ca2:	4605      	mov	r5, r0
 8000ca4:	b118      	cbz	r0, 8000cae <__swbuf_r+0x12>
 8000ca6:	6983      	ldr	r3, [r0, #24]
 8000ca8:	b90b      	cbnz	r3, 8000cae <__swbuf_r+0x12>
 8000caa:	f7ff fd67 	bl	800077c <__sinit>
 8000cae:	4b21      	ldr	r3, [pc, #132]	; (8000d34 <__swbuf_r+0x98>)
 8000cb0:	429c      	cmp	r4, r3
 8000cb2:	d12b      	bne.n	8000d0c <__swbuf_r+0x70>
 8000cb4:	686c      	ldr	r4, [r5, #4]
 8000cb6:	69a3      	ldr	r3, [r4, #24]
 8000cb8:	60a3      	str	r3, [r4, #8]
 8000cba:	89a3      	ldrh	r3, [r4, #12]
 8000cbc:	071a      	lsls	r2, r3, #28
 8000cbe:	d52f      	bpl.n	8000d20 <__swbuf_r+0x84>
 8000cc0:	6923      	ldr	r3, [r4, #16]
 8000cc2:	b36b      	cbz	r3, 8000d20 <__swbuf_r+0x84>
 8000cc4:	6923      	ldr	r3, [r4, #16]
 8000cc6:	6820      	ldr	r0, [r4, #0]
 8000cc8:	1ac0      	subs	r0, r0, r3
 8000cca:	6963      	ldr	r3, [r4, #20]
 8000ccc:	b2f6      	uxtb	r6, r6
 8000cce:	4283      	cmp	r3, r0
 8000cd0:	4637      	mov	r7, r6
 8000cd2:	dc04      	bgt.n	8000cde <__swbuf_r+0x42>
 8000cd4:	4621      	mov	r1, r4
 8000cd6:	4628      	mov	r0, r5
 8000cd8:	f7ff fcaa 	bl	8000630 <_fflush_r>
 8000cdc:	bb30      	cbnz	r0, 8000d2c <__swbuf_r+0x90>
 8000cde:	68a3      	ldr	r3, [r4, #8]
 8000ce0:	3b01      	subs	r3, #1
 8000ce2:	60a3      	str	r3, [r4, #8]
 8000ce4:	6823      	ldr	r3, [r4, #0]
 8000ce6:	1c5a      	adds	r2, r3, #1
 8000ce8:	6022      	str	r2, [r4, #0]
 8000cea:	701e      	strb	r6, [r3, #0]
 8000cec:	6963      	ldr	r3, [r4, #20]
 8000cee:	3001      	adds	r0, #1
 8000cf0:	4283      	cmp	r3, r0
 8000cf2:	d004      	beq.n	8000cfe <__swbuf_r+0x62>
 8000cf4:	89a3      	ldrh	r3, [r4, #12]
 8000cf6:	07db      	lsls	r3, r3, #31
 8000cf8:	d506      	bpl.n	8000d08 <__swbuf_r+0x6c>
 8000cfa:	2e0a      	cmp	r6, #10
 8000cfc:	d104      	bne.n	8000d08 <__swbuf_r+0x6c>
 8000cfe:	4621      	mov	r1, r4
 8000d00:	4628      	mov	r0, r5
 8000d02:	f7ff fc95 	bl	8000630 <_fflush_r>
 8000d06:	b988      	cbnz	r0, 8000d2c <__swbuf_r+0x90>
 8000d08:	4638      	mov	r0, r7
 8000d0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d0c:	4b0a      	ldr	r3, [pc, #40]	; (8000d38 <__swbuf_r+0x9c>)
 8000d0e:	429c      	cmp	r4, r3
 8000d10:	d101      	bne.n	8000d16 <__swbuf_r+0x7a>
 8000d12:	68ac      	ldr	r4, [r5, #8]
 8000d14:	e7cf      	b.n	8000cb6 <__swbuf_r+0x1a>
 8000d16:	4b09      	ldr	r3, [pc, #36]	; (8000d3c <__swbuf_r+0xa0>)
 8000d18:	429c      	cmp	r4, r3
 8000d1a:	bf08      	it	eq
 8000d1c:	68ec      	ldreq	r4, [r5, #12]
 8000d1e:	e7ca      	b.n	8000cb6 <__swbuf_r+0x1a>
 8000d20:	4621      	mov	r1, r4
 8000d22:	4628      	mov	r0, r5
 8000d24:	f000 f81e 	bl	8000d64 <__swsetup_r>
 8000d28:	2800      	cmp	r0, #0
 8000d2a:	d0cb      	beq.n	8000cc4 <__swbuf_r+0x28>
 8000d2c:	f04f 37ff 	mov.w	r7, #4294967295
 8000d30:	e7ea      	b.n	8000d08 <__swbuf_r+0x6c>
 8000d32:	bf00      	nop
 8000d34:	08001640 	.word	0x08001640
 8000d38:	08001660 	.word	0x08001660
 8000d3c:	08001620 	.word	0x08001620

08000d40 <_write_r>:
 8000d40:	b538      	push	{r3, r4, r5, lr}
 8000d42:	4d07      	ldr	r5, [pc, #28]	; (8000d60 <_write_r+0x20>)
 8000d44:	4604      	mov	r4, r0
 8000d46:	4608      	mov	r0, r1
 8000d48:	4611      	mov	r1, r2
 8000d4a:	2200      	movs	r2, #0
 8000d4c:	602a      	str	r2, [r5, #0]
 8000d4e:	461a      	mov	r2, r3
 8000d50:	f7ff fb31 	bl	80003b6 <_write>
 8000d54:	1c43      	adds	r3, r0, #1
 8000d56:	d102      	bne.n	8000d5e <_write_r+0x1e>
 8000d58:	682b      	ldr	r3, [r5, #0]
 8000d5a:	b103      	cbz	r3, 8000d5e <_write_r+0x1e>
 8000d5c:	6023      	str	r3, [r4, #0]
 8000d5e:	bd38      	pop	{r3, r4, r5, pc}
 8000d60:	20000090 	.word	0x20000090

08000d64 <__swsetup_r>:
 8000d64:	4b32      	ldr	r3, [pc, #200]	; (8000e30 <__swsetup_r+0xcc>)
 8000d66:	b570      	push	{r4, r5, r6, lr}
 8000d68:	681d      	ldr	r5, [r3, #0]
 8000d6a:	4606      	mov	r6, r0
 8000d6c:	460c      	mov	r4, r1
 8000d6e:	b125      	cbz	r5, 8000d7a <__swsetup_r+0x16>
 8000d70:	69ab      	ldr	r3, [r5, #24]
 8000d72:	b913      	cbnz	r3, 8000d7a <__swsetup_r+0x16>
 8000d74:	4628      	mov	r0, r5
 8000d76:	f7ff fd01 	bl	800077c <__sinit>
 8000d7a:	4b2e      	ldr	r3, [pc, #184]	; (8000e34 <__swsetup_r+0xd0>)
 8000d7c:	429c      	cmp	r4, r3
 8000d7e:	d10f      	bne.n	8000da0 <__swsetup_r+0x3c>
 8000d80:	686c      	ldr	r4, [r5, #4]
 8000d82:	89a3      	ldrh	r3, [r4, #12]
 8000d84:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000d88:	0719      	lsls	r1, r3, #28
 8000d8a:	d42c      	bmi.n	8000de6 <__swsetup_r+0x82>
 8000d8c:	06dd      	lsls	r5, r3, #27
 8000d8e:	d411      	bmi.n	8000db4 <__swsetup_r+0x50>
 8000d90:	2309      	movs	r3, #9
 8000d92:	6033      	str	r3, [r6, #0]
 8000d94:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000d98:	81a3      	strh	r3, [r4, #12]
 8000d9a:	f04f 30ff 	mov.w	r0, #4294967295
 8000d9e:	e03e      	b.n	8000e1e <__swsetup_r+0xba>
 8000da0:	4b25      	ldr	r3, [pc, #148]	; (8000e38 <__swsetup_r+0xd4>)
 8000da2:	429c      	cmp	r4, r3
 8000da4:	d101      	bne.n	8000daa <__swsetup_r+0x46>
 8000da6:	68ac      	ldr	r4, [r5, #8]
 8000da8:	e7eb      	b.n	8000d82 <__swsetup_r+0x1e>
 8000daa:	4b24      	ldr	r3, [pc, #144]	; (8000e3c <__swsetup_r+0xd8>)
 8000dac:	429c      	cmp	r4, r3
 8000dae:	bf08      	it	eq
 8000db0:	68ec      	ldreq	r4, [r5, #12]
 8000db2:	e7e6      	b.n	8000d82 <__swsetup_r+0x1e>
 8000db4:	0758      	lsls	r0, r3, #29
 8000db6:	d512      	bpl.n	8000dde <__swsetup_r+0x7a>
 8000db8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000dba:	b141      	cbz	r1, 8000dce <__swsetup_r+0x6a>
 8000dbc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000dc0:	4299      	cmp	r1, r3
 8000dc2:	d002      	beq.n	8000dca <__swsetup_r+0x66>
 8000dc4:	4630      	mov	r0, r6
 8000dc6:	f7ff fda7 	bl	8000918 <_free_r>
 8000dca:	2300      	movs	r3, #0
 8000dcc:	6363      	str	r3, [r4, #52]	; 0x34
 8000dce:	89a3      	ldrh	r3, [r4, #12]
 8000dd0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000dd4:	81a3      	strh	r3, [r4, #12]
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	6063      	str	r3, [r4, #4]
 8000dda:	6923      	ldr	r3, [r4, #16]
 8000ddc:	6023      	str	r3, [r4, #0]
 8000dde:	89a3      	ldrh	r3, [r4, #12]
 8000de0:	f043 0308 	orr.w	r3, r3, #8
 8000de4:	81a3      	strh	r3, [r4, #12]
 8000de6:	6923      	ldr	r3, [r4, #16]
 8000de8:	b94b      	cbnz	r3, 8000dfe <__swsetup_r+0x9a>
 8000dea:	89a3      	ldrh	r3, [r4, #12]
 8000dec:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000df0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000df4:	d003      	beq.n	8000dfe <__swsetup_r+0x9a>
 8000df6:	4621      	mov	r1, r4
 8000df8:	4630      	mov	r0, r6
 8000dfa:	f000 f869 	bl	8000ed0 <__smakebuf_r>
 8000dfe:	89a0      	ldrh	r0, [r4, #12]
 8000e00:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e04:	f010 0301 	ands.w	r3, r0, #1
 8000e08:	d00a      	beq.n	8000e20 <__swsetup_r+0xbc>
 8000e0a:	2300      	movs	r3, #0
 8000e0c:	60a3      	str	r3, [r4, #8]
 8000e0e:	6963      	ldr	r3, [r4, #20]
 8000e10:	425b      	negs	r3, r3
 8000e12:	61a3      	str	r3, [r4, #24]
 8000e14:	6923      	ldr	r3, [r4, #16]
 8000e16:	b943      	cbnz	r3, 8000e2a <__swsetup_r+0xc6>
 8000e18:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e1c:	d1ba      	bne.n	8000d94 <__swsetup_r+0x30>
 8000e1e:	bd70      	pop	{r4, r5, r6, pc}
 8000e20:	0781      	lsls	r1, r0, #30
 8000e22:	bf58      	it	pl
 8000e24:	6963      	ldrpl	r3, [r4, #20]
 8000e26:	60a3      	str	r3, [r4, #8]
 8000e28:	e7f4      	b.n	8000e14 <__swsetup_r+0xb0>
 8000e2a:	2000      	movs	r0, #0
 8000e2c:	e7f7      	b.n	8000e1e <__swsetup_r+0xba>
 8000e2e:	bf00      	nop
 8000e30:	20000000 	.word	0x20000000
 8000e34:	08001640 	.word	0x08001640
 8000e38:	08001660 	.word	0x08001660
 8000e3c:	08001620 	.word	0x08001620

08000e40 <_close_r>:
 8000e40:	b538      	push	{r3, r4, r5, lr}
 8000e42:	4d06      	ldr	r5, [pc, #24]	; (8000e5c <_close_r+0x1c>)
 8000e44:	2300      	movs	r3, #0
 8000e46:	4604      	mov	r4, r0
 8000e48:	4608      	mov	r0, r1
 8000e4a:	602b      	str	r3, [r5, #0]
 8000e4c:	f7ff facf 	bl	80003ee <_close>
 8000e50:	1c43      	adds	r3, r0, #1
 8000e52:	d102      	bne.n	8000e5a <_close_r+0x1a>
 8000e54:	682b      	ldr	r3, [r5, #0]
 8000e56:	b103      	cbz	r3, 8000e5a <_close_r+0x1a>
 8000e58:	6023      	str	r3, [r4, #0]
 8000e5a:	bd38      	pop	{r3, r4, r5, pc}
 8000e5c:	20000090 	.word	0x20000090

08000e60 <_lseek_r>:
 8000e60:	b538      	push	{r3, r4, r5, lr}
 8000e62:	4d07      	ldr	r5, [pc, #28]	; (8000e80 <_lseek_r+0x20>)
 8000e64:	4604      	mov	r4, r0
 8000e66:	4608      	mov	r0, r1
 8000e68:	4611      	mov	r1, r2
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	602a      	str	r2, [r5, #0]
 8000e6e:	461a      	mov	r2, r3
 8000e70:	f7ff fae4 	bl	800043c <_lseek>
 8000e74:	1c43      	adds	r3, r0, #1
 8000e76:	d102      	bne.n	8000e7e <_lseek_r+0x1e>
 8000e78:	682b      	ldr	r3, [r5, #0]
 8000e7a:	b103      	cbz	r3, 8000e7e <_lseek_r+0x1e>
 8000e7c:	6023      	str	r3, [r4, #0]
 8000e7e:	bd38      	pop	{r3, r4, r5, pc}
 8000e80:	20000090 	.word	0x20000090

08000e84 <__swhatbuf_r>:
 8000e84:	b570      	push	{r4, r5, r6, lr}
 8000e86:	460e      	mov	r6, r1
 8000e88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e8c:	2900      	cmp	r1, #0
 8000e8e:	b096      	sub	sp, #88	; 0x58
 8000e90:	4614      	mov	r4, r2
 8000e92:	461d      	mov	r5, r3
 8000e94:	da08      	bge.n	8000ea8 <__swhatbuf_r+0x24>
 8000e96:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000e9a:	2200      	movs	r2, #0
 8000e9c:	602a      	str	r2, [r5, #0]
 8000e9e:	061a      	lsls	r2, r3, #24
 8000ea0:	d410      	bmi.n	8000ec4 <__swhatbuf_r+0x40>
 8000ea2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ea6:	e00e      	b.n	8000ec6 <__swhatbuf_r+0x42>
 8000ea8:	466a      	mov	r2, sp
 8000eaa:	f000 fb5d 	bl	8001568 <_fstat_r>
 8000eae:	2800      	cmp	r0, #0
 8000eb0:	dbf1      	blt.n	8000e96 <__swhatbuf_r+0x12>
 8000eb2:	9a01      	ldr	r2, [sp, #4]
 8000eb4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000eb8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000ebc:	425a      	negs	r2, r3
 8000ebe:	415a      	adcs	r2, r3
 8000ec0:	602a      	str	r2, [r5, #0]
 8000ec2:	e7ee      	b.n	8000ea2 <__swhatbuf_r+0x1e>
 8000ec4:	2340      	movs	r3, #64	; 0x40
 8000ec6:	2000      	movs	r0, #0
 8000ec8:	6023      	str	r3, [r4, #0]
 8000eca:	b016      	add	sp, #88	; 0x58
 8000ecc:	bd70      	pop	{r4, r5, r6, pc}
	...

08000ed0 <__smakebuf_r>:
 8000ed0:	898b      	ldrh	r3, [r1, #12]
 8000ed2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000ed4:	079d      	lsls	r5, r3, #30
 8000ed6:	4606      	mov	r6, r0
 8000ed8:	460c      	mov	r4, r1
 8000eda:	d507      	bpl.n	8000eec <__smakebuf_r+0x1c>
 8000edc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000ee0:	6023      	str	r3, [r4, #0]
 8000ee2:	6123      	str	r3, [r4, #16]
 8000ee4:	2301      	movs	r3, #1
 8000ee6:	6163      	str	r3, [r4, #20]
 8000ee8:	b002      	add	sp, #8
 8000eea:	bd70      	pop	{r4, r5, r6, pc}
 8000eec:	ab01      	add	r3, sp, #4
 8000eee:	466a      	mov	r2, sp
 8000ef0:	f7ff ffc8 	bl	8000e84 <__swhatbuf_r>
 8000ef4:	9900      	ldr	r1, [sp, #0]
 8000ef6:	4605      	mov	r5, r0
 8000ef8:	4630      	mov	r0, r6
 8000efa:	f7ff fd79 	bl	80009f0 <_malloc_r>
 8000efe:	b948      	cbnz	r0, 8000f14 <__smakebuf_r+0x44>
 8000f00:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f04:	059a      	lsls	r2, r3, #22
 8000f06:	d4ef      	bmi.n	8000ee8 <__smakebuf_r+0x18>
 8000f08:	f023 0303 	bic.w	r3, r3, #3
 8000f0c:	f043 0302 	orr.w	r3, r3, #2
 8000f10:	81a3      	strh	r3, [r4, #12]
 8000f12:	e7e3      	b.n	8000edc <__smakebuf_r+0xc>
 8000f14:	4b0d      	ldr	r3, [pc, #52]	; (8000f4c <__smakebuf_r+0x7c>)
 8000f16:	62b3      	str	r3, [r6, #40]	; 0x28
 8000f18:	89a3      	ldrh	r3, [r4, #12]
 8000f1a:	6020      	str	r0, [r4, #0]
 8000f1c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f20:	81a3      	strh	r3, [r4, #12]
 8000f22:	9b00      	ldr	r3, [sp, #0]
 8000f24:	6163      	str	r3, [r4, #20]
 8000f26:	9b01      	ldr	r3, [sp, #4]
 8000f28:	6120      	str	r0, [r4, #16]
 8000f2a:	b15b      	cbz	r3, 8000f44 <__smakebuf_r+0x74>
 8000f2c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f30:	4630      	mov	r0, r6
 8000f32:	f000 fb2b 	bl	800158c <_isatty_r>
 8000f36:	b128      	cbz	r0, 8000f44 <__smakebuf_r+0x74>
 8000f38:	89a3      	ldrh	r3, [r4, #12]
 8000f3a:	f023 0303 	bic.w	r3, r3, #3
 8000f3e:	f043 0301 	orr.w	r3, r3, #1
 8000f42:	81a3      	strh	r3, [r4, #12]
 8000f44:	89a0      	ldrh	r0, [r4, #12]
 8000f46:	4305      	orrs	r5, r0
 8000f48:	81a5      	strh	r5, [r4, #12]
 8000f4a:	e7cd      	b.n	8000ee8 <__smakebuf_r+0x18>
 8000f4c:	08000715 	.word	0x08000715

08000f50 <__malloc_lock>:
 8000f50:	4801      	ldr	r0, [pc, #4]	; (8000f58 <__malloc_lock+0x8>)
 8000f52:	f7ff bcd6 	b.w	8000902 <__retarget_lock_acquire_recursive>
 8000f56:	bf00      	nop
 8000f58:	20000084 	.word	0x20000084

08000f5c <__malloc_unlock>:
 8000f5c:	4801      	ldr	r0, [pc, #4]	; (8000f64 <__malloc_unlock+0x8>)
 8000f5e:	f7ff bcd1 	b.w	8000904 <__retarget_lock_release_recursive>
 8000f62:	bf00      	nop
 8000f64:	20000084 	.word	0x20000084

08000f68 <__sfputc_r>:
 8000f68:	6893      	ldr	r3, [r2, #8]
 8000f6a:	3b01      	subs	r3, #1
 8000f6c:	2b00      	cmp	r3, #0
 8000f6e:	b410      	push	{r4}
 8000f70:	6093      	str	r3, [r2, #8]
 8000f72:	da08      	bge.n	8000f86 <__sfputc_r+0x1e>
 8000f74:	6994      	ldr	r4, [r2, #24]
 8000f76:	42a3      	cmp	r3, r4
 8000f78:	db01      	blt.n	8000f7e <__sfputc_r+0x16>
 8000f7a:	290a      	cmp	r1, #10
 8000f7c:	d103      	bne.n	8000f86 <__sfputc_r+0x1e>
 8000f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f82:	f7ff be8b 	b.w	8000c9c <__swbuf_r>
 8000f86:	6813      	ldr	r3, [r2, #0]
 8000f88:	1c58      	adds	r0, r3, #1
 8000f8a:	6010      	str	r0, [r2, #0]
 8000f8c:	7019      	strb	r1, [r3, #0]
 8000f8e:	4608      	mov	r0, r1
 8000f90:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f94:	4770      	bx	lr

08000f96 <__sfputs_r>:
 8000f96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f98:	4606      	mov	r6, r0
 8000f9a:	460f      	mov	r7, r1
 8000f9c:	4614      	mov	r4, r2
 8000f9e:	18d5      	adds	r5, r2, r3
 8000fa0:	42ac      	cmp	r4, r5
 8000fa2:	d101      	bne.n	8000fa8 <__sfputs_r+0x12>
 8000fa4:	2000      	movs	r0, #0
 8000fa6:	e007      	b.n	8000fb8 <__sfputs_r+0x22>
 8000fa8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000fac:	463a      	mov	r2, r7
 8000fae:	4630      	mov	r0, r6
 8000fb0:	f7ff ffda 	bl	8000f68 <__sfputc_r>
 8000fb4:	1c43      	adds	r3, r0, #1
 8000fb6:	d1f3      	bne.n	8000fa0 <__sfputs_r+0xa>
 8000fb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000fbc <_vfiprintf_r>:
 8000fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fc0:	460d      	mov	r5, r1
 8000fc2:	b09d      	sub	sp, #116	; 0x74
 8000fc4:	4614      	mov	r4, r2
 8000fc6:	4698      	mov	r8, r3
 8000fc8:	4606      	mov	r6, r0
 8000fca:	b118      	cbz	r0, 8000fd4 <_vfiprintf_r+0x18>
 8000fcc:	6983      	ldr	r3, [r0, #24]
 8000fce:	b90b      	cbnz	r3, 8000fd4 <_vfiprintf_r+0x18>
 8000fd0:	f7ff fbd4 	bl	800077c <__sinit>
 8000fd4:	4b89      	ldr	r3, [pc, #548]	; (80011fc <_vfiprintf_r+0x240>)
 8000fd6:	429d      	cmp	r5, r3
 8000fd8:	d11b      	bne.n	8001012 <_vfiprintf_r+0x56>
 8000fda:	6875      	ldr	r5, [r6, #4]
 8000fdc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000fde:	07d9      	lsls	r1, r3, #31
 8000fe0:	d405      	bmi.n	8000fee <_vfiprintf_r+0x32>
 8000fe2:	89ab      	ldrh	r3, [r5, #12]
 8000fe4:	059a      	lsls	r2, r3, #22
 8000fe6:	d402      	bmi.n	8000fee <_vfiprintf_r+0x32>
 8000fe8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000fea:	f7ff fc8a 	bl	8000902 <__retarget_lock_acquire_recursive>
 8000fee:	89ab      	ldrh	r3, [r5, #12]
 8000ff0:	071b      	lsls	r3, r3, #28
 8000ff2:	d501      	bpl.n	8000ff8 <_vfiprintf_r+0x3c>
 8000ff4:	692b      	ldr	r3, [r5, #16]
 8000ff6:	b9eb      	cbnz	r3, 8001034 <_vfiprintf_r+0x78>
 8000ff8:	4629      	mov	r1, r5
 8000ffa:	4630      	mov	r0, r6
 8000ffc:	f7ff feb2 	bl	8000d64 <__swsetup_r>
 8001000:	b1c0      	cbz	r0, 8001034 <_vfiprintf_r+0x78>
 8001002:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001004:	07dc      	lsls	r4, r3, #31
 8001006:	d50e      	bpl.n	8001026 <_vfiprintf_r+0x6a>
 8001008:	f04f 30ff 	mov.w	r0, #4294967295
 800100c:	b01d      	add	sp, #116	; 0x74
 800100e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001012:	4b7b      	ldr	r3, [pc, #492]	; (8001200 <_vfiprintf_r+0x244>)
 8001014:	429d      	cmp	r5, r3
 8001016:	d101      	bne.n	800101c <_vfiprintf_r+0x60>
 8001018:	68b5      	ldr	r5, [r6, #8]
 800101a:	e7df      	b.n	8000fdc <_vfiprintf_r+0x20>
 800101c:	4b79      	ldr	r3, [pc, #484]	; (8001204 <_vfiprintf_r+0x248>)
 800101e:	429d      	cmp	r5, r3
 8001020:	bf08      	it	eq
 8001022:	68f5      	ldreq	r5, [r6, #12]
 8001024:	e7da      	b.n	8000fdc <_vfiprintf_r+0x20>
 8001026:	89ab      	ldrh	r3, [r5, #12]
 8001028:	0598      	lsls	r0, r3, #22
 800102a:	d4ed      	bmi.n	8001008 <_vfiprintf_r+0x4c>
 800102c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800102e:	f7ff fc69 	bl	8000904 <__retarget_lock_release_recursive>
 8001032:	e7e9      	b.n	8001008 <_vfiprintf_r+0x4c>
 8001034:	2300      	movs	r3, #0
 8001036:	9309      	str	r3, [sp, #36]	; 0x24
 8001038:	2320      	movs	r3, #32
 800103a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800103e:	f8cd 800c 	str.w	r8, [sp, #12]
 8001042:	2330      	movs	r3, #48	; 0x30
 8001044:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001208 <_vfiprintf_r+0x24c>
 8001048:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800104c:	f04f 0901 	mov.w	r9, #1
 8001050:	4623      	mov	r3, r4
 8001052:	469a      	mov	sl, r3
 8001054:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001058:	b10a      	cbz	r2, 800105e <_vfiprintf_r+0xa2>
 800105a:	2a25      	cmp	r2, #37	; 0x25
 800105c:	d1f9      	bne.n	8001052 <_vfiprintf_r+0x96>
 800105e:	ebba 0b04 	subs.w	fp, sl, r4
 8001062:	d00b      	beq.n	800107c <_vfiprintf_r+0xc0>
 8001064:	465b      	mov	r3, fp
 8001066:	4622      	mov	r2, r4
 8001068:	4629      	mov	r1, r5
 800106a:	4630      	mov	r0, r6
 800106c:	f7ff ff93 	bl	8000f96 <__sfputs_r>
 8001070:	3001      	adds	r0, #1
 8001072:	f000 80aa 	beq.w	80011ca <_vfiprintf_r+0x20e>
 8001076:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001078:	445a      	add	r2, fp
 800107a:	9209      	str	r2, [sp, #36]	; 0x24
 800107c:	f89a 3000 	ldrb.w	r3, [sl]
 8001080:	2b00      	cmp	r3, #0
 8001082:	f000 80a2 	beq.w	80011ca <_vfiprintf_r+0x20e>
 8001086:	2300      	movs	r3, #0
 8001088:	f04f 32ff 	mov.w	r2, #4294967295
 800108c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001090:	f10a 0a01 	add.w	sl, sl, #1
 8001094:	9304      	str	r3, [sp, #16]
 8001096:	9307      	str	r3, [sp, #28]
 8001098:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800109c:	931a      	str	r3, [sp, #104]	; 0x68
 800109e:	4654      	mov	r4, sl
 80010a0:	2205      	movs	r2, #5
 80010a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80010a6:	4858      	ldr	r0, [pc, #352]	; (8001208 <_vfiprintf_r+0x24c>)
 80010a8:	f7ff f89a 	bl	80001e0 <memchr>
 80010ac:	9a04      	ldr	r2, [sp, #16]
 80010ae:	b9d8      	cbnz	r0, 80010e8 <_vfiprintf_r+0x12c>
 80010b0:	06d1      	lsls	r1, r2, #27
 80010b2:	bf44      	itt	mi
 80010b4:	2320      	movmi	r3, #32
 80010b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80010ba:	0713      	lsls	r3, r2, #28
 80010bc:	bf44      	itt	mi
 80010be:	232b      	movmi	r3, #43	; 0x2b
 80010c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80010c4:	f89a 3000 	ldrb.w	r3, [sl]
 80010c8:	2b2a      	cmp	r3, #42	; 0x2a
 80010ca:	d015      	beq.n	80010f8 <_vfiprintf_r+0x13c>
 80010cc:	9a07      	ldr	r2, [sp, #28]
 80010ce:	4654      	mov	r4, sl
 80010d0:	2000      	movs	r0, #0
 80010d2:	f04f 0c0a 	mov.w	ip, #10
 80010d6:	4621      	mov	r1, r4
 80010d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80010dc:	3b30      	subs	r3, #48	; 0x30
 80010de:	2b09      	cmp	r3, #9
 80010e0:	d94e      	bls.n	8001180 <_vfiprintf_r+0x1c4>
 80010e2:	b1b0      	cbz	r0, 8001112 <_vfiprintf_r+0x156>
 80010e4:	9207      	str	r2, [sp, #28]
 80010e6:	e014      	b.n	8001112 <_vfiprintf_r+0x156>
 80010e8:	eba0 0308 	sub.w	r3, r0, r8
 80010ec:	fa09 f303 	lsl.w	r3, r9, r3
 80010f0:	4313      	orrs	r3, r2
 80010f2:	9304      	str	r3, [sp, #16]
 80010f4:	46a2      	mov	sl, r4
 80010f6:	e7d2      	b.n	800109e <_vfiprintf_r+0xe2>
 80010f8:	9b03      	ldr	r3, [sp, #12]
 80010fa:	1d19      	adds	r1, r3, #4
 80010fc:	681b      	ldr	r3, [r3, #0]
 80010fe:	9103      	str	r1, [sp, #12]
 8001100:	2b00      	cmp	r3, #0
 8001102:	bfbb      	ittet	lt
 8001104:	425b      	neglt	r3, r3
 8001106:	f042 0202 	orrlt.w	r2, r2, #2
 800110a:	9307      	strge	r3, [sp, #28]
 800110c:	9307      	strlt	r3, [sp, #28]
 800110e:	bfb8      	it	lt
 8001110:	9204      	strlt	r2, [sp, #16]
 8001112:	7823      	ldrb	r3, [r4, #0]
 8001114:	2b2e      	cmp	r3, #46	; 0x2e
 8001116:	d10c      	bne.n	8001132 <_vfiprintf_r+0x176>
 8001118:	7863      	ldrb	r3, [r4, #1]
 800111a:	2b2a      	cmp	r3, #42	; 0x2a
 800111c:	d135      	bne.n	800118a <_vfiprintf_r+0x1ce>
 800111e:	9b03      	ldr	r3, [sp, #12]
 8001120:	1d1a      	adds	r2, r3, #4
 8001122:	681b      	ldr	r3, [r3, #0]
 8001124:	9203      	str	r2, [sp, #12]
 8001126:	2b00      	cmp	r3, #0
 8001128:	bfb8      	it	lt
 800112a:	f04f 33ff 	movlt.w	r3, #4294967295
 800112e:	3402      	adds	r4, #2
 8001130:	9305      	str	r3, [sp, #20]
 8001132:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001218 <_vfiprintf_r+0x25c>
 8001136:	7821      	ldrb	r1, [r4, #0]
 8001138:	2203      	movs	r2, #3
 800113a:	4650      	mov	r0, sl
 800113c:	f7ff f850 	bl	80001e0 <memchr>
 8001140:	b140      	cbz	r0, 8001154 <_vfiprintf_r+0x198>
 8001142:	2340      	movs	r3, #64	; 0x40
 8001144:	eba0 000a 	sub.w	r0, r0, sl
 8001148:	fa03 f000 	lsl.w	r0, r3, r0
 800114c:	9b04      	ldr	r3, [sp, #16]
 800114e:	4303      	orrs	r3, r0
 8001150:	3401      	adds	r4, #1
 8001152:	9304      	str	r3, [sp, #16]
 8001154:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001158:	482c      	ldr	r0, [pc, #176]	; (800120c <_vfiprintf_r+0x250>)
 800115a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800115e:	2206      	movs	r2, #6
 8001160:	f7ff f83e 	bl	80001e0 <memchr>
 8001164:	2800      	cmp	r0, #0
 8001166:	d03f      	beq.n	80011e8 <_vfiprintf_r+0x22c>
 8001168:	4b29      	ldr	r3, [pc, #164]	; (8001210 <_vfiprintf_r+0x254>)
 800116a:	bb1b      	cbnz	r3, 80011b4 <_vfiprintf_r+0x1f8>
 800116c:	9b03      	ldr	r3, [sp, #12]
 800116e:	3307      	adds	r3, #7
 8001170:	f023 0307 	bic.w	r3, r3, #7
 8001174:	3308      	adds	r3, #8
 8001176:	9303      	str	r3, [sp, #12]
 8001178:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800117a:	443b      	add	r3, r7
 800117c:	9309      	str	r3, [sp, #36]	; 0x24
 800117e:	e767      	b.n	8001050 <_vfiprintf_r+0x94>
 8001180:	fb0c 3202 	mla	r2, ip, r2, r3
 8001184:	460c      	mov	r4, r1
 8001186:	2001      	movs	r0, #1
 8001188:	e7a5      	b.n	80010d6 <_vfiprintf_r+0x11a>
 800118a:	2300      	movs	r3, #0
 800118c:	3401      	adds	r4, #1
 800118e:	9305      	str	r3, [sp, #20]
 8001190:	4619      	mov	r1, r3
 8001192:	f04f 0c0a 	mov.w	ip, #10
 8001196:	4620      	mov	r0, r4
 8001198:	f810 2b01 	ldrb.w	r2, [r0], #1
 800119c:	3a30      	subs	r2, #48	; 0x30
 800119e:	2a09      	cmp	r2, #9
 80011a0:	d903      	bls.n	80011aa <_vfiprintf_r+0x1ee>
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d0c5      	beq.n	8001132 <_vfiprintf_r+0x176>
 80011a6:	9105      	str	r1, [sp, #20]
 80011a8:	e7c3      	b.n	8001132 <_vfiprintf_r+0x176>
 80011aa:	fb0c 2101 	mla	r1, ip, r1, r2
 80011ae:	4604      	mov	r4, r0
 80011b0:	2301      	movs	r3, #1
 80011b2:	e7f0      	b.n	8001196 <_vfiprintf_r+0x1da>
 80011b4:	ab03      	add	r3, sp, #12
 80011b6:	9300      	str	r3, [sp, #0]
 80011b8:	462a      	mov	r2, r5
 80011ba:	4b16      	ldr	r3, [pc, #88]	; (8001214 <_vfiprintf_r+0x258>)
 80011bc:	a904      	add	r1, sp, #16
 80011be:	4630      	mov	r0, r6
 80011c0:	f3af 8000 	nop.w
 80011c4:	4607      	mov	r7, r0
 80011c6:	1c78      	adds	r0, r7, #1
 80011c8:	d1d6      	bne.n	8001178 <_vfiprintf_r+0x1bc>
 80011ca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80011cc:	07d9      	lsls	r1, r3, #31
 80011ce:	d405      	bmi.n	80011dc <_vfiprintf_r+0x220>
 80011d0:	89ab      	ldrh	r3, [r5, #12]
 80011d2:	059a      	lsls	r2, r3, #22
 80011d4:	d402      	bmi.n	80011dc <_vfiprintf_r+0x220>
 80011d6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80011d8:	f7ff fb94 	bl	8000904 <__retarget_lock_release_recursive>
 80011dc:	89ab      	ldrh	r3, [r5, #12]
 80011de:	065b      	lsls	r3, r3, #25
 80011e0:	f53f af12 	bmi.w	8001008 <_vfiprintf_r+0x4c>
 80011e4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80011e6:	e711      	b.n	800100c <_vfiprintf_r+0x50>
 80011e8:	ab03      	add	r3, sp, #12
 80011ea:	9300      	str	r3, [sp, #0]
 80011ec:	462a      	mov	r2, r5
 80011ee:	4b09      	ldr	r3, [pc, #36]	; (8001214 <_vfiprintf_r+0x258>)
 80011f0:	a904      	add	r1, sp, #16
 80011f2:	4630      	mov	r0, r6
 80011f4:	f000 f880 	bl	80012f8 <_printf_i>
 80011f8:	e7e4      	b.n	80011c4 <_vfiprintf_r+0x208>
 80011fa:	bf00      	nop
 80011fc:	08001640 	.word	0x08001640
 8001200:	08001660 	.word	0x08001660
 8001204:	08001620 	.word	0x08001620
 8001208:	08001684 	.word	0x08001684
 800120c:	0800168e 	.word	0x0800168e
 8001210:	00000000 	.word	0x00000000
 8001214:	08000f97 	.word	0x08000f97
 8001218:	0800168a 	.word	0x0800168a

0800121c <_printf_common>:
 800121c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001220:	4616      	mov	r6, r2
 8001222:	4699      	mov	r9, r3
 8001224:	688a      	ldr	r2, [r1, #8]
 8001226:	690b      	ldr	r3, [r1, #16]
 8001228:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800122c:	4293      	cmp	r3, r2
 800122e:	bfb8      	it	lt
 8001230:	4613      	movlt	r3, r2
 8001232:	6033      	str	r3, [r6, #0]
 8001234:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001238:	4607      	mov	r7, r0
 800123a:	460c      	mov	r4, r1
 800123c:	b10a      	cbz	r2, 8001242 <_printf_common+0x26>
 800123e:	3301      	adds	r3, #1
 8001240:	6033      	str	r3, [r6, #0]
 8001242:	6823      	ldr	r3, [r4, #0]
 8001244:	0699      	lsls	r1, r3, #26
 8001246:	bf42      	ittt	mi
 8001248:	6833      	ldrmi	r3, [r6, #0]
 800124a:	3302      	addmi	r3, #2
 800124c:	6033      	strmi	r3, [r6, #0]
 800124e:	6825      	ldr	r5, [r4, #0]
 8001250:	f015 0506 	ands.w	r5, r5, #6
 8001254:	d106      	bne.n	8001264 <_printf_common+0x48>
 8001256:	f104 0a19 	add.w	sl, r4, #25
 800125a:	68e3      	ldr	r3, [r4, #12]
 800125c:	6832      	ldr	r2, [r6, #0]
 800125e:	1a9b      	subs	r3, r3, r2
 8001260:	42ab      	cmp	r3, r5
 8001262:	dc26      	bgt.n	80012b2 <_printf_common+0x96>
 8001264:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001268:	1e13      	subs	r3, r2, #0
 800126a:	6822      	ldr	r2, [r4, #0]
 800126c:	bf18      	it	ne
 800126e:	2301      	movne	r3, #1
 8001270:	0692      	lsls	r2, r2, #26
 8001272:	d42b      	bmi.n	80012cc <_printf_common+0xb0>
 8001274:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001278:	4649      	mov	r1, r9
 800127a:	4638      	mov	r0, r7
 800127c:	47c0      	blx	r8
 800127e:	3001      	adds	r0, #1
 8001280:	d01e      	beq.n	80012c0 <_printf_common+0xa4>
 8001282:	6823      	ldr	r3, [r4, #0]
 8001284:	68e5      	ldr	r5, [r4, #12]
 8001286:	6832      	ldr	r2, [r6, #0]
 8001288:	f003 0306 	and.w	r3, r3, #6
 800128c:	2b04      	cmp	r3, #4
 800128e:	bf08      	it	eq
 8001290:	1aad      	subeq	r5, r5, r2
 8001292:	68a3      	ldr	r3, [r4, #8]
 8001294:	6922      	ldr	r2, [r4, #16]
 8001296:	bf0c      	ite	eq
 8001298:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800129c:	2500      	movne	r5, #0
 800129e:	4293      	cmp	r3, r2
 80012a0:	bfc4      	itt	gt
 80012a2:	1a9b      	subgt	r3, r3, r2
 80012a4:	18ed      	addgt	r5, r5, r3
 80012a6:	2600      	movs	r6, #0
 80012a8:	341a      	adds	r4, #26
 80012aa:	42b5      	cmp	r5, r6
 80012ac:	d11a      	bne.n	80012e4 <_printf_common+0xc8>
 80012ae:	2000      	movs	r0, #0
 80012b0:	e008      	b.n	80012c4 <_printf_common+0xa8>
 80012b2:	2301      	movs	r3, #1
 80012b4:	4652      	mov	r2, sl
 80012b6:	4649      	mov	r1, r9
 80012b8:	4638      	mov	r0, r7
 80012ba:	47c0      	blx	r8
 80012bc:	3001      	adds	r0, #1
 80012be:	d103      	bne.n	80012c8 <_printf_common+0xac>
 80012c0:	f04f 30ff 	mov.w	r0, #4294967295
 80012c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012c8:	3501      	adds	r5, #1
 80012ca:	e7c6      	b.n	800125a <_printf_common+0x3e>
 80012cc:	18e1      	adds	r1, r4, r3
 80012ce:	1c5a      	adds	r2, r3, #1
 80012d0:	2030      	movs	r0, #48	; 0x30
 80012d2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80012d6:	4422      	add	r2, r4
 80012d8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80012dc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80012e0:	3302      	adds	r3, #2
 80012e2:	e7c7      	b.n	8001274 <_printf_common+0x58>
 80012e4:	2301      	movs	r3, #1
 80012e6:	4622      	mov	r2, r4
 80012e8:	4649      	mov	r1, r9
 80012ea:	4638      	mov	r0, r7
 80012ec:	47c0      	blx	r8
 80012ee:	3001      	adds	r0, #1
 80012f0:	d0e6      	beq.n	80012c0 <_printf_common+0xa4>
 80012f2:	3601      	adds	r6, #1
 80012f4:	e7d9      	b.n	80012aa <_printf_common+0x8e>
	...

080012f8 <_printf_i>:
 80012f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80012fc:	7e0f      	ldrb	r7, [r1, #24]
 80012fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001300:	2f78      	cmp	r7, #120	; 0x78
 8001302:	4691      	mov	r9, r2
 8001304:	4680      	mov	r8, r0
 8001306:	460c      	mov	r4, r1
 8001308:	469a      	mov	sl, r3
 800130a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800130e:	d807      	bhi.n	8001320 <_printf_i+0x28>
 8001310:	2f62      	cmp	r7, #98	; 0x62
 8001312:	d80a      	bhi.n	800132a <_printf_i+0x32>
 8001314:	2f00      	cmp	r7, #0
 8001316:	f000 80d8 	beq.w	80014ca <_printf_i+0x1d2>
 800131a:	2f58      	cmp	r7, #88	; 0x58
 800131c:	f000 80a3 	beq.w	8001466 <_printf_i+0x16e>
 8001320:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001324:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001328:	e03a      	b.n	80013a0 <_printf_i+0xa8>
 800132a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800132e:	2b15      	cmp	r3, #21
 8001330:	d8f6      	bhi.n	8001320 <_printf_i+0x28>
 8001332:	a101      	add	r1, pc, #4	; (adr r1, 8001338 <_printf_i+0x40>)
 8001334:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001338:	08001391 	.word	0x08001391
 800133c:	080013a5 	.word	0x080013a5
 8001340:	08001321 	.word	0x08001321
 8001344:	08001321 	.word	0x08001321
 8001348:	08001321 	.word	0x08001321
 800134c:	08001321 	.word	0x08001321
 8001350:	080013a5 	.word	0x080013a5
 8001354:	08001321 	.word	0x08001321
 8001358:	08001321 	.word	0x08001321
 800135c:	08001321 	.word	0x08001321
 8001360:	08001321 	.word	0x08001321
 8001364:	080014b1 	.word	0x080014b1
 8001368:	080013d5 	.word	0x080013d5
 800136c:	08001493 	.word	0x08001493
 8001370:	08001321 	.word	0x08001321
 8001374:	08001321 	.word	0x08001321
 8001378:	080014d3 	.word	0x080014d3
 800137c:	08001321 	.word	0x08001321
 8001380:	080013d5 	.word	0x080013d5
 8001384:	08001321 	.word	0x08001321
 8001388:	08001321 	.word	0x08001321
 800138c:	0800149b 	.word	0x0800149b
 8001390:	682b      	ldr	r3, [r5, #0]
 8001392:	1d1a      	adds	r2, r3, #4
 8001394:	681b      	ldr	r3, [r3, #0]
 8001396:	602a      	str	r2, [r5, #0]
 8001398:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800139c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80013a0:	2301      	movs	r3, #1
 80013a2:	e0a3      	b.n	80014ec <_printf_i+0x1f4>
 80013a4:	6820      	ldr	r0, [r4, #0]
 80013a6:	6829      	ldr	r1, [r5, #0]
 80013a8:	0606      	lsls	r6, r0, #24
 80013aa:	f101 0304 	add.w	r3, r1, #4
 80013ae:	d50a      	bpl.n	80013c6 <_printf_i+0xce>
 80013b0:	680e      	ldr	r6, [r1, #0]
 80013b2:	602b      	str	r3, [r5, #0]
 80013b4:	2e00      	cmp	r6, #0
 80013b6:	da03      	bge.n	80013c0 <_printf_i+0xc8>
 80013b8:	232d      	movs	r3, #45	; 0x2d
 80013ba:	4276      	negs	r6, r6
 80013bc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013c0:	485e      	ldr	r0, [pc, #376]	; (800153c <_printf_i+0x244>)
 80013c2:	230a      	movs	r3, #10
 80013c4:	e019      	b.n	80013fa <_printf_i+0x102>
 80013c6:	680e      	ldr	r6, [r1, #0]
 80013c8:	602b      	str	r3, [r5, #0]
 80013ca:	f010 0f40 	tst.w	r0, #64	; 0x40
 80013ce:	bf18      	it	ne
 80013d0:	b236      	sxthne	r6, r6
 80013d2:	e7ef      	b.n	80013b4 <_printf_i+0xbc>
 80013d4:	682b      	ldr	r3, [r5, #0]
 80013d6:	6820      	ldr	r0, [r4, #0]
 80013d8:	1d19      	adds	r1, r3, #4
 80013da:	6029      	str	r1, [r5, #0]
 80013dc:	0601      	lsls	r1, r0, #24
 80013de:	d501      	bpl.n	80013e4 <_printf_i+0xec>
 80013e0:	681e      	ldr	r6, [r3, #0]
 80013e2:	e002      	b.n	80013ea <_printf_i+0xf2>
 80013e4:	0646      	lsls	r6, r0, #25
 80013e6:	d5fb      	bpl.n	80013e0 <_printf_i+0xe8>
 80013e8:	881e      	ldrh	r6, [r3, #0]
 80013ea:	4854      	ldr	r0, [pc, #336]	; (800153c <_printf_i+0x244>)
 80013ec:	2f6f      	cmp	r7, #111	; 0x6f
 80013ee:	bf0c      	ite	eq
 80013f0:	2308      	moveq	r3, #8
 80013f2:	230a      	movne	r3, #10
 80013f4:	2100      	movs	r1, #0
 80013f6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80013fa:	6865      	ldr	r5, [r4, #4]
 80013fc:	60a5      	str	r5, [r4, #8]
 80013fe:	2d00      	cmp	r5, #0
 8001400:	bfa2      	ittt	ge
 8001402:	6821      	ldrge	r1, [r4, #0]
 8001404:	f021 0104 	bicge.w	r1, r1, #4
 8001408:	6021      	strge	r1, [r4, #0]
 800140a:	b90e      	cbnz	r6, 8001410 <_printf_i+0x118>
 800140c:	2d00      	cmp	r5, #0
 800140e:	d04d      	beq.n	80014ac <_printf_i+0x1b4>
 8001410:	4615      	mov	r5, r2
 8001412:	fbb6 f1f3 	udiv	r1, r6, r3
 8001416:	fb03 6711 	mls	r7, r3, r1, r6
 800141a:	5dc7      	ldrb	r7, [r0, r7]
 800141c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001420:	4637      	mov	r7, r6
 8001422:	42bb      	cmp	r3, r7
 8001424:	460e      	mov	r6, r1
 8001426:	d9f4      	bls.n	8001412 <_printf_i+0x11a>
 8001428:	2b08      	cmp	r3, #8
 800142a:	d10b      	bne.n	8001444 <_printf_i+0x14c>
 800142c:	6823      	ldr	r3, [r4, #0]
 800142e:	07de      	lsls	r6, r3, #31
 8001430:	d508      	bpl.n	8001444 <_printf_i+0x14c>
 8001432:	6923      	ldr	r3, [r4, #16]
 8001434:	6861      	ldr	r1, [r4, #4]
 8001436:	4299      	cmp	r1, r3
 8001438:	bfde      	ittt	le
 800143a:	2330      	movle	r3, #48	; 0x30
 800143c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001440:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001444:	1b52      	subs	r2, r2, r5
 8001446:	6122      	str	r2, [r4, #16]
 8001448:	f8cd a000 	str.w	sl, [sp]
 800144c:	464b      	mov	r3, r9
 800144e:	aa03      	add	r2, sp, #12
 8001450:	4621      	mov	r1, r4
 8001452:	4640      	mov	r0, r8
 8001454:	f7ff fee2 	bl	800121c <_printf_common>
 8001458:	3001      	adds	r0, #1
 800145a:	d14c      	bne.n	80014f6 <_printf_i+0x1fe>
 800145c:	f04f 30ff 	mov.w	r0, #4294967295
 8001460:	b004      	add	sp, #16
 8001462:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001466:	4835      	ldr	r0, [pc, #212]	; (800153c <_printf_i+0x244>)
 8001468:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800146c:	6829      	ldr	r1, [r5, #0]
 800146e:	6823      	ldr	r3, [r4, #0]
 8001470:	f851 6b04 	ldr.w	r6, [r1], #4
 8001474:	6029      	str	r1, [r5, #0]
 8001476:	061d      	lsls	r5, r3, #24
 8001478:	d514      	bpl.n	80014a4 <_printf_i+0x1ac>
 800147a:	07df      	lsls	r7, r3, #31
 800147c:	bf44      	itt	mi
 800147e:	f043 0320 	orrmi.w	r3, r3, #32
 8001482:	6023      	strmi	r3, [r4, #0]
 8001484:	b91e      	cbnz	r6, 800148e <_printf_i+0x196>
 8001486:	6823      	ldr	r3, [r4, #0]
 8001488:	f023 0320 	bic.w	r3, r3, #32
 800148c:	6023      	str	r3, [r4, #0]
 800148e:	2310      	movs	r3, #16
 8001490:	e7b0      	b.n	80013f4 <_printf_i+0xfc>
 8001492:	6823      	ldr	r3, [r4, #0]
 8001494:	f043 0320 	orr.w	r3, r3, #32
 8001498:	6023      	str	r3, [r4, #0]
 800149a:	2378      	movs	r3, #120	; 0x78
 800149c:	4828      	ldr	r0, [pc, #160]	; (8001540 <_printf_i+0x248>)
 800149e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80014a2:	e7e3      	b.n	800146c <_printf_i+0x174>
 80014a4:	0659      	lsls	r1, r3, #25
 80014a6:	bf48      	it	mi
 80014a8:	b2b6      	uxthmi	r6, r6
 80014aa:	e7e6      	b.n	800147a <_printf_i+0x182>
 80014ac:	4615      	mov	r5, r2
 80014ae:	e7bb      	b.n	8001428 <_printf_i+0x130>
 80014b0:	682b      	ldr	r3, [r5, #0]
 80014b2:	6826      	ldr	r6, [r4, #0]
 80014b4:	6961      	ldr	r1, [r4, #20]
 80014b6:	1d18      	adds	r0, r3, #4
 80014b8:	6028      	str	r0, [r5, #0]
 80014ba:	0635      	lsls	r5, r6, #24
 80014bc:	681b      	ldr	r3, [r3, #0]
 80014be:	d501      	bpl.n	80014c4 <_printf_i+0x1cc>
 80014c0:	6019      	str	r1, [r3, #0]
 80014c2:	e002      	b.n	80014ca <_printf_i+0x1d2>
 80014c4:	0670      	lsls	r0, r6, #25
 80014c6:	d5fb      	bpl.n	80014c0 <_printf_i+0x1c8>
 80014c8:	8019      	strh	r1, [r3, #0]
 80014ca:	2300      	movs	r3, #0
 80014cc:	6123      	str	r3, [r4, #16]
 80014ce:	4615      	mov	r5, r2
 80014d0:	e7ba      	b.n	8001448 <_printf_i+0x150>
 80014d2:	682b      	ldr	r3, [r5, #0]
 80014d4:	1d1a      	adds	r2, r3, #4
 80014d6:	602a      	str	r2, [r5, #0]
 80014d8:	681d      	ldr	r5, [r3, #0]
 80014da:	6862      	ldr	r2, [r4, #4]
 80014dc:	2100      	movs	r1, #0
 80014de:	4628      	mov	r0, r5
 80014e0:	f7fe fe7e 	bl	80001e0 <memchr>
 80014e4:	b108      	cbz	r0, 80014ea <_printf_i+0x1f2>
 80014e6:	1b40      	subs	r0, r0, r5
 80014e8:	6060      	str	r0, [r4, #4]
 80014ea:	6863      	ldr	r3, [r4, #4]
 80014ec:	6123      	str	r3, [r4, #16]
 80014ee:	2300      	movs	r3, #0
 80014f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80014f4:	e7a8      	b.n	8001448 <_printf_i+0x150>
 80014f6:	6923      	ldr	r3, [r4, #16]
 80014f8:	462a      	mov	r2, r5
 80014fa:	4649      	mov	r1, r9
 80014fc:	4640      	mov	r0, r8
 80014fe:	47d0      	blx	sl
 8001500:	3001      	adds	r0, #1
 8001502:	d0ab      	beq.n	800145c <_printf_i+0x164>
 8001504:	6823      	ldr	r3, [r4, #0]
 8001506:	079b      	lsls	r3, r3, #30
 8001508:	d413      	bmi.n	8001532 <_printf_i+0x23a>
 800150a:	68e0      	ldr	r0, [r4, #12]
 800150c:	9b03      	ldr	r3, [sp, #12]
 800150e:	4298      	cmp	r0, r3
 8001510:	bfb8      	it	lt
 8001512:	4618      	movlt	r0, r3
 8001514:	e7a4      	b.n	8001460 <_printf_i+0x168>
 8001516:	2301      	movs	r3, #1
 8001518:	4632      	mov	r2, r6
 800151a:	4649      	mov	r1, r9
 800151c:	4640      	mov	r0, r8
 800151e:	47d0      	blx	sl
 8001520:	3001      	adds	r0, #1
 8001522:	d09b      	beq.n	800145c <_printf_i+0x164>
 8001524:	3501      	adds	r5, #1
 8001526:	68e3      	ldr	r3, [r4, #12]
 8001528:	9903      	ldr	r1, [sp, #12]
 800152a:	1a5b      	subs	r3, r3, r1
 800152c:	42ab      	cmp	r3, r5
 800152e:	dcf2      	bgt.n	8001516 <_printf_i+0x21e>
 8001530:	e7eb      	b.n	800150a <_printf_i+0x212>
 8001532:	2500      	movs	r5, #0
 8001534:	f104 0619 	add.w	r6, r4, #25
 8001538:	e7f5      	b.n	8001526 <_printf_i+0x22e>
 800153a:	bf00      	nop
 800153c:	08001695 	.word	0x08001695
 8001540:	080016a6 	.word	0x080016a6

08001544 <_read_r>:
 8001544:	b538      	push	{r3, r4, r5, lr}
 8001546:	4d07      	ldr	r5, [pc, #28]	; (8001564 <_read_r+0x20>)
 8001548:	4604      	mov	r4, r0
 800154a:	4608      	mov	r0, r1
 800154c:	4611      	mov	r1, r2
 800154e:	2200      	movs	r2, #0
 8001550:	602a      	str	r2, [r5, #0]
 8001552:	461a      	mov	r2, r3
 8001554:	f7fe ff12 	bl	800037c <_read>
 8001558:	1c43      	adds	r3, r0, #1
 800155a:	d102      	bne.n	8001562 <_read_r+0x1e>
 800155c:	682b      	ldr	r3, [r5, #0]
 800155e:	b103      	cbz	r3, 8001562 <_read_r+0x1e>
 8001560:	6023      	str	r3, [r4, #0]
 8001562:	bd38      	pop	{r3, r4, r5, pc}
 8001564:	20000090 	.word	0x20000090

08001568 <_fstat_r>:
 8001568:	b538      	push	{r3, r4, r5, lr}
 800156a:	4d07      	ldr	r5, [pc, #28]	; (8001588 <_fstat_r+0x20>)
 800156c:	2300      	movs	r3, #0
 800156e:	4604      	mov	r4, r0
 8001570:	4608      	mov	r0, r1
 8001572:	4611      	mov	r1, r2
 8001574:	602b      	str	r3, [r5, #0]
 8001576:	f7fe ff46 	bl	8000406 <_fstat>
 800157a:	1c43      	adds	r3, r0, #1
 800157c:	d102      	bne.n	8001584 <_fstat_r+0x1c>
 800157e:	682b      	ldr	r3, [r5, #0]
 8001580:	b103      	cbz	r3, 8001584 <_fstat_r+0x1c>
 8001582:	6023      	str	r3, [r4, #0]
 8001584:	bd38      	pop	{r3, r4, r5, pc}
 8001586:	bf00      	nop
 8001588:	20000090 	.word	0x20000090

0800158c <_isatty_r>:
 800158c:	b538      	push	{r3, r4, r5, lr}
 800158e:	4d06      	ldr	r5, [pc, #24]	; (80015a8 <_isatty_r+0x1c>)
 8001590:	2300      	movs	r3, #0
 8001592:	4604      	mov	r4, r0
 8001594:	4608      	mov	r0, r1
 8001596:	602b      	str	r3, [r5, #0]
 8001598:	f7fe ff45 	bl	8000426 <_isatty>
 800159c:	1c43      	adds	r3, r0, #1
 800159e:	d102      	bne.n	80015a6 <_isatty_r+0x1a>
 80015a0:	682b      	ldr	r3, [r5, #0]
 80015a2:	b103      	cbz	r3, 80015a6 <_isatty_r+0x1a>
 80015a4:	6023      	str	r3, [r4, #0]
 80015a6:	bd38      	pop	{r3, r4, r5, pc}
 80015a8:	20000090 	.word	0x20000090

080015ac <_init>:
 80015ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ae:	bf00      	nop
 80015b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015b2:	bc08      	pop	{r3}
 80015b4:	469e      	mov	lr, r3
 80015b6:	4770      	bx	lr

080015b8 <_fini>:
 80015b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ba:	bf00      	nop
 80015bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015be:	bc08      	pop	{r3}
 80015c0:	469e      	mov	lr, r3
 80015c2:	4770      	bx	lr
