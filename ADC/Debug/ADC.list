
ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001490  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c4  08001630  08001630  00011630  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016f4  080016f4  00020080  2**0
                  CONTENTS
  4 .ARM          00000000  080016f4  080016f4  00020080  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016f4  080016f4  00020080  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016f4  080016f4  000116f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016f8  080016f8  000116f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000080  20000000  080016fc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000080  0800177c  00020080  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000b4  0800177c  000200b4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020080  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000119e  00000000  00000000  000200b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000451  00000000  00000000  0002124e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000128  00000000  00000000  000216a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f0  00000000  00000000  000217c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bf2  00000000  00000000  000218b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000138a  00000000  00000000  000244aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000096a7  00000000  00000000  00025834  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002eedb  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000be0  00000000  00000000  0002ef2c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000080 	.word	0x20000080
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001618 	.word	0x08001618

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000084 	.word	0x20000084
 80001dc:	08001618 	.word	0x08001618

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <ADC_Init>:

//Initialization
void ADC_Init();
void delay();

void ADC_Init(){
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	*pAPB1ENR |= 1; //enable the clock access for GPIOA
 8000284:	4b17      	ldr	r3, [pc, #92]	; (80002e4 <ADC_Init+0x64>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681a      	ldr	r2, [r3, #0]
 800028a:	4b16      	ldr	r3, [pc, #88]	; (80002e4 <ADC_Init+0x64>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f042 0201 	orr.w	r2, r2, #1
 8000292:	601a      	str	r2, [r3, #0]
	*pAPB2ENR |= 0X100; //enable the clock access for ADC1
 8000294:	4b14      	ldr	r3, [pc, #80]	; (80002e8 <ADC_Init+0x68>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	681a      	ldr	r2, [r3, #0]
 800029a:	4b13      	ldr	r3, [pc, #76]	; (80002e8 <ADC_Init+0x68>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80002a2:	601a      	str	r2, [r3, #0]
	*pGPIOMODER |= 0XC; //configure GPIO for Analog Pin
 80002a4:	4b11      	ldr	r3, [pc, #68]	; (80002ec <ADC_Init+0x6c>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	681a      	ldr	r2, [r3, #0]
 80002aa:	4b10      	ldr	r3, [pc, #64]	; (80002ec <ADC_Init+0x6c>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f042 020c 	orr.w	r2, r2, #12
 80002b2:	601a      	str	r2, [r3, #0]

	*pADC_CR2 |= 0; //to disable the ADC
 80002b4:	4b0e      	ldr	r3, [pc, #56]	; (80002f0 <ADC_Init+0x70>)
 80002b6:	681a      	ldr	r2, [r3, #0]
 80002b8:	4b0d      	ldr	r3, [pc, #52]	; (80002f0 <ADC_Init+0x70>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	6812      	ldr	r2, [r2, #0]
 80002be:	601a      	str	r2, [r3, #0]
	*pADC_SQR3 = 1; //to set the sequence
 80002c0:	4b0c      	ldr	r3, [pc, #48]	; (80002f4 <ADC_Init+0x74>)
 80002c2:	681b      	ldr	r3, [r3, #0]
 80002c4:	2201      	movs	r2, #1
 80002c6:	601a      	str	r2, [r3, #0]
	*pADC_CR2 |= 1; //to enable the ADC
 80002c8:	4b09      	ldr	r3, [pc, #36]	; (80002f0 <ADC_Init+0x70>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	681a      	ldr	r2, [r3, #0]
 80002ce:	4b08      	ldr	r3, [pc, #32]	; (80002f0 <ADC_Init+0x70>)
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	f042 0201 	orr.w	r2, r2, #1
 80002d6:	601a      	str	r2, [r3, #0]
}
 80002d8:	bf00      	nop
 80002da:	46bd      	mov	sp, r7
 80002dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e0:	4770      	bx	lr
 80002e2:	bf00      	nop
 80002e4:	20000000 	.word	0x20000000
 80002e8:	20000004 	.word	0x20000004
 80002ec:	20000008 	.word	0x20000008
 80002f0:	20000010 	.word	0x20000010
 80002f4:	20000014 	.word	0x20000014

080002f8 <delay>:

void delay(){
 80002f8:	b480      	push	{r7}
 80002fa:	b083      	sub	sp, #12
 80002fc:	af00      	add	r7, sp, #0
	for(uint32_t i=0;i<300000;i++);
 80002fe:	2300      	movs	r3, #0
 8000300:	607b      	str	r3, [r7, #4]
 8000302:	e002      	b.n	800030a <delay+0x12>
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	3301      	adds	r3, #1
 8000308:	607b      	str	r3, [r7, #4]
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a04      	ldr	r2, [pc, #16]	; (8000320 <delay+0x28>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d9f8      	bls.n	8000304 <delay+0xc>
}
 8000312:	bf00      	nop
 8000314:	bf00      	nop
 8000316:	370c      	adds	r7, #12
 8000318:	46bd      	mov	sp, r7
 800031a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031e:	4770      	bx	lr
 8000320:	000493df 	.word	0x000493df

08000324 <main>:

int main(void)
{
 8000324:	b580      	push	{r7, lr}
 8000326:	af00      	add	r7, sp, #0
    printf("Display ADC value \n");
 8000328:	4814      	ldr	r0, [pc, #80]	; (800037c <main+0x58>)
 800032a:	f000 fc91 	bl	8000c50 <puts>
    ADC_Init();
 800032e:	f7ff ffa7 	bl	8000280 <ADC_Init>

    while(1){
    	//start the ADC Conservation
    	*pADC_CR2 |= 0x40000000; // Start ADC Conversion
 8000332:	4b13      	ldr	r3, [pc, #76]	; (8000380 <main+0x5c>)
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	681a      	ldr	r2, [r3, #0]
 8000338:	4b11      	ldr	r3, [pc, #68]	; (8000380 <main+0x5c>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8000340:	601a      	str	r2, [r3, #0]

    	while(!(*pADC_SR & 2)){} //Wait Till End of the Conversion
 8000342:	bf00      	nop
 8000344:	4b0f      	ldr	r3, [pc, #60]	; (8000384 <main+0x60>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	f003 0302 	and.w	r3, r3, #2
 800034e:	2b00      	cmp	r3, #0
 8000350:	d0f8      	beq.n	8000344 <main+0x20>
    	analogValue = *pADC_DR;
 8000352:	4b0d      	ldr	r3, [pc, #52]	; (8000388 <main+0x64>)
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	b29a      	uxth	r2, r3
 800035a:	4b0c      	ldr	r3, [pc, #48]	; (800038c <main+0x68>)
 800035c:	801a      	strh	r2, [r3, #0]
    	printf("Display ADC Value %d \n", analogValue);
 800035e:	4b0b      	ldr	r3, [pc, #44]	; (800038c <main+0x68>)
 8000360:	881b      	ldrh	r3, [r3, #0]
 8000362:	4619      	mov	r1, r3
 8000364:	480a      	ldr	r0, [pc, #40]	; (8000390 <main+0x6c>)
 8000366:	f000 fbed 	bl	8000b44 <iprintf>
    	fflush(stdout);
 800036a:	4b0a      	ldr	r3, [pc, #40]	; (8000394 <main+0x70>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	689b      	ldr	r3, [r3, #8]
 8000370:	4618      	mov	r0, r3
 8000372:	f000 f9cf 	bl	8000714 <fflush>
    	delay();
 8000376:	f7ff ffbf 	bl	80002f8 <delay>
    	*pADC_CR2 |= 0x40000000; // Start ADC Conversion
 800037a:	e7da      	b.n	8000332 <main+0xe>
 800037c:	08001630 	.word	0x08001630
 8000380:	20000010 	.word	0x20000010
 8000384:	2000000c 	.word	0x2000000c
 8000388:	20000018 	.word	0x20000018
 800038c:	2000009c 	.word	0x2000009c
 8000390:	08001644 	.word	0x08001644
 8000394:	2000001c 	.word	0x2000001c

08000398 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0 *((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000398:	b480      	push	{r7}
 800039a:	b083      	sub	sp, #12
 800039c:	af00      	add	r7, sp, #0
 800039e:	4603      	mov	r3, r0
 80003a0:	71fb      	strb	r3, [r7, #7]
//Enable TRCENA
DEMCR |= ( 1 << 24);
 80003a2:	4b0f      	ldr	r3, [pc, #60]	; (80003e0 <ITM_SendChar+0x48>)
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	4a0e      	ldr	r2, [pc, #56]	; (80003e0 <ITM_SendChar+0x48>)
 80003a8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003ac:	6013      	str	r3, [r2, #0]
//enable stimulus port 0
ITM_TRACE_EN |= ( 1 << 0);
 80003ae:	4b0d      	ldr	r3, [pc, #52]	; (80003e4 <ITM_SendChar+0x4c>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	4a0c      	ldr	r2, [pc, #48]	; (80003e4 <ITM_SendChar+0x4c>)
 80003b4:	f043 0301 	orr.w	r3, r3, #1
 80003b8:	6013      	str	r3, [r2, #0]
// read FIFO status in bit [0]:
while(!(ITM_STIMULUS_PORT0 & 1));
 80003ba:	bf00      	nop
 80003bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	f003 0301 	and.w	r3, r3, #1
 80003c6:	2b00      	cmp	r3, #0
 80003c8:	d0f8      	beq.n	80003bc <ITM_SendChar+0x24>
//Write to ITM stimulus port0
ITM_STIMULUS_PORT0 = ch;
 80003ca:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003ce:	79fb      	ldrb	r3, [r7, #7]
 80003d0:	6013      	str	r3, [r2, #0]
}
 80003d2:	bf00      	nop
 80003d4:	370c      	adds	r7, #12
 80003d6:	46bd      	mov	sp, r7
 80003d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003dc:	4770      	bx	lr
 80003de:	bf00      	nop
 80003e0:	e000edfc 	.word	0xe000edfc
 80003e4:	e0000e00 	.word	0xe0000e00

080003e8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003e8:	b580      	push	{r7, lr}
 80003ea:	b086      	sub	sp, #24
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	60f8      	str	r0, [r7, #12]
 80003f0:	60b9      	str	r1, [r7, #8]
 80003f2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f4:	2300      	movs	r3, #0
 80003f6:	617b      	str	r3, [r7, #20]
 80003f8:	e00a      	b.n	8000410 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003fa:	f3af 8000 	nop.w
 80003fe:	4601      	mov	r1, r0
 8000400:	68bb      	ldr	r3, [r7, #8]
 8000402:	1c5a      	adds	r2, r3, #1
 8000404:	60ba      	str	r2, [r7, #8]
 8000406:	b2ca      	uxtb	r2, r1
 8000408:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800040a:	697b      	ldr	r3, [r7, #20]
 800040c:	3301      	adds	r3, #1
 800040e:	617b      	str	r3, [r7, #20]
 8000410:	697a      	ldr	r2, [r7, #20]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	429a      	cmp	r2, r3
 8000416:	dbf0      	blt.n	80003fa <_read+0x12>
  }

  return len;
 8000418:	687b      	ldr	r3, [r7, #4]
}
 800041a:	4618      	mov	r0, r3
 800041c:	3718      	adds	r7, #24
 800041e:	46bd      	mov	sp, r7
 8000420:	bd80      	pop	{r7, pc}

08000422 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000422:	b580      	push	{r7, lr}
 8000424:	b086      	sub	sp, #24
 8000426:	af00      	add	r7, sp, #0
 8000428:	60f8      	str	r0, [r7, #12]
 800042a:	60b9      	str	r1, [r7, #8]
 800042c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800042e:	2300      	movs	r3, #0
 8000430:	617b      	str	r3, [r7, #20]
 8000432:	e009      	b.n	8000448 <_write+0x26>
  {
//    __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000434:	68bb      	ldr	r3, [r7, #8]
 8000436:	1c5a      	adds	r2, r3, #1
 8000438:	60ba      	str	r2, [r7, #8]
 800043a:	781b      	ldrb	r3, [r3, #0]
 800043c:	4618      	mov	r0, r3
 800043e:	f7ff ffab 	bl	8000398 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000442:	697b      	ldr	r3, [r7, #20]
 8000444:	3301      	adds	r3, #1
 8000446:	617b      	str	r3, [r7, #20]
 8000448:	697a      	ldr	r2, [r7, #20]
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	429a      	cmp	r2, r3
 800044e:	dbf1      	blt.n	8000434 <_write+0x12>
  }
  return len;
 8000450:	687b      	ldr	r3, [r7, #4]
}
 8000452:	4618      	mov	r0, r3
 8000454:	3718      	adds	r7, #24
 8000456:	46bd      	mov	sp, r7
 8000458:	bd80      	pop	{r7, pc}

0800045a <_close>:

int _close(int file)
{
 800045a:	b480      	push	{r7}
 800045c:	b083      	sub	sp, #12
 800045e:	af00      	add	r7, sp, #0
 8000460:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000462:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000466:	4618      	mov	r0, r3
 8000468:	370c      	adds	r7, #12
 800046a:	46bd      	mov	sp, r7
 800046c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000470:	4770      	bx	lr

08000472 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000472:	b480      	push	{r7}
 8000474:	b083      	sub	sp, #12
 8000476:	af00      	add	r7, sp, #0
 8000478:	6078      	str	r0, [r7, #4]
 800047a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800047c:	683b      	ldr	r3, [r7, #0]
 800047e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000482:	605a      	str	r2, [r3, #4]
  return 0;
 8000484:	2300      	movs	r3, #0
}
 8000486:	4618      	mov	r0, r3
 8000488:	370c      	adds	r7, #12
 800048a:	46bd      	mov	sp, r7
 800048c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000490:	4770      	bx	lr

08000492 <_isatty>:

int _isatty(int file)
{
 8000492:	b480      	push	{r7}
 8000494:	b083      	sub	sp, #12
 8000496:	af00      	add	r7, sp, #0
 8000498:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800049a:	2301      	movs	r3, #1
}
 800049c:	4618      	mov	r0, r3
 800049e:	370c      	adds	r7, #12
 80004a0:	46bd      	mov	sp, r7
 80004a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a6:	4770      	bx	lr

080004a8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004a8:	b480      	push	{r7}
 80004aa:	b085      	sub	sp, #20
 80004ac:	af00      	add	r7, sp, #0
 80004ae:	60f8      	str	r0, [r7, #12]
 80004b0:	60b9      	str	r1, [r7, #8]
 80004b2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004b4:	2300      	movs	r3, #0
}
 80004b6:	4618      	mov	r0, r3
 80004b8:	3714      	adds	r7, #20
 80004ba:	46bd      	mov	sp, r7
 80004bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c0:	4770      	bx	lr
	...

080004c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	b086      	sub	sp, #24
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004cc:	4a14      	ldr	r2, [pc, #80]	; (8000520 <_sbrk+0x5c>)
 80004ce:	4b15      	ldr	r3, [pc, #84]	; (8000524 <_sbrk+0x60>)
 80004d0:	1ad3      	subs	r3, r2, r3
 80004d2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004d4:	697b      	ldr	r3, [r7, #20]
 80004d6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004d8:	4b13      	ldr	r3, [pc, #76]	; (8000528 <_sbrk+0x64>)
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	2b00      	cmp	r3, #0
 80004de:	d102      	bne.n	80004e6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004e0:	4b11      	ldr	r3, [pc, #68]	; (8000528 <_sbrk+0x64>)
 80004e2:	4a12      	ldr	r2, [pc, #72]	; (800052c <_sbrk+0x68>)
 80004e4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004e6:	4b10      	ldr	r3, [pc, #64]	; (8000528 <_sbrk+0x64>)
 80004e8:	681a      	ldr	r2, [r3, #0]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4413      	add	r3, r2
 80004ee:	693a      	ldr	r2, [r7, #16]
 80004f0:	429a      	cmp	r2, r3
 80004f2:	d207      	bcs.n	8000504 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004f4:	f000 f846 	bl	8000584 <__errno>
 80004f8:	4603      	mov	r3, r0
 80004fa:	220c      	movs	r2, #12
 80004fc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004fe:	f04f 33ff 	mov.w	r3, #4294967295
 8000502:	e009      	b.n	8000518 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000504:	4b08      	ldr	r3, [pc, #32]	; (8000528 <_sbrk+0x64>)
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800050a:	4b07      	ldr	r3, [pc, #28]	; (8000528 <_sbrk+0x64>)
 800050c:	681a      	ldr	r2, [r3, #0]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	4413      	add	r3, r2
 8000512:	4a05      	ldr	r2, [pc, #20]	; (8000528 <_sbrk+0x64>)
 8000514:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000516:	68fb      	ldr	r3, [r7, #12]
}
 8000518:	4618      	mov	r0, r3
 800051a:	3718      	adds	r7, #24
 800051c:	46bd      	mov	sp, r7
 800051e:	bd80      	pop	{r7, pc}
 8000520:	20018000 	.word	0x20018000
 8000524:	00000400 	.word	0x00000400
 8000528:	200000a0 	.word	0x200000a0
 800052c:	200000b8 	.word	0x200000b8

08000530 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000530:	480d      	ldr	r0, [pc, #52]	; (8000568 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000532:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000534:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000538:	480c      	ldr	r0, [pc, #48]	; (800056c <LoopForever+0x6>)
  ldr r1, =_edata
 800053a:	490d      	ldr	r1, [pc, #52]	; (8000570 <LoopForever+0xa>)
  ldr r2, =_sidata
 800053c:	4a0d      	ldr	r2, [pc, #52]	; (8000574 <LoopForever+0xe>)
  movs r3, #0
 800053e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000540:	e002      	b.n	8000548 <LoopCopyDataInit>

08000542 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000542:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000544:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000546:	3304      	adds	r3, #4

08000548 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000548:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800054a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800054c:	d3f9      	bcc.n	8000542 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800054e:	4a0a      	ldr	r2, [pc, #40]	; (8000578 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000550:	4c0a      	ldr	r4, [pc, #40]	; (800057c <LoopForever+0x16>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000554:	e001      	b.n	800055a <LoopFillZerobss>

08000556 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000556:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000558:	3204      	adds	r2, #4

0800055a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800055a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800055c:	d3fb      	bcc.n	8000556 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800055e:	f000 f9e1 	bl	8000924 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000562:	f7ff fedf 	bl	8000324 <main>

08000566 <LoopForever>:

LoopForever:
  b LoopForever
 8000566:	e7fe      	b.n	8000566 <LoopForever>
  ldr   r0, =_estack
 8000568:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800056c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000570:	20000080 	.word	0x20000080
  ldr r2, =_sidata
 8000574:	080016fc 	.word	0x080016fc
  ldr r2, =_sbss
 8000578:	20000080 	.word	0x20000080
  ldr r4, =_ebss
 800057c:	200000b4 	.word	0x200000b4

08000580 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000580:	e7fe      	b.n	8000580 <ADC_IRQHandler>
	...

08000584 <__errno>:
 8000584:	4b01      	ldr	r3, [pc, #4]	; (800058c <__errno+0x8>)
 8000586:	6818      	ldr	r0, [r3, #0]
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop
 800058c:	2000001c 	.word	0x2000001c

08000590 <__sflush_r>:
 8000590:	898a      	ldrh	r2, [r1, #12]
 8000592:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000596:	4605      	mov	r5, r0
 8000598:	0710      	lsls	r0, r2, #28
 800059a:	460c      	mov	r4, r1
 800059c:	d458      	bmi.n	8000650 <__sflush_r+0xc0>
 800059e:	684b      	ldr	r3, [r1, #4]
 80005a0:	2b00      	cmp	r3, #0
 80005a2:	dc05      	bgt.n	80005b0 <__sflush_r+0x20>
 80005a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80005a6:	2b00      	cmp	r3, #0
 80005a8:	dc02      	bgt.n	80005b0 <__sflush_r+0x20>
 80005aa:	2000      	movs	r0, #0
 80005ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80005b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80005b2:	2e00      	cmp	r6, #0
 80005b4:	d0f9      	beq.n	80005aa <__sflush_r+0x1a>
 80005b6:	2300      	movs	r3, #0
 80005b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80005bc:	682f      	ldr	r7, [r5, #0]
 80005be:	602b      	str	r3, [r5, #0]
 80005c0:	d032      	beq.n	8000628 <__sflush_r+0x98>
 80005c2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80005c4:	89a3      	ldrh	r3, [r4, #12]
 80005c6:	075a      	lsls	r2, r3, #29
 80005c8:	d505      	bpl.n	80005d6 <__sflush_r+0x46>
 80005ca:	6863      	ldr	r3, [r4, #4]
 80005cc:	1ac0      	subs	r0, r0, r3
 80005ce:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80005d0:	b10b      	cbz	r3, 80005d6 <__sflush_r+0x46>
 80005d2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80005d4:	1ac0      	subs	r0, r0, r3
 80005d6:	2300      	movs	r3, #0
 80005d8:	4602      	mov	r2, r0
 80005da:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80005dc:	6a21      	ldr	r1, [r4, #32]
 80005de:	4628      	mov	r0, r5
 80005e0:	47b0      	blx	r6
 80005e2:	1c43      	adds	r3, r0, #1
 80005e4:	89a3      	ldrh	r3, [r4, #12]
 80005e6:	d106      	bne.n	80005f6 <__sflush_r+0x66>
 80005e8:	6829      	ldr	r1, [r5, #0]
 80005ea:	291d      	cmp	r1, #29
 80005ec:	d82c      	bhi.n	8000648 <__sflush_r+0xb8>
 80005ee:	4a2a      	ldr	r2, [pc, #168]	; (8000698 <__sflush_r+0x108>)
 80005f0:	40ca      	lsrs	r2, r1
 80005f2:	07d6      	lsls	r6, r2, #31
 80005f4:	d528      	bpl.n	8000648 <__sflush_r+0xb8>
 80005f6:	2200      	movs	r2, #0
 80005f8:	6062      	str	r2, [r4, #4]
 80005fa:	04d9      	lsls	r1, r3, #19
 80005fc:	6922      	ldr	r2, [r4, #16]
 80005fe:	6022      	str	r2, [r4, #0]
 8000600:	d504      	bpl.n	800060c <__sflush_r+0x7c>
 8000602:	1c42      	adds	r2, r0, #1
 8000604:	d101      	bne.n	800060a <__sflush_r+0x7a>
 8000606:	682b      	ldr	r3, [r5, #0]
 8000608:	b903      	cbnz	r3, 800060c <__sflush_r+0x7c>
 800060a:	6560      	str	r0, [r4, #84]	; 0x54
 800060c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800060e:	602f      	str	r7, [r5, #0]
 8000610:	2900      	cmp	r1, #0
 8000612:	d0ca      	beq.n	80005aa <__sflush_r+0x1a>
 8000614:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000618:	4299      	cmp	r1, r3
 800061a:	d002      	beq.n	8000622 <__sflush_r+0x92>
 800061c:	4628      	mov	r0, r5
 800061e:	f000 f9b1 	bl	8000984 <_free_r>
 8000622:	2000      	movs	r0, #0
 8000624:	6360      	str	r0, [r4, #52]	; 0x34
 8000626:	e7c1      	b.n	80005ac <__sflush_r+0x1c>
 8000628:	6a21      	ldr	r1, [r4, #32]
 800062a:	2301      	movs	r3, #1
 800062c:	4628      	mov	r0, r5
 800062e:	47b0      	blx	r6
 8000630:	1c41      	adds	r1, r0, #1
 8000632:	d1c7      	bne.n	80005c4 <__sflush_r+0x34>
 8000634:	682b      	ldr	r3, [r5, #0]
 8000636:	2b00      	cmp	r3, #0
 8000638:	d0c4      	beq.n	80005c4 <__sflush_r+0x34>
 800063a:	2b1d      	cmp	r3, #29
 800063c:	d001      	beq.n	8000642 <__sflush_r+0xb2>
 800063e:	2b16      	cmp	r3, #22
 8000640:	d101      	bne.n	8000646 <__sflush_r+0xb6>
 8000642:	602f      	str	r7, [r5, #0]
 8000644:	e7b1      	b.n	80005aa <__sflush_r+0x1a>
 8000646:	89a3      	ldrh	r3, [r4, #12]
 8000648:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800064c:	81a3      	strh	r3, [r4, #12]
 800064e:	e7ad      	b.n	80005ac <__sflush_r+0x1c>
 8000650:	690f      	ldr	r7, [r1, #16]
 8000652:	2f00      	cmp	r7, #0
 8000654:	d0a9      	beq.n	80005aa <__sflush_r+0x1a>
 8000656:	0793      	lsls	r3, r2, #30
 8000658:	680e      	ldr	r6, [r1, #0]
 800065a:	bf08      	it	eq
 800065c:	694b      	ldreq	r3, [r1, #20]
 800065e:	600f      	str	r7, [r1, #0]
 8000660:	bf18      	it	ne
 8000662:	2300      	movne	r3, #0
 8000664:	eba6 0807 	sub.w	r8, r6, r7
 8000668:	608b      	str	r3, [r1, #8]
 800066a:	f1b8 0f00 	cmp.w	r8, #0
 800066e:	dd9c      	ble.n	80005aa <__sflush_r+0x1a>
 8000670:	6a21      	ldr	r1, [r4, #32]
 8000672:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000674:	4643      	mov	r3, r8
 8000676:	463a      	mov	r2, r7
 8000678:	4628      	mov	r0, r5
 800067a:	47b0      	blx	r6
 800067c:	2800      	cmp	r0, #0
 800067e:	dc06      	bgt.n	800068e <__sflush_r+0xfe>
 8000680:	89a3      	ldrh	r3, [r4, #12]
 8000682:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000686:	81a3      	strh	r3, [r4, #12]
 8000688:	f04f 30ff 	mov.w	r0, #4294967295
 800068c:	e78e      	b.n	80005ac <__sflush_r+0x1c>
 800068e:	4407      	add	r7, r0
 8000690:	eba8 0800 	sub.w	r8, r8, r0
 8000694:	e7e9      	b.n	800066a <__sflush_r+0xda>
 8000696:	bf00      	nop
 8000698:	20400001 	.word	0x20400001

0800069c <_fflush_r>:
 800069c:	b538      	push	{r3, r4, r5, lr}
 800069e:	690b      	ldr	r3, [r1, #16]
 80006a0:	4605      	mov	r5, r0
 80006a2:	460c      	mov	r4, r1
 80006a4:	b913      	cbnz	r3, 80006ac <_fflush_r+0x10>
 80006a6:	2500      	movs	r5, #0
 80006a8:	4628      	mov	r0, r5
 80006aa:	bd38      	pop	{r3, r4, r5, pc}
 80006ac:	b118      	cbz	r0, 80006b6 <_fflush_r+0x1a>
 80006ae:	6983      	ldr	r3, [r0, #24]
 80006b0:	b90b      	cbnz	r3, 80006b6 <_fflush_r+0x1a>
 80006b2:	f000 f899 	bl	80007e8 <__sinit>
 80006b6:	4b14      	ldr	r3, [pc, #80]	; (8000708 <_fflush_r+0x6c>)
 80006b8:	429c      	cmp	r4, r3
 80006ba:	d11b      	bne.n	80006f4 <_fflush_r+0x58>
 80006bc:	686c      	ldr	r4, [r5, #4]
 80006be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006c2:	2b00      	cmp	r3, #0
 80006c4:	d0ef      	beq.n	80006a6 <_fflush_r+0xa>
 80006c6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80006c8:	07d0      	lsls	r0, r2, #31
 80006ca:	d404      	bmi.n	80006d6 <_fflush_r+0x3a>
 80006cc:	0599      	lsls	r1, r3, #22
 80006ce:	d402      	bmi.n	80006d6 <_fflush_r+0x3a>
 80006d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006d2:	f000 f94c 	bl	800096e <__retarget_lock_acquire_recursive>
 80006d6:	4628      	mov	r0, r5
 80006d8:	4621      	mov	r1, r4
 80006da:	f7ff ff59 	bl	8000590 <__sflush_r>
 80006de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006e0:	07da      	lsls	r2, r3, #31
 80006e2:	4605      	mov	r5, r0
 80006e4:	d4e0      	bmi.n	80006a8 <_fflush_r+0xc>
 80006e6:	89a3      	ldrh	r3, [r4, #12]
 80006e8:	059b      	lsls	r3, r3, #22
 80006ea:	d4dd      	bmi.n	80006a8 <_fflush_r+0xc>
 80006ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006ee:	f000 f93f 	bl	8000970 <__retarget_lock_release_recursive>
 80006f2:	e7d9      	b.n	80006a8 <_fflush_r+0xc>
 80006f4:	4b05      	ldr	r3, [pc, #20]	; (800070c <_fflush_r+0x70>)
 80006f6:	429c      	cmp	r4, r3
 80006f8:	d101      	bne.n	80006fe <_fflush_r+0x62>
 80006fa:	68ac      	ldr	r4, [r5, #8]
 80006fc:	e7df      	b.n	80006be <_fflush_r+0x22>
 80006fe:	4b04      	ldr	r3, [pc, #16]	; (8000710 <_fflush_r+0x74>)
 8000700:	429c      	cmp	r4, r3
 8000702:	bf08      	it	eq
 8000704:	68ec      	ldreq	r4, [r5, #12]
 8000706:	e7da      	b.n	80006be <_fflush_r+0x22>
 8000708:	0800167c 	.word	0x0800167c
 800070c:	0800169c 	.word	0x0800169c
 8000710:	0800165c 	.word	0x0800165c

08000714 <fflush>:
 8000714:	4601      	mov	r1, r0
 8000716:	b920      	cbnz	r0, 8000722 <fflush+0xe>
 8000718:	4b04      	ldr	r3, [pc, #16]	; (800072c <fflush+0x18>)
 800071a:	4905      	ldr	r1, [pc, #20]	; (8000730 <fflush+0x1c>)
 800071c:	6818      	ldr	r0, [r3, #0]
 800071e:	f000 b8e1 	b.w	80008e4 <_fwalk_reent>
 8000722:	4b04      	ldr	r3, [pc, #16]	; (8000734 <fflush+0x20>)
 8000724:	6818      	ldr	r0, [r3, #0]
 8000726:	f7ff bfb9 	b.w	800069c <_fflush_r>
 800072a:	bf00      	nop
 800072c:	080016bc 	.word	0x080016bc
 8000730:	0800069d 	.word	0x0800069d
 8000734:	2000001c 	.word	0x2000001c

08000738 <std>:
 8000738:	2300      	movs	r3, #0
 800073a:	b510      	push	{r4, lr}
 800073c:	4604      	mov	r4, r0
 800073e:	e9c0 3300 	strd	r3, r3, [r0]
 8000742:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000746:	6083      	str	r3, [r0, #8]
 8000748:	8181      	strh	r1, [r0, #12]
 800074a:	6643      	str	r3, [r0, #100]	; 0x64
 800074c:	81c2      	strh	r2, [r0, #14]
 800074e:	6183      	str	r3, [r0, #24]
 8000750:	4619      	mov	r1, r3
 8000752:	2208      	movs	r2, #8
 8000754:	305c      	adds	r0, #92	; 0x5c
 8000756:	f000 f90c 	bl	8000972 <memset>
 800075a:	4b05      	ldr	r3, [pc, #20]	; (8000770 <std+0x38>)
 800075c:	6263      	str	r3, [r4, #36]	; 0x24
 800075e:	4b05      	ldr	r3, [pc, #20]	; (8000774 <std+0x3c>)
 8000760:	62a3      	str	r3, [r4, #40]	; 0x28
 8000762:	4b05      	ldr	r3, [pc, #20]	; (8000778 <std+0x40>)
 8000764:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000766:	4b05      	ldr	r3, [pc, #20]	; (800077c <std+0x44>)
 8000768:	6224      	str	r4, [r4, #32]
 800076a:	6323      	str	r3, [r4, #48]	; 0x30
 800076c:	bd10      	pop	{r4, pc}
 800076e:	bf00      	nop
 8000770:	08000c81 	.word	0x08000c81
 8000774:	08000ca3 	.word	0x08000ca3
 8000778:	08000cdb 	.word	0x08000cdb
 800077c:	08000cff 	.word	0x08000cff

08000780 <_cleanup_r>:
 8000780:	4901      	ldr	r1, [pc, #4]	; (8000788 <_cleanup_r+0x8>)
 8000782:	f000 b8af 	b.w	80008e4 <_fwalk_reent>
 8000786:	bf00      	nop
 8000788:	0800069d 	.word	0x0800069d

0800078c <__sfmoreglue>:
 800078c:	b570      	push	{r4, r5, r6, lr}
 800078e:	2268      	movs	r2, #104	; 0x68
 8000790:	1e4d      	subs	r5, r1, #1
 8000792:	4355      	muls	r5, r2
 8000794:	460e      	mov	r6, r1
 8000796:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800079a:	f000 f95f 	bl	8000a5c <_malloc_r>
 800079e:	4604      	mov	r4, r0
 80007a0:	b140      	cbz	r0, 80007b4 <__sfmoreglue+0x28>
 80007a2:	2100      	movs	r1, #0
 80007a4:	e9c0 1600 	strd	r1, r6, [r0]
 80007a8:	300c      	adds	r0, #12
 80007aa:	60a0      	str	r0, [r4, #8]
 80007ac:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80007b0:	f000 f8df 	bl	8000972 <memset>
 80007b4:	4620      	mov	r0, r4
 80007b6:	bd70      	pop	{r4, r5, r6, pc}

080007b8 <__sfp_lock_acquire>:
 80007b8:	4801      	ldr	r0, [pc, #4]	; (80007c0 <__sfp_lock_acquire+0x8>)
 80007ba:	f000 b8d8 	b.w	800096e <__retarget_lock_acquire_recursive>
 80007be:	bf00      	nop
 80007c0:	200000a5 	.word	0x200000a5

080007c4 <__sfp_lock_release>:
 80007c4:	4801      	ldr	r0, [pc, #4]	; (80007cc <__sfp_lock_release+0x8>)
 80007c6:	f000 b8d3 	b.w	8000970 <__retarget_lock_release_recursive>
 80007ca:	bf00      	nop
 80007cc:	200000a5 	.word	0x200000a5

080007d0 <__sinit_lock_acquire>:
 80007d0:	4801      	ldr	r0, [pc, #4]	; (80007d8 <__sinit_lock_acquire+0x8>)
 80007d2:	f000 b8cc 	b.w	800096e <__retarget_lock_acquire_recursive>
 80007d6:	bf00      	nop
 80007d8:	200000a6 	.word	0x200000a6

080007dc <__sinit_lock_release>:
 80007dc:	4801      	ldr	r0, [pc, #4]	; (80007e4 <__sinit_lock_release+0x8>)
 80007de:	f000 b8c7 	b.w	8000970 <__retarget_lock_release_recursive>
 80007e2:	bf00      	nop
 80007e4:	200000a6 	.word	0x200000a6

080007e8 <__sinit>:
 80007e8:	b510      	push	{r4, lr}
 80007ea:	4604      	mov	r4, r0
 80007ec:	f7ff fff0 	bl	80007d0 <__sinit_lock_acquire>
 80007f0:	69a3      	ldr	r3, [r4, #24]
 80007f2:	b11b      	cbz	r3, 80007fc <__sinit+0x14>
 80007f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007f8:	f7ff bff0 	b.w	80007dc <__sinit_lock_release>
 80007fc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000800:	6523      	str	r3, [r4, #80]	; 0x50
 8000802:	4b13      	ldr	r3, [pc, #76]	; (8000850 <__sinit+0x68>)
 8000804:	4a13      	ldr	r2, [pc, #76]	; (8000854 <__sinit+0x6c>)
 8000806:	681b      	ldr	r3, [r3, #0]
 8000808:	62a2      	str	r2, [r4, #40]	; 0x28
 800080a:	42a3      	cmp	r3, r4
 800080c:	bf04      	itt	eq
 800080e:	2301      	moveq	r3, #1
 8000810:	61a3      	streq	r3, [r4, #24]
 8000812:	4620      	mov	r0, r4
 8000814:	f000 f820 	bl	8000858 <__sfp>
 8000818:	6060      	str	r0, [r4, #4]
 800081a:	4620      	mov	r0, r4
 800081c:	f000 f81c 	bl	8000858 <__sfp>
 8000820:	60a0      	str	r0, [r4, #8]
 8000822:	4620      	mov	r0, r4
 8000824:	f000 f818 	bl	8000858 <__sfp>
 8000828:	2200      	movs	r2, #0
 800082a:	60e0      	str	r0, [r4, #12]
 800082c:	2104      	movs	r1, #4
 800082e:	6860      	ldr	r0, [r4, #4]
 8000830:	f7ff ff82 	bl	8000738 <std>
 8000834:	68a0      	ldr	r0, [r4, #8]
 8000836:	2201      	movs	r2, #1
 8000838:	2109      	movs	r1, #9
 800083a:	f7ff ff7d 	bl	8000738 <std>
 800083e:	68e0      	ldr	r0, [r4, #12]
 8000840:	2202      	movs	r2, #2
 8000842:	2112      	movs	r1, #18
 8000844:	f7ff ff78 	bl	8000738 <std>
 8000848:	2301      	movs	r3, #1
 800084a:	61a3      	str	r3, [r4, #24]
 800084c:	e7d2      	b.n	80007f4 <__sinit+0xc>
 800084e:	bf00      	nop
 8000850:	080016bc 	.word	0x080016bc
 8000854:	08000781 	.word	0x08000781

08000858 <__sfp>:
 8000858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800085a:	4607      	mov	r7, r0
 800085c:	f7ff ffac 	bl	80007b8 <__sfp_lock_acquire>
 8000860:	4b1e      	ldr	r3, [pc, #120]	; (80008dc <__sfp+0x84>)
 8000862:	681e      	ldr	r6, [r3, #0]
 8000864:	69b3      	ldr	r3, [r6, #24]
 8000866:	b913      	cbnz	r3, 800086e <__sfp+0x16>
 8000868:	4630      	mov	r0, r6
 800086a:	f7ff ffbd 	bl	80007e8 <__sinit>
 800086e:	3648      	adds	r6, #72	; 0x48
 8000870:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000874:	3b01      	subs	r3, #1
 8000876:	d503      	bpl.n	8000880 <__sfp+0x28>
 8000878:	6833      	ldr	r3, [r6, #0]
 800087a:	b30b      	cbz	r3, 80008c0 <__sfp+0x68>
 800087c:	6836      	ldr	r6, [r6, #0]
 800087e:	e7f7      	b.n	8000870 <__sfp+0x18>
 8000880:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000884:	b9d5      	cbnz	r5, 80008bc <__sfp+0x64>
 8000886:	4b16      	ldr	r3, [pc, #88]	; (80008e0 <__sfp+0x88>)
 8000888:	60e3      	str	r3, [r4, #12]
 800088a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800088e:	6665      	str	r5, [r4, #100]	; 0x64
 8000890:	f000 f86c 	bl	800096c <__retarget_lock_init_recursive>
 8000894:	f7ff ff96 	bl	80007c4 <__sfp_lock_release>
 8000898:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800089c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80008a0:	6025      	str	r5, [r4, #0]
 80008a2:	61a5      	str	r5, [r4, #24]
 80008a4:	2208      	movs	r2, #8
 80008a6:	4629      	mov	r1, r5
 80008a8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80008ac:	f000 f861 	bl	8000972 <memset>
 80008b0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80008b4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80008b8:	4620      	mov	r0, r4
 80008ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008bc:	3468      	adds	r4, #104	; 0x68
 80008be:	e7d9      	b.n	8000874 <__sfp+0x1c>
 80008c0:	2104      	movs	r1, #4
 80008c2:	4638      	mov	r0, r7
 80008c4:	f7ff ff62 	bl	800078c <__sfmoreglue>
 80008c8:	4604      	mov	r4, r0
 80008ca:	6030      	str	r0, [r6, #0]
 80008cc:	2800      	cmp	r0, #0
 80008ce:	d1d5      	bne.n	800087c <__sfp+0x24>
 80008d0:	f7ff ff78 	bl	80007c4 <__sfp_lock_release>
 80008d4:	230c      	movs	r3, #12
 80008d6:	603b      	str	r3, [r7, #0]
 80008d8:	e7ee      	b.n	80008b8 <__sfp+0x60>
 80008da:	bf00      	nop
 80008dc:	080016bc 	.word	0x080016bc
 80008e0:	ffff0001 	.word	0xffff0001

080008e4 <_fwalk_reent>:
 80008e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008e8:	4606      	mov	r6, r0
 80008ea:	4688      	mov	r8, r1
 80008ec:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80008f0:	2700      	movs	r7, #0
 80008f2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80008f6:	f1b9 0901 	subs.w	r9, r9, #1
 80008fa:	d505      	bpl.n	8000908 <_fwalk_reent+0x24>
 80008fc:	6824      	ldr	r4, [r4, #0]
 80008fe:	2c00      	cmp	r4, #0
 8000900:	d1f7      	bne.n	80008f2 <_fwalk_reent+0xe>
 8000902:	4638      	mov	r0, r7
 8000904:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000908:	89ab      	ldrh	r3, [r5, #12]
 800090a:	2b01      	cmp	r3, #1
 800090c:	d907      	bls.n	800091e <_fwalk_reent+0x3a>
 800090e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000912:	3301      	adds	r3, #1
 8000914:	d003      	beq.n	800091e <_fwalk_reent+0x3a>
 8000916:	4629      	mov	r1, r5
 8000918:	4630      	mov	r0, r6
 800091a:	47c0      	blx	r8
 800091c:	4307      	orrs	r7, r0
 800091e:	3568      	adds	r5, #104	; 0x68
 8000920:	e7e9      	b.n	80008f6 <_fwalk_reent+0x12>
	...

08000924 <__libc_init_array>:
 8000924:	b570      	push	{r4, r5, r6, lr}
 8000926:	4d0d      	ldr	r5, [pc, #52]	; (800095c <__libc_init_array+0x38>)
 8000928:	4c0d      	ldr	r4, [pc, #52]	; (8000960 <__libc_init_array+0x3c>)
 800092a:	1b64      	subs	r4, r4, r5
 800092c:	10a4      	asrs	r4, r4, #2
 800092e:	2600      	movs	r6, #0
 8000930:	42a6      	cmp	r6, r4
 8000932:	d109      	bne.n	8000948 <__libc_init_array+0x24>
 8000934:	4d0b      	ldr	r5, [pc, #44]	; (8000964 <__libc_init_array+0x40>)
 8000936:	4c0c      	ldr	r4, [pc, #48]	; (8000968 <__libc_init_array+0x44>)
 8000938:	f000 fe6e 	bl	8001618 <_init>
 800093c:	1b64      	subs	r4, r4, r5
 800093e:	10a4      	asrs	r4, r4, #2
 8000940:	2600      	movs	r6, #0
 8000942:	42a6      	cmp	r6, r4
 8000944:	d105      	bne.n	8000952 <__libc_init_array+0x2e>
 8000946:	bd70      	pop	{r4, r5, r6, pc}
 8000948:	f855 3b04 	ldr.w	r3, [r5], #4
 800094c:	4798      	blx	r3
 800094e:	3601      	adds	r6, #1
 8000950:	e7ee      	b.n	8000930 <__libc_init_array+0xc>
 8000952:	f855 3b04 	ldr.w	r3, [r5], #4
 8000956:	4798      	blx	r3
 8000958:	3601      	adds	r6, #1
 800095a:	e7f2      	b.n	8000942 <__libc_init_array+0x1e>
 800095c:	080016f4 	.word	0x080016f4
 8000960:	080016f4 	.word	0x080016f4
 8000964:	080016f4 	.word	0x080016f4
 8000968:	080016f8 	.word	0x080016f8

0800096c <__retarget_lock_init_recursive>:
 800096c:	4770      	bx	lr

0800096e <__retarget_lock_acquire_recursive>:
 800096e:	4770      	bx	lr

08000970 <__retarget_lock_release_recursive>:
 8000970:	4770      	bx	lr

08000972 <memset>:
 8000972:	4402      	add	r2, r0
 8000974:	4603      	mov	r3, r0
 8000976:	4293      	cmp	r3, r2
 8000978:	d100      	bne.n	800097c <memset+0xa>
 800097a:	4770      	bx	lr
 800097c:	f803 1b01 	strb.w	r1, [r3], #1
 8000980:	e7f9      	b.n	8000976 <memset+0x4>
	...

08000984 <_free_r>:
 8000984:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000986:	2900      	cmp	r1, #0
 8000988:	d044      	beq.n	8000a14 <_free_r+0x90>
 800098a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800098e:	9001      	str	r0, [sp, #4]
 8000990:	2b00      	cmp	r3, #0
 8000992:	f1a1 0404 	sub.w	r4, r1, #4
 8000996:	bfb8      	it	lt
 8000998:	18e4      	addlt	r4, r4, r3
 800099a:	f000 fb0f 	bl	8000fbc <__malloc_lock>
 800099e:	4a1e      	ldr	r2, [pc, #120]	; (8000a18 <_free_r+0x94>)
 80009a0:	9801      	ldr	r0, [sp, #4]
 80009a2:	6813      	ldr	r3, [r2, #0]
 80009a4:	b933      	cbnz	r3, 80009b4 <_free_r+0x30>
 80009a6:	6063      	str	r3, [r4, #4]
 80009a8:	6014      	str	r4, [r2, #0]
 80009aa:	b003      	add	sp, #12
 80009ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80009b0:	f000 bb0a 	b.w	8000fc8 <__malloc_unlock>
 80009b4:	42a3      	cmp	r3, r4
 80009b6:	d908      	bls.n	80009ca <_free_r+0x46>
 80009b8:	6825      	ldr	r5, [r4, #0]
 80009ba:	1961      	adds	r1, r4, r5
 80009bc:	428b      	cmp	r3, r1
 80009be:	bf01      	itttt	eq
 80009c0:	6819      	ldreq	r1, [r3, #0]
 80009c2:	685b      	ldreq	r3, [r3, #4]
 80009c4:	1949      	addeq	r1, r1, r5
 80009c6:	6021      	streq	r1, [r4, #0]
 80009c8:	e7ed      	b.n	80009a6 <_free_r+0x22>
 80009ca:	461a      	mov	r2, r3
 80009cc:	685b      	ldr	r3, [r3, #4]
 80009ce:	b10b      	cbz	r3, 80009d4 <_free_r+0x50>
 80009d0:	42a3      	cmp	r3, r4
 80009d2:	d9fa      	bls.n	80009ca <_free_r+0x46>
 80009d4:	6811      	ldr	r1, [r2, #0]
 80009d6:	1855      	adds	r5, r2, r1
 80009d8:	42a5      	cmp	r5, r4
 80009da:	d10b      	bne.n	80009f4 <_free_r+0x70>
 80009dc:	6824      	ldr	r4, [r4, #0]
 80009de:	4421      	add	r1, r4
 80009e0:	1854      	adds	r4, r2, r1
 80009e2:	42a3      	cmp	r3, r4
 80009e4:	6011      	str	r1, [r2, #0]
 80009e6:	d1e0      	bne.n	80009aa <_free_r+0x26>
 80009e8:	681c      	ldr	r4, [r3, #0]
 80009ea:	685b      	ldr	r3, [r3, #4]
 80009ec:	6053      	str	r3, [r2, #4]
 80009ee:	4421      	add	r1, r4
 80009f0:	6011      	str	r1, [r2, #0]
 80009f2:	e7da      	b.n	80009aa <_free_r+0x26>
 80009f4:	d902      	bls.n	80009fc <_free_r+0x78>
 80009f6:	230c      	movs	r3, #12
 80009f8:	6003      	str	r3, [r0, #0]
 80009fa:	e7d6      	b.n	80009aa <_free_r+0x26>
 80009fc:	6825      	ldr	r5, [r4, #0]
 80009fe:	1961      	adds	r1, r4, r5
 8000a00:	428b      	cmp	r3, r1
 8000a02:	bf04      	itt	eq
 8000a04:	6819      	ldreq	r1, [r3, #0]
 8000a06:	685b      	ldreq	r3, [r3, #4]
 8000a08:	6063      	str	r3, [r4, #4]
 8000a0a:	bf04      	itt	eq
 8000a0c:	1949      	addeq	r1, r1, r5
 8000a0e:	6021      	streq	r1, [r4, #0]
 8000a10:	6054      	str	r4, [r2, #4]
 8000a12:	e7ca      	b.n	80009aa <_free_r+0x26>
 8000a14:	b003      	add	sp, #12
 8000a16:	bd30      	pop	{r4, r5, pc}
 8000a18:	200000a8 	.word	0x200000a8

08000a1c <sbrk_aligned>:
 8000a1c:	b570      	push	{r4, r5, r6, lr}
 8000a1e:	4e0e      	ldr	r6, [pc, #56]	; (8000a58 <sbrk_aligned+0x3c>)
 8000a20:	460c      	mov	r4, r1
 8000a22:	6831      	ldr	r1, [r6, #0]
 8000a24:	4605      	mov	r5, r0
 8000a26:	b911      	cbnz	r1, 8000a2e <sbrk_aligned+0x12>
 8000a28:	f000 f91a 	bl	8000c60 <_sbrk_r>
 8000a2c:	6030      	str	r0, [r6, #0]
 8000a2e:	4621      	mov	r1, r4
 8000a30:	4628      	mov	r0, r5
 8000a32:	f000 f915 	bl	8000c60 <_sbrk_r>
 8000a36:	1c43      	adds	r3, r0, #1
 8000a38:	d00a      	beq.n	8000a50 <sbrk_aligned+0x34>
 8000a3a:	1cc4      	adds	r4, r0, #3
 8000a3c:	f024 0403 	bic.w	r4, r4, #3
 8000a40:	42a0      	cmp	r0, r4
 8000a42:	d007      	beq.n	8000a54 <sbrk_aligned+0x38>
 8000a44:	1a21      	subs	r1, r4, r0
 8000a46:	4628      	mov	r0, r5
 8000a48:	f000 f90a 	bl	8000c60 <_sbrk_r>
 8000a4c:	3001      	adds	r0, #1
 8000a4e:	d101      	bne.n	8000a54 <sbrk_aligned+0x38>
 8000a50:	f04f 34ff 	mov.w	r4, #4294967295
 8000a54:	4620      	mov	r0, r4
 8000a56:	bd70      	pop	{r4, r5, r6, pc}
 8000a58:	200000ac 	.word	0x200000ac

08000a5c <_malloc_r>:
 8000a5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a60:	1ccd      	adds	r5, r1, #3
 8000a62:	f025 0503 	bic.w	r5, r5, #3
 8000a66:	3508      	adds	r5, #8
 8000a68:	2d0c      	cmp	r5, #12
 8000a6a:	bf38      	it	cc
 8000a6c:	250c      	movcc	r5, #12
 8000a6e:	2d00      	cmp	r5, #0
 8000a70:	4607      	mov	r7, r0
 8000a72:	db01      	blt.n	8000a78 <_malloc_r+0x1c>
 8000a74:	42a9      	cmp	r1, r5
 8000a76:	d905      	bls.n	8000a84 <_malloc_r+0x28>
 8000a78:	230c      	movs	r3, #12
 8000a7a:	603b      	str	r3, [r7, #0]
 8000a7c:	2600      	movs	r6, #0
 8000a7e:	4630      	mov	r0, r6
 8000a80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a84:	4e2e      	ldr	r6, [pc, #184]	; (8000b40 <_malloc_r+0xe4>)
 8000a86:	f000 fa99 	bl	8000fbc <__malloc_lock>
 8000a8a:	6833      	ldr	r3, [r6, #0]
 8000a8c:	461c      	mov	r4, r3
 8000a8e:	bb34      	cbnz	r4, 8000ade <_malloc_r+0x82>
 8000a90:	4629      	mov	r1, r5
 8000a92:	4638      	mov	r0, r7
 8000a94:	f7ff ffc2 	bl	8000a1c <sbrk_aligned>
 8000a98:	1c43      	adds	r3, r0, #1
 8000a9a:	4604      	mov	r4, r0
 8000a9c:	d14d      	bne.n	8000b3a <_malloc_r+0xde>
 8000a9e:	6834      	ldr	r4, [r6, #0]
 8000aa0:	4626      	mov	r6, r4
 8000aa2:	2e00      	cmp	r6, #0
 8000aa4:	d140      	bne.n	8000b28 <_malloc_r+0xcc>
 8000aa6:	6823      	ldr	r3, [r4, #0]
 8000aa8:	4631      	mov	r1, r6
 8000aaa:	4638      	mov	r0, r7
 8000aac:	eb04 0803 	add.w	r8, r4, r3
 8000ab0:	f000 f8d6 	bl	8000c60 <_sbrk_r>
 8000ab4:	4580      	cmp	r8, r0
 8000ab6:	d13a      	bne.n	8000b2e <_malloc_r+0xd2>
 8000ab8:	6821      	ldr	r1, [r4, #0]
 8000aba:	3503      	adds	r5, #3
 8000abc:	1a6d      	subs	r5, r5, r1
 8000abe:	f025 0503 	bic.w	r5, r5, #3
 8000ac2:	3508      	adds	r5, #8
 8000ac4:	2d0c      	cmp	r5, #12
 8000ac6:	bf38      	it	cc
 8000ac8:	250c      	movcc	r5, #12
 8000aca:	4629      	mov	r1, r5
 8000acc:	4638      	mov	r0, r7
 8000ace:	f7ff ffa5 	bl	8000a1c <sbrk_aligned>
 8000ad2:	3001      	adds	r0, #1
 8000ad4:	d02b      	beq.n	8000b2e <_malloc_r+0xd2>
 8000ad6:	6823      	ldr	r3, [r4, #0]
 8000ad8:	442b      	add	r3, r5
 8000ada:	6023      	str	r3, [r4, #0]
 8000adc:	e00e      	b.n	8000afc <_malloc_r+0xa0>
 8000ade:	6822      	ldr	r2, [r4, #0]
 8000ae0:	1b52      	subs	r2, r2, r5
 8000ae2:	d41e      	bmi.n	8000b22 <_malloc_r+0xc6>
 8000ae4:	2a0b      	cmp	r2, #11
 8000ae6:	d916      	bls.n	8000b16 <_malloc_r+0xba>
 8000ae8:	1961      	adds	r1, r4, r5
 8000aea:	42a3      	cmp	r3, r4
 8000aec:	6025      	str	r5, [r4, #0]
 8000aee:	bf18      	it	ne
 8000af0:	6059      	strne	r1, [r3, #4]
 8000af2:	6863      	ldr	r3, [r4, #4]
 8000af4:	bf08      	it	eq
 8000af6:	6031      	streq	r1, [r6, #0]
 8000af8:	5162      	str	r2, [r4, r5]
 8000afa:	604b      	str	r3, [r1, #4]
 8000afc:	4638      	mov	r0, r7
 8000afe:	f104 060b 	add.w	r6, r4, #11
 8000b02:	f000 fa61 	bl	8000fc8 <__malloc_unlock>
 8000b06:	f026 0607 	bic.w	r6, r6, #7
 8000b0a:	1d23      	adds	r3, r4, #4
 8000b0c:	1af2      	subs	r2, r6, r3
 8000b0e:	d0b6      	beq.n	8000a7e <_malloc_r+0x22>
 8000b10:	1b9b      	subs	r3, r3, r6
 8000b12:	50a3      	str	r3, [r4, r2]
 8000b14:	e7b3      	b.n	8000a7e <_malloc_r+0x22>
 8000b16:	6862      	ldr	r2, [r4, #4]
 8000b18:	42a3      	cmp	r3, r4
 8000b1a:	bf0c      	ite	eq
 8000b1c:	6032      	streq	r2, [r6, #0]
 8000b1e:	605a      	strne	r2, [r3, #4]
 8000b20:	e7ec      	b.n	8000afc <_malloc_r+0xa0>
 8000b22:	4623      	mov	r3, r4
 8000b24:	6864      	ldr	r4, [r4, #4]
 8000b26:	e7b2      	b.n	8000a8e <_malloc_r+0x32>
 8000b28:	4634      	mov	r4, r6
 8000b2a:	6876      	ldr	r6, [r6, #4]
 8000b2c:	e7b9      	b.n	8000aa2 <_malloc_r+0x46>
 8000b2e:	230c      	movs	r3, #12
 8000b30:	603b      	str	r3, [r7, #0]
 8000b32:	4638      	mov	r0, r7
 8000b34:	f000 fa48 	bl	8000fc8 <__malloc_unlock>
 8000b38:	e7a1      	b.n	8000a7e <_malloc_r+0x22>
 8000b3a:	6025      	str	r5, [r4, #0]
 8000b3c:	e7de      	b.n	8000afc <_malloc_r+0xa0>
 8000b3e:	bf00      	nop
 8000b40:	200000a8 	.word	0x200000a8

08000b44 <iprintf>:
 8000b44:	b40f      	push	{r0, r1, r2, r3}
 8000b46:	4b0a      	ldr	r3, [pc, #40]	; (8000b70 <iprintf+0x2c>)
 8000b48:	b513      	push	{r0, r1, r4, lr}
 8000b4a:	681c      	ldr	r4, [r3, #0]
 8000b4c:	b124      	cbz	r4, 8000b58 <iprintf+0x14>
 8000b4e:	69a3      	ldr	r3, [r4, #24]
 8000b50:	b913      	cbnz	r3, 8000b58 <iprintf+0x14>
 8000b52:	4620      	mov	r0, r4
 8000b54:	f7ff fe48 	bl	80007e8 <__sinit>
 8000b58:	ab05      	add	r3, sp, #20
 8000b5a:	9a04      	ldr	r2, [sp, #16]
 8000b5c:	68a1      	ldr	r1, [r4, #8]
 8000b5e:	9301      	str	r3, [sp, #4]
 8000b60:	4620      	mov	r0, r4
 8000b62:	f000 fa61 	bl	8001028 <_vfiprintf_r>
 8000b66:	b002      	add	sp, #8
 8000b68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b6c:	b004      	add	sp, #16
 8000b6e:	4770      	bx	lr
 8000b70:	2000001c 	.word	0x2000001c

08000b74 <_puts_r>:
 8000b74:	b570      	push	{r4, r5, r6, lr}
 8000b76:	460e      	mov	r6, r1
 8000b78:	4605      	mov	r5, r0
 8000b7a:	b118      	cbz	r0, 8000b84 <_puts_r+0x10>
 8000b7c:	6983      	ldr	r3, [r0, #24]
 8000b7e:	b90b      	cbnz	r3, 8000b84 <_puts_r+0x10>
 8000b80:	f7ff fe32 	bl	80007e8 <__sinit>
 8000b84:	69ab      	ldr	r3, [r5, #24]
 8000b86:	68ac      	ldr	r4, [r5, #8]
 8000b88:	b913      	cbnz	r3, 8000b90 <_puts_r+0x1c>
 8000b8a:	4628      	mov	r0, r5
 8000b8c:	f7ff fe2c 	bl	80007e8 <__sinit>
 8000b90:	4b2c      	ldr	r3, [pc, #176]	; (8000c44 <_puts_r+0xd0>)
 8000b92:	429c      	cmp	r4, r3
 8000b94:	d120      	bne.n	8000bd8 <_puts_r+0x64>
 8000b96:	686c      	ldr	r4, [r5, #4]
 8000b98:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b9a:	07db      	lsls	r3, r3, #31
 8000b9c:	d405      	bmi.n	8000baa <_puts_r+0x36>
 8000b9e:	89a3      	ldrh	r3, [r4, #12]
 8000ba0:	0598      	lsls	r0, r3, #22
 8000ba2:	d402      	bmi.n	8000baa <_puts_r+0x36>
 8000ba4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000ba6:	f7ff fee2 	bl	800096e <__retarget_lock_acquire_recursive>
 8000baa:	89a3      	ldrh	r3, [r4, #12]
 8000bac:	0719      	lsls	r1, r3, #28
 8000bae:	d51d      	bpl.n	8000bec <_puts_r+0x78>
 8000bb0:	6923      	ldr	r3, [r4, #16]
 8000bb2:	b1db      	cbz	r3, 8000bec <_puts_r+0x78>
 8000bb4:	3e01      	subs	r6, #1
 8000bb6:	68a3      	ldr	r3, [r4, #8]
 8000bb8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000bbc:	3b01      	subs	r3, #1
 8000bbe:	60a3      	str	r3, [r4, #8]
 8000bc0:	bb39      	cbnz	r1, 8000c12 <_puts_r+0x9e>
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	da38      	bge.n	8000c38 <_puts_r+0xc4>
 8000bc6:	4622      	mov	r2, r4
 8000bc8:	210a      	movs	r1, #10
 8000bca:	4628      	mov	r0, r5
 8000bcc:	f000 f89c 	bl	8000d08 <__swbuf_r>
 8000bd0:	3001      	adds	r0, #1
 8000bd2:	d011      	beq.n	8000bf8 <_puts_r+0x84>
 8000bd4:	250a      	movs	r5, #10
 8000bd6:	e011      	b.n	8000bfc <_puts_r+0x88>
 8000bd8:	4b1b      	ldr	r3, [pc, #108]	; (8000c48 <_puts_r+0xd4>)
 8000bda:	429c      	cmp	r4, r3
 8000bdc:	d101      	bne.n	8000be2 <_puts_r+0x6e>
 8000bde:	68ac      	ldr	r4, [r5, #8]
 8000be0:	e7da      	b.n	8000b98 <_puts_r+0x24>
 8000be2:	4b1a      	ldr	r3, [pc, #104]	; (8000c4c <_puts_r+0xd8>)
 8000be4:	429c      	cmp	r4, r3
 8000be6:	bf08      	it	eq
 8000be8:	68ec      	ldreq	r4, [r5, #12]
 8000bea:	e7d5      	b.n	8000b98 <_puts_r+0x24>
 8000bec:	4621      	mov	r1, r4
 8000bee:	4628      	mov	r0, r5
 8000bf0:	f000 f8ee 	bl	8000dd0 <__swsetup_r>
 8000bf4:	2800      	cmp	r0, #0
 8000bf6:	d0dd      	beq.n	8000bb4 <_puts_r+0x40>
 8000bf8:	f04f 35ff 	mov.w	r5, #4294967295
 8000bfc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000bfe:	07da      	lsls	r2, r3, #31
 8000c00:	d405      	bmi.n	8000c0e <_puts_r+0x9a>
 8000c02:	89a3      	ldrh	r3, [r4, #12]
 8000c04:	059b      	lsls	r3, r3, #22
 8000c06:	d402      	bmi.n	8000c0e <_puts_r+0x9a>
 8000c08:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000c0a:	f7ff feb1 	bl	8000970 <__retarget_lock_release_recursive>
 8000c0e:	4628      	mov	r0, r5
 8000c10:	bd70      	pop	{r4, r5, r6, pc}
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	da04      	bge.n	8000c20 <_puts_r+0xac>
 8000c16:	69a2      	ldr	r2, [r4, #24]
 8000c18:	429a      	cmp	r2, r3
 8000c1a:	dc06      	bgt.n	8000c2a <_puts_r+0xb6>
 8000c1c:	290a      	cmp	r1, #10
 8000c1e:	d004      	beq.n	8000c2a <_puts_r+0xb6>
 8000c20:	6823      	ldr	r3, [r4, #0]
 8000c22:	1c5a      	adds	r2, r3, #1
 8000c24:	6022      	str	r2, [r4, #0]
 8000c26:	7019      	strb	r1, [r3, #0]
 8000c28:	e7c5      	b.n	8000bb6 <_puts_r+0x42>
 8000c2a:	4622      	mov	r2, r4
 8000c2c:	4628      	mov	r0, r5
 8000c2e:	f000 f86b 	bl	8000d08 <__swbuf_r>
 8000c32:	3001      	adds	r0, #1
 8000c34:	d1bf      	bne.n	8000bb6 <_puts_r+0x42>
 8000c36:	e7df      	b.n	8000bf8 <_puts_r+0x84>
 8000c38:	6823      	ldr	r3, [r4, #0]
 8000c3a:	250a      	movs	r5, #10
 8000c3c:	1c5a      	adds	r2, r3, #1
 8000c3e:	6022      	str	r2, [r4, #0]
 8000c40:	701d      	strb	r5, [r3, #0]
 8000c42:	e7db      	b.n	8000bfc <_puts_r+0x88>
 8000c44:	0800167c 	.word	0x0800167c
 8000c48:	0800169c 	.word	0x0800169c
 8000c4c:	0800165c 	.word	0x0800165c

08000c50 <puts>:
 8000c50:	4b02      	ldr	r3, [pc, #8]	; (8000c5c <puts+0xc>)
 8000c52:	4601      	mov	r1, r0
 8000c54:	6818      	ldr	r0, [r3, #0]
 8000c56:	f7ff bf8d 	b.w	8000b74 <_puts_r>
 8000c5a:	bf00      	nop
 8000c5c:	2000001c 	.word	0x2000001c

08000c60 <_sbrk_r>:
 8000c60:	b538      	push	{r3, r4, r5, lr}
 8000c62:	4d06      	ldr	r5, [pc, #24]	; (8000c7c <_sbrk_r+0x1c>)
 8000c64:	2300      	movs	r3, #0
 8000c66:	4604      	mov	r4, r0
 8000c68:	4608      	mov	r0, r1
 8000c6a:	602b      	str	r3, [r5, #0]
 8000c6c:	f7ff fc2a 	bl	80004c4 <_sbrk>
 8000c70:	1c43      	adds	r3, r0, #1
 8000c72:	d102      	bne.n	8000c7a <_sbrk_r+0x1a>
 8000c74:	682b      	ldr	r3, [r5, #0]
 8000c76:	b103      	cbz	r3, 8000c7a <_sbrk_r+0x1a>
 8000c78:	6023      	str	r3, [r4, #0]
 8000c7a:	bd38      	pop	{r3, r4, r5, pc}
 8000c7c:	200000b0 	.word	0x200000b0

08000c80 <__sread>:
 8000c80:	b510      	push	{r4, lr}
 8000c82:	460c      	mov	r4, r1
 8000c84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c88:	f000 fc92 	bl	80015b0 <_read_r>
 8000c8c:	2800      	cmp	r0, #0
 8000c8e:	bfab      	itete	ge
 8000c90:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c92:	89a3      	ldrhlt	r3, [r4, #12]
 8000c94:	181b      	addge	r3, r3, r0
 8000c96:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c9a:	bfac      	ite	ge
 8000c9c:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c9e:	81a3      	strhlt	r3, [r4, #12]
 8000ca0:	bd10      	pop	{r4, pc}

08000ca2 <__swrite>:
 8000ca2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ca6:	461f      	mov	r7, r3
 8000ca8:	898b      	ldrh	r3, [r1, #12]
 8000caa:	05db      	lsls	r3, r3, #23
 8000cac:	4605      	mov	r5, r0
 8000cae:	460c      	mov	r4, r1
 8000cb0:	4616      	mov	r6, r2
 8000cb2:	d505      	bpl.n	8000cc0 <__swrite+0x1e>
 8000cb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cb8:	2302      	movs	r3, #2
 8000cba:	2200      	movs	r2, #0
 8000cbc:	f000 f906 	bl	8000ecc <_lseek_r>
 8000cc0:	89a3      	ldrh	r3, [r4, #12]
 8000cc2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cc6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000cca:	81a3      	strh	r3, [r4, #12]
 8000ccc:	4632      	mov	r2, r6
 8000cce:	463b      	mov	r3, r7
 8000cd0:	4628      	mov	r0, r5
 8000cd2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cd6:	f000 b869 	b.w	8000dac <_write_r>

08000cda <__sseek>:
 8000cda:	b510      	push	{r4, lr}
 8000cdc:	460c      	mov	r4, r1
 8000cde:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ce2:	f000 f8f3 	bl	8000ecc <_lseek_r>
 8000ce6:	1c43      	adds	r3, r0, #1
 8000ce8:	89a3      	ldrh	r3, [r4, #12]
 8000cea:	bf15      	itete	ne
 8000cec:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cf2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cf6:	81a3      	strheq	r3, [r4, #12]
 8000cf8:	bf18      	it	ne
 8000cfa:	81a3      	strhne	r3, [r4, #12]
 8000cfc:	bd10      	pop	{r4, pc}

08000cfe <__sclose>:
 8000cfe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d02:	f000 b8d3 	b.w	8000eac <_close_r>
	...

08000d08 <__swbuf_r>:
 8000d08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d0a:	460e      	mov	r6, r1
 8000d0c:	4614      	mov	r4, r2
 8000d0e:	4605      	mov	r5, r0
 8000d10:	b118      	cbz	r0, 8000d1a <__swbuf_r+0x12>
 8000d12:	6983      	ldr	r3, [r0, #24]
 8000d14:	b90b      	cbnz	r3, 8000d1a <__swbuf_r+0x12>
 8000d16:	f7ff fd67 	bl	80007e8 <__sinit>
 8000d1a:	4b21      	ldr	r3, [pc, #132]	; (8000da0 <__swbuf_r+0x98>)
 8000d1c:	429c      	cmp	r4, r3
 8000d1e:	d12b      	bne.n	8000d78 <__swbuf_r+0x70>
 8000d20:	686c      	ldr	r4, [r5, #4]
 8000d22:	69a3      	ldr	r3, [r4, #24]
 8000d24:	60a3      	str	r3, [r4, #8]
 8000d26:	89a3      	ldrh	r3, [r4, #12]
 8000d28:	071a      	lsls	r2, r3, #28
 8000d2a:	d52f      	bpl.n	8000d8c <__swbuf_r+0x84>
 8000d2c:	6923      	ldr	r3, [r4, #16]
 8000d2e:	b36b      	cbz	r3, 8000d8c <__swbuf_r+0x84>
 8000d30:	6923      	ldr	r3, [r4, #16]
 8000d32:	6820      	ldr	r0, [r4, #0]
 8000d34:	1ac0      	subs	r0, r0, r3
 8000d36:	6963      	ldr	r3, [r4, #20]
 8000d38:	b2f6      	uxtb	r6, r6
 8000d3a:	4283      	cmp	r3, r0
 8000d3c:	4637      	mov	r7, r6
 8000d3e:	dc04      	bgt.n	8000d4a <__swbuf_r+0x42>
 8000d40:	4621      	mov	r1, r4
 8000d42:	4628      	mov	r0, r5
 8000d44:	f7ff fcaa 	bl	800069c <_fflush_r>
 8000d48:	bb30      	cbnz	r0, 8000d98 <__swbuf_r+0x90>
 8000d4a:	68a3      	ldr	r3, [r4, #8]
 8000d4c:	3b01      	subs	r3, #1
 8000d4e:	60a3      	str	r3, [r4, #8]
 8000d50:	6823      	ldr	r3, [r4, #0]
 8000d52:	1c5a      	adds	r2, r3, #1
 8000d54:	6022      	str	r2, [r4, #0]
 8000d56:	701e      	strb	r6, [r3, #0]
 8000d58:	6963      	ldr	r3, [r4, #20]
 8000d5a:	3001      	adds	r0, #1
 8000d5c:	4283      	cmp	r3, r0
 8000d5e:	d004      	beq.n	8000d6a <__swbuf_r+0x62>
 8000d60:	89a3      	ldrh	r3, [r4, #12]
 8000d62:	07db      	lsls	r3, r3, #31
 8000d64:	d506      	bpl.n	8000d74 <__swbuf_r+0x6c>
 8000d66:	2e0a      	cmp	r6, #10
 8000d68:	d104      	bne.n	8000d74 <__swbuf_r+0x6c>
 8000d6a:	4621      	mov	r1, r4
 8000d6c:	4628      	mov	r0, r5
 8000d6e:	f7ff fc95 	bl	800069c <_fflush_r>
 8000d72:	b988      	cbnz	r0, 8000d98 <__swbuf_r+0x90>
 8000d74:	4638      	mov	r0, r7
 8000d76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d78:	4b0a      	ldr	r3, [pc, #40]	; (8000da4 <__swbuf_r+0x9c>)
 8000d7a:	429c      	cmp	r4, r3
 8000d7c:	d101      	bne.n	8000d82 <__swbuf_r+0x7a>
 8000d7e:	68ac      	ldr	r4, [r5, #8]
 8000d80:	e7cf      	b.n	8000d22 <__swbuf_r+0x1a>
 8000d82:	4b09      	ldr	r3, [pc, #36]	; (8000da8 <__swbuf_r+0xa0>)
 8000d84:	429c      	cmp	r4, r3
 8000d86:	bf08      	it	eq
 8000d88:	68ec      	ldreq	r4, [r5, #12]
 8000d8a:	e7ca      	b.n	8000d22 <__swbuf_r+0x1a>
 8000d8c:	4621      	mov	r1, r4
 8000d8e:	4628      	mov	r0, r5
 8000d90:	f000 f81e 	bl	8000dd0 <__swsetup_r>
 8000d94:	2800      	cmp	r0, #0
 8000d96:	d0cb      	beq.n	8000d30 <__swbuf_r+0x28>
 8000d98:	f04f 37ff 	mov.w	r7, #4294967295
 8000d9c:	e7ea      	b.n	8000d74 <__swbuf_r+0x6c>
 8000d9e:	bf00      	nop
 8000da0:	0800167c 	.word	0x0800167c
 8000da4:	0800169c 	.word	0x0800169c
 8000da8:	0800165c 	.word	0x0800165c

08000dac <_write_r>:
 8000dac:	b538      	push	{r3, r4, r5, lr}
 8000dae:	4d07      	ldr	r5, [pc, #28]	; (8000dcc <_write_r+0x20>)
 8000db0:	4604      	mov	r4, r0
 8000db2:	4608      	mov	r0, r1
 8000db4:	4611      	mov	r1, r2
 8000db6:	2200      	movs	r2, #0
 8000db8:	602a      	str	r2, [r5, #0]
 8000dba:	461a      	mov	r2, r3
 8000dbc:	f7ff fb31 	bl	8000422 <_write>
 8000dc0:	1c43      	adds	r3, r0, #1
 8000dc2:	d102      	bne.n	8000dca <_write_r+0x1e>
 8000dc4:	682b      	ldr	r3, [r5, #0]
 8000dc6:	b103      	cbz	r3, 8000dca <_write_r+0x1e>
 8000dc8:	6023      	str	r3, [r4, #0]
 8000dca:	bd38      	pop	{r3, r4, r5, pc}
 8000dcc:	200000b0 	.word	0x200000b0

08000dd0 <__swsetup_r>:
 8000dd0:	4b32      	ldr	r3, [pc, #200]	; (8000e9c <__swsetup_r+0xcc>)
 8000dd2:	b570      	push	{r4, r5, r6, lr}
 8000dd4:	681d      	ldr	r5, [r3, #0]
 8000dd6:	4606      	mov	r6, r0
 8000dd8:	460c      	mov	r4, r1
 8000dda:	b125      	cbz	r5, 8000de6 <__swsetup_r+0x16>
 8000ddc:	69ab      	ldr	r3, [r5, #24]
 8000dde:	b913      	cbnz	r3, 8000de6 <__swsetup_r+0x16>
 8000de0:	4628      	mov	r0, r5
 8000de2:	f7ff fd01 	bl	80007e8 <__sinit>
 8000de6:	4b2e      	ldr	r3, [pc, #184]	; (8000ea0 <__swsetup_r+0xd0>)
 8000de8:	429c      	cmp	r4, r3
 8000dea:	d10f      	bne.n	8000e0c <__swsetup_r+0x3c>
 8000dec:	686c      	ldr	r4, [r5, #4]
 8000dee:	89a3      	ldrh	r3, [r4, #12]
 8000df0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000df4:	0719      	lsls	r1, r3, #28
 8000df6:	d42c      	bmi.n	8000e52 <__swsetup_r+0x82>
 8000df8:	06dd      	lsls	r5, r3, #27
 8000dfa:	d411      	bmi.n	8000e20 <__swsetup_r+0x50>
 8000dfc:	2309      	movs	r3, #9
 8000dfe:	6033      	str	r3, [r6, #0]
 8000e00:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000e04:	81a3      	strh	r3, [r4, #12]
 8000e06:	f04f 30ff 	mov.w	r0, #4294967295
 8000e0a:	e03e      	b.n	8000e8a <__swsetup_r+0xba>
 8000e0c:	4b25      	ldr	r3, [pc, #148]	; (8000ea4 <__swsetup_r+0xd4>)
 8000e0e:	429c      	cmp	r4, r3
 8000e10:	d101      	bne.n	8000e16 <__swsetup_r+0x46>
 8000e12:	68ac      	ldr	r4, [r5, #8]
 8000e14:	e7eb      	b.n	8000dee <__swsetup_r+0x1e>
 8000e16:	4b24      	ldr	r3, [pc, #144]	; (8000ea8 <__swsetup_r+0xd8>)
 8000e18:	429c      	cmp	r4, r3
 8000e1a:	bf08      	it	eq
 8000e1c:	68ec      	ldreq	r4, [r5, #12]
 8000e1e:	e7e6      	b.n	8000dee <__swsetup_r+0x1e>
 8000e20:	0758      	lsls	r0, r3, #29
 8000e22:	d512      	bpl.n	8000e4a <__swsetup_r+0x7a>
 8000e24:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e26:	b141      	cbz	r1, 8000e3a <__swsetup_r+0x6a>
 8000e28:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e2c:	4299      	cmp	r1, r3
 8000e2e:	d002      	beq.n	8000e36 <__swsetup_r+0x66>
 8000e30:	4630      	mov	r0, r6
 8000e32:	f7ff fda7 	bl	8000984 <_free_r>
 8000e36:	2300      	movs	r3, #0
 8000e38:	6363      	str	r3, [r4, #52]	; 0x34
 8000e3a:	89a3      	ldrh	r3, [r4, #12]
 8000e3c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000e40:	81a3      	strh	r3, [r4, #12]
 8000e42:	2300      	movs	r3, #0
 8000e44:	6063      	str	r3, [r4, #4]
 8000e46:	6923      	ldr	r3, [r4, #16]
 8000e48:	6023      	str	r3, [r4, #0]
 8000e4a:	89a3      	ldrh	r3, [r4, #12]
 8000e4c:	f043 0308 	orr.w	r3, r3, #8
 8000e50:	81a3      	strh	r3, [r4, #12]
 8000e52:	6923      	ldr	r3, [r4, #16]
 8000e54:	b94b      	cbnz	r3, 8000e6a <__swsetup_r+0x9a>
 8000e56:	89a3      	ldrh	r3, [r4, #12]
 8000e58:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000e5c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000e60:	d003      	beq.n	8000e6a <__swsetup_r+0x9a>
 8000e62:	4621      	mov	r1, r4
 8000e64:	4630      	mov	r0, r6
 8000e66:	f000 f869 	bl	8000f3c <__smakebuf_r>
 8000e6a:	89a0      	ldrh	r0, [r4, #12]
 8000e6c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e70:	f010 0301 	ands.w	r3, r0, #1
 8000e74:	d00a      	beq.n	8000e8c <__swsetup_r+0xbc>
 8000e76:	2300      	movs	r3, #0
 8000e78:	60a3      	str	r3, [r4, #8]
 8000e7a:	6963      	ldr	r3, [r4, #20]
 8000e7c:	425b      	negs	r3, r3
 8000e7e:	61a3      	str	r3, [r4, #24]
 8000e80:	6923      	ldr	r3, [r4, #16]
 8000e82:	b943      	cbnz	r3, 8000e96 <__swsetup_r+0xc6>
 8000e84:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e88:	d1ba      	bne.n	8000e00 <__swsetup_r+0x30>
 8000e8a:	bd70      	pop	{r4, r5, r6, pc}
 8000e8c:	0781      	lsls	r1, r0, #30
 8000e8e:	bf58      	it	pl
 8000e90:	6963      	ldrpl	r3, [r4, #20]
 8000e92:	60a3      	str	r3, [r4, #8]
 8000e94:	e7f4      	b.n	8000e80 <__swsetup_r+0xb0>
 8000e96:	2000      	movs	r0, #0
 8000e98:	e7f7      	b.n	8000e8a <__swsetup_r+0xba>
 8000e9a:	bf00      	nop
 8000e9c:	2000001c 	.word	0x2000001c
 8000ea0:	0800167c 	.word	0x0800167c
 8000ea4:	0800169c 	.word	0x0800169c
 8000ea8:	0800165c 	.word	0x0800165c

08000eac <_close_r>:
 8000eac:	b538      	push	{r3, r4, r5, lr}
 8000eae:	4d06      	ldr	r5, [pc, #24]	; (8000ec8 <_close_r+0x1c>)
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	4604      	mov	r4, r0
 8000eb4:	4608      	mov	r0, r1
 8000eb6:	602b      	str	r3, [r5, #0]
 8000eb8:	f7ff facf 	bl	800045a <_close>
 8000ebc:	1c43      	adds	r3, r0, #1
 8000ebe:	d102      	bne.n	8000ec6 <_close_r+0x1a>
 8000ec0:	682b      	ldr	r3, [r5, #0]
 8000ec2:	b103      	cbz	r3, 8000ec6 <_close_r+0x1a>
 8000ec4:	6023      	str	r3, [r4, #0]
 8000ec6:	bd38      	pop	{r3, r4, r5, pc}
 8000ec8:	200000b0 	.word	0x200000b0

08000ecc <_lseek_r>:
 8000ecc:	b538      	push	{r3, r4, r5, lr}
 8000ece:	4d07      	ldr	r5, [pc, #28]	; (8000eec <_lseek_r+0x20>)
 8000ed0:	4604      	mov	r4, r0
 8000ed2:	4608      	mov	r0, r1
 8000ed4:	4611      	mov	r1, r2
 8000ed6:	2200      	movs	r2, #0
 8000ed8:	602a      	str	r2, [r5, #0]
 8000eda:	461a      	mov	r2, r3
 8000edc:	f7ff fae4 	bl	80004a8 <_lseek>
 8000ee0:	1c43      	adds	r3, r0, #1
 8000ee2:	d102      	bne.n	8000eea <_lseek_r+0x1e>
 8000ee4:	682b      	ldr	r3, [r5, #0]
 8000ee6:	b103      	cbz	r3, 8000eea <_lseek_r+0x1e>
 8000ee8:	6023      	str	r3, [r4, #0]
 8000eea:	bd38      	pop	{r3, r4, r5, pc}
 8000eec:	200000b0 	.word	0x200000b0

08000ef0 <__swhatbuf_r>:
 8000ef0:	b570      	push	{r4, r5, r6, lr}
 8000ef2:	460e      	mov	r6, r1
 8000ef4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ef8:	2900      	cmp	r1, #0
 8000efa:	b096      	sub	sp, #88	; 0x58
 8000efc:	4614      	mov	r4, r2
 8000efe:	461d      	mov	r5, r3
 8000f00:	da08      	bge.n	8000f14 <__swhatbuf_r+0x24>
 8000f02:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000f06:	2200      	movs	r2, #0
 8000f08:	602a      	str	r2, [r5, #0]
 8000f0a:	061a      	lsls	r2, r3, #24
 8000f0c:	d410      	bmi.n	8000f30 <__swhatbuf_r+0x40>
 8000f0e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000f12:	e00e      	b.n	8000f32 <__swhatbuf_r+0x42>
 8000f14:	466a      	mov	r2, sp
 8000f16:	f000 fb5d 	bl	80015d4 <_fstat_r>
 8000f1a:	2800      	cmp	r0, #0
 8000f1c:	dbf1      	blt.n	8000f02 <__swhatbuf_r+0x12>
 8000f1e:	9a01      	ldr	r2, [sp, #4]
 8000f20:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000f24:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000f28:	425a      	negs	r2, r3
 8000f2a:	415a      	adcs	r2, r3
 8000f2c:	602a      	str	r2, [r5, #0]
 8000f2e:	e7ee      	b.n	8000f0e <__swhatbuf_r+0x1e>
 8000f30:	2340      	movs	r3, #64	; 0x40
 8000f32:	2000      	movs	r0, #0
 8000f34:	6023      	str	r3, [r4, #0]
 8000f36:	b016      	add	sp, #88	; 0x58
 8000f38:	bd70      	pop	{r4, r5, r6, pc}
	...

08000f3c <__smakebuf_r>:
 8000f3c:	898b      	ldrh	r3, [r1, #12]
 8000f3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000f40:	079d      	lsls	r5, r3, #30
 8000f42:	4606      	mov	r6, r0
 8000f44:	460c      	mov	r4, r1
 8000f46:	d507      	bpl.n	8000f58 <__smakebuf_r+0x1c>
 8000f48:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000f4c:	6023      	str	r3, [r4, #0]
 8000f4e:	6123      	str	r3, [r4, #16]
 8000f50:	2301      	movs	r3, #1
 8000f52:	6163      	str	r3, [r4, #20]
 8000f54:	b002      	add	sp, #8
 8000f56:	bd70      	pop	{r4, r5, r6, pc}
 8000f58:	ab01      	add	r3, sp, #4
 8000f5a:	466a      	mov	r2, sp
 8000f5c:	f7ff ffc8 	bl	8000ef0 <__swhatbuf_r>
 8000f60:	9900      	ldr	r1, [sp, #0]
 8000f62:	4605      	mov	r5, r0
 8000f64:	4630      	mov	r0, r6
 8000f66:	f7ff fd79 	bl	8000a5c <_malloc_r>
 8000f6a:	b948      	cbnz	r0, 8000f80 <__smakebuf_r+0x44>
 8000f6c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f70:	059a      	lsls	r2, r3, #22
 8000f72:	d4ef      	bmi.n	8000f54 <__smakebuf_r+0x18>
 8000f74:	f023 0303 	bic.w	r3, r3, #3
 8000f78:	f043 0302 	orr.w	r3, r3, #2
 8000f7c:	81a3      	strh	r3, [r4, #12]
 8000f7e:	e7e3      	b.n	8000f48 <__smakebuf_r+0xc>
 8000f80:	4b0d      	ldr	r3, [pc, #52]	; (8000fb8 <__smakebuf_r+0x7c>)
 8000f82:	62b3      	str	r3, [r6, #40]	; 0x28
 8000f84:	89a3      	ldrh	r3, [r4, #12]
 8000f86:	6020      	str	r0, [r4, #0]
 8000f88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f8c:	81a3      	strh	r3, [r4, #12]
 8000f8e:	9b00      	ldr	r3, [sp, #0]
 8000f90:	6163      	str	r3, [r4, #20]
 8000f92:	9b01      	ldr	r3, [sp, #4]
 8000f94:	6120      	str	r0, [r4, #16]
 8000f96:	b15b      	cbz	r3, 8000fb0 <__smakebuf_r+0x74>
 8000f98:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f9c:	4630      	mov	r0, r6
 8000f9e:	f000 fb2b 	bl	80015f8 <_isatty_r>
 8000fa2:	b128      	cbz	r0, 8000fb0 <__smakebuf_r+0x74>
 8000fa4:	89a3      	ldrh	r3, [r4, #12]
 8000fa6:	f023 0303 	bic.w	r3, r3, #3
 8000faa:	f043 0301 	orr.w	r3, r3, #1
 8000fae:	81a3      	strh	r3, [r4, #12]
 8000fb0:	89a0      	ldrh	r0, [r4, #12]
 8000fb2:	4305      	orrs	r5, r0
 8000fb4:	81a5      	strh	r5, [r4, #12]
 8000fb6:	e7cd      	b.n	8000f54 <__smakebuf_r+0x18>
 8000fb8:	08000781 	.word	0x08000781

08000fbc <__malloc_lock>:
 8000fbc:	4801      	ldr	r0, [pc, #4]	; (8000fc4 <__malloc_lock+0x8>)
 8000fbe:	f7ff bcd6 	b.w	800096e <__retarget_lock_acquire_recursive>
 8000fc2:	bf00      	nop
 8000fc4:	200000a4 	.word	0x200000a4

08000fc8 <__malloc_unlock>:
 8000fc8:	4801      	ldr	r0, [pc, #4]	; (8000fd0 <__malloc_unlock+0x8>)
 8000fca:	f7ff bcd1 	b.w	8000970 <__retarget_lock_release_recursive>
 8000fce:	bf00      	nop
 8000fd0:	200000a4 	.word	0x200000a4

08000fd4 <__sfputc_r>:
 8000fd4:	6893      	ldr	r3, [r2, #8]
 8000fd6:	3b01      	subs	r3, #1
 8000fd8:	2b00      	cmp	r3, #0
 8000fda:	b410      	push	{r4}
 8000fdc:	6093      	str	r3, [r2, #8]
 8000fde:	da08      	bge.n	8000ff2 <__sfputc_r+0x1e>
 8000fe0:	6994      	ldr	r4, [r2, #24]
 8000fe2:	42a3      	cmp	r3, r4
 8000fe4:	db01      	blt.n	8000fea <__sfputc_r+0x16>
 8000fe6:	290a      	cmp	r1, #10
 8000fe8:	d103      	bne.n	8000ff2 <__sfputc_r+0x1e>
 8000fea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000fee:	f7ff be8b 	b.w	8000d08 <__swbuf_r>
 8000ff2:	6813      	ldr	r3, [r2, #0]
 8000ff4:	1c58      	adds	r0, r3, #1
 8000ff6:	6010      	str	r0, [r2, #0]
 8000ff8:	7019      	strb	r1, [r3, #0]
 8000ffa:	4608      	mov	r0, r1
 8000ffc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001000:	4770      	bx	lr

08001002 <__sfputs_r>:
 8001002:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001004:	4606      	mov	r6, r0
 8001006:	460f      	mov	r7, r1
 8001008:	4614      	mov	r4, r2
 800100a:	18d5      	adds	r5, r2, r3
 800100c:	42ac      	cmp	r4, r5
 800100e:	d101      	bne.n	8001014 <__sfputs_r+0x12>
 8001010:	2000      	movs	r0, #0
 8001012:	e007      	b.n	8001024 <__sfputs_r+0x22>
 8001014:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001018:	463a      	mov	r2, r7
 800101a:	4630      	mov	r0, r6
 800101c:	f7ff ffda 	bl	8000fd4 <__sfputc_r>
 8001020:	1c43      	adds	r3, r0, #1
 8001022:	d1f3      	bne.n	800100c <__sfputs_r+0xa>
 8001024:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001028 <_vfiprintf_r>:
 8001028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800102c:	460d      	mov	r5, r1
 800102e:	b09d      	sub	sp, #116	; 0x74
 8001030:	4614      	mov	r4, r2
 8001032:	4698      	mov	r8, r3
 8001034:	4606      	mov	r6, r0
 8001036:	b118      	cbz	r0, 8001040 <_vfiprintf_r+0x18>
 8001038:	6983      	ldr	r3, [r0, #24]
 800103a:	b90b      	cbnz	r3, 8001040 <_vfiprintf_r+0x18>
 800103c:	f7ff fbd4 	bl	80007e8 <__sinit>
 8001040:	4b89      	ldr	r3, [pc, #548]	; (8001268 <_vfiprintf_r+0x240>)
 8001042:	429d      	cmp	r5, r3
 8001044:	d11b      	bne.n	800107e <_vfiprintf_r+0x56>
 8001046:	6875      	ldr	r5, [r6, #4]
 8001048:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800104a:	07d9      	lsls	r1, r3, #31
 800104c:	d405      	bmi.n	800105a <_vfiprintf_r+0x32>
 800104e:	89ab      	ldrh	r3, [r5, #12]
 8001050:	059a      	lsls	r2, r3, #22
 8001052:	d402      	bmi.n	800105a <_vfiprintf_r+0x32>
 8001054:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001056:	f7ff fc8a 	bl	800096e <__retarget_lock_acquire_recursive>
 800105a:	89ab      	ldrh	r3, [r5, #12]
 800105c:	071b      	lsls	r3, r3, #28
 800105e:	d501      	bpl.n	8001064 <_vfiprintf_r+0x3c>
 8001060:	692b      	ldr	r3, [r5, #16]
 8001062:	b9eb      	cbnz	r3, 80010a0 <_vfiprintf_r+0x78>
 8001064:	4629      	mov	r1, r5
 8001066:	4630      	mov	r0, r6
 8001068:	f7ff feb2 	bl	8000dd0 <__swsetup_r>
 800106c:	b1c0      	cbz	r0, 80010a0 <_vfiprintf_r+0x78>
 800106e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001070:	07dc      	lsls	r4, r3, #31
 8001072:	d50e      	bpl.n	8001092 <_vfiprintf_r+0x6a>
 8001074:	f04f 30ff 	mov.w	r0, #4294967295
 8001078:	b01d      	add	sp, #116	; 0x74
 800107a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800107e:	4b7b      	ldr	r3, [pc, #492]	; (800126c <_vfiprintf_r+0x244>)
 8001080:	429d      	cmp	r5, r3
 8001082:	d101      	bne.n	8001088 <_vfiprintf_r+0x60>
 8001084:	68b5      	ldr	r5, [r6, #8]
 8001086:	e7df      	b.n	8001048 <_vfiprintf_r+0x20>
 8001088:	4b79      	ldr	r3, [pc, #484]	; (8001270 <_vfiprintf_r+0x248>)
 800108a:	429d      	cmp	r5, r3
 800108c:	bf08      	it	eq
 800108e:	68f5      	ldreq	r5, [r6, #12]
 8001090:	e7da      	b.n	8001048 <_vfiprintf_r+0x20>
 8001092:	89ab      	ldrh	r3, [r5, #12]
 8001094:	0598      	lsls	r0, r3, #22
 8001096:	d4ed      	bmi.n	8001074 <_vfiprintf_r+0x4c>
 8001098:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800109a:	f7ff fc69 	bl	8000970 <__retarget_lock_release_recursive>
 800109e:	e7e9      	b.n	8001074 <_vfiprintf_r+0x4c>
 80010a0:	2300      	movs	r3, #0
 80010a2:	9309      	str	r3, [sp, #36]	; 0x24
 80010a4:	2320      	movs	r3, #32
 80010a6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80010aa:	f8cd 800c 	str.w	r8, [sp, #12]
 80010ae:	2330      	movs	r3, #48	; 0x30
 80010b0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001274 <_vfiprintf_r+0x24c>
 80010b4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80010b8:	f04f 0901 	mov.w	r9, #1
 80010bc:	4623      	mov	r3, r4
 80010be:	469a      	mov	sl, r3
 80010c0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80010c4:	b10a      	cbz	r2, 80010ca <_vfiprintf_r+0xa2>
 80010c6:	2a25      	cmp	r2, #37	; 0x25
 80010c8:	d1f9      	bne.n	80010be <_vfiprintf_r+0x96>
 80010ca:	ebba 0b04 	subs.w	fp, sl, r4
 80010ce:	d00b      	beq.n	80010e8 <_vfiprintf_r+0xc0>
 80010d0:	465b      	mov	r3, fp
 80010d2:	4622      	mov	r2, r4
 80010d4:	4629      	mov	r1, r5
 80010d6:	4630      	mov	r0, r6
 80010d8:	f7ff ff93 	bl	8001002 <__sfputs_r>
 80010dc:	3001      	adds	r0, #1
 80010de:	f000 80aa 	beq.w	8001236 <_vfiprintf_r+0x20e>
 80010e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80010e4:	445a      	add	r2, fp
 80010e6:	9209      	str	r2, [sp, #36]	; 0x24
 80010e8:	f89a 3000 	ldrb.w	r3, [sl]
 80010ec:	2b00      	cmp	r3, #0
 80010ee:	f000 80a2 	beq.w	8001236 <_vfiprintf_r+0x20e>
 80010f2:	2300      	movs	r3, #0
 80010f4:	f04f 32ff 	mov.w	r2, #4294967295
 80010f8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80010fc:	f10a 0a01 	add.w	sl, sl, #1
 8001100:	9304      	str	r3, [sp, #16]
 8001102:	9307      	str	r3, [sp, #28]
 8001104:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001108:	931a      	str	r3, [sp, #104]	; 0x68
 800110a:	4654      	mov	r4, sl
 800110c:	2205      	movs	r2, #5
 800110e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001112:	4858      	ldr	r0, [pc, #352]	; (8001274 <_vfiprintf_r+0x24c>)
 8001114:	f7ff f864 	bl	80001e0 <memchr>
 8001118:	9a04      	ldr	r2, [sp, #16]
 800111a:	b9d8      	cbnz	r0, 8001154 <_vfiprintf_r+0x12c>
 800111c:	06d1      	lsls	r1, r2, #27
 800111e:	bf44      	itt	mi
 8001120:	2320      	movmi	r3, #32
 8001122:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001126:	0713      	lsls	r3, r2, #28
 8001128:	bf44      	itt	mi
 800112a:	232b      	movmi	r3, #43	; 0x2b
 800112c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001130:	f89a 3000 	ldrb.w	r3, [sl]
 8001134:	2b2a      	cmp	r3, #42	; 0x2a
 8001136:	d015      	beq.n	8001164 <_vfiprintf_r+0x13c>
 8001138:	9a07      	ldr	r2, [sp, #28]
 800113a:	4654      	mov	r4, sl
 800113c:	2000      	movs	r0, #0
 800113e:	f04f 0c0a 	mov.w	ip, #10
 8001142:	4621      	mov	r1, r4
 8001144:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001148:	3b30      	subs	r3, #48	; 0x30
 800114a:	2b09      	cmp	r3, #9
 800114c:	d94e      	bls.n	80011ec <_vfiprintf_r+0x1c4>
 800114e:	b1b0      	cbz	r0, 800117e <_vfiprintf_r+0x156>
 8001150:	9207      	str	r2, [sp, #28]
 8001152:	e014      	b.n	800117e <_vfiprintf_r+0x156>
 8001154:	eba0 0308 	sub.w	r3, r0, r8
 8001158:	fa09 f303 	lsl.w	r3, r9, r3
 800115c:	4313      	orrs	r3, r2
 800115e:	9304      	str	r3, [sp, #16]
 8001160:	46a2      	mov	sl, r4
 8001162:	e7d2      	b.n	800110a <_vfiprintf_r+0xe2>
 8001164:	9b03      	ldr	r3, [sp, #12]
 8001166:	1d19      	adds	r1, r3, #4
 8001168:	681b      	ldr	r3, [r3, #0]
 800116a:	9103      	str	r1, [sp, #12]
 800116c:	2b00      	cmp	r3, #0
 800116e:	bfbb      	ittet	lt
 8001170:	425b      	neglt	r3, r3
 8001172:	f042 0202 	orrlt.w	r2, r2, #2
 8001176:	9307      	strge	r3, [sp, #28]
 8001178:	9307      	strlt	r3, [sp, #28]
 800117a:	bfb8      	it	lt
 800117c:	9204      	strlt	r2, [sp, #16]
 800117e:	7823      	ldrb	r3, [r4, #0]
 8001180:	2b2e      	cmp	r3, #46	; 0x2e
 8001182:	d10c      	bne.n	800119e <_vfiprintf_r+0x176>
 8001184:	7863      	ldrb	r3, [r4, #1]
 8001186:	2b2a      	cmp	r3, #42	; 0x2a
 8001188:	d135      	bne.n	80011f6 <_vfiprintf_r+0x1ce>
 800118a:	9b03      	ldr	r3, [sp, #12]
 800118c:	1d1a      	adds	r2, r3, #4
 800118e:	681b      	ldr	r3, [r3, #0]
 8001190:	9203      	str	r2, [sp, #12]
 8001192:	2b00      	cmp	r3, #0
 8001194:	bfb8      	it	lt
 8001196:	f04f 33ff 	movlt.w	r3, #4294967295
 800119a:	3402      	adds	r4, #2
 800119c:	9305      	str	r3, [sp, #20]
 800119e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001284 <_vfiprintf_r+0x25c>
 80011a2:	7821      	ldrb	r1, [r4, #0]
 80011a4:	2203      	movs	r2, #3
 80011a6:	4650      	mov	r0, sl
 80011a8:	f7ff f81a 	bl	80001e0 <memchr>
 80011ac:	b140      	cbz	r0, 80011c0 <_vfiprintf_r+0x198>
 80011ae:	2340      	movs	r3, #64	; 0x40
 80011b0:	eba0 000a 	sub.w	r0, r0, sl
 80011b4:	fa03 f000 	lsl.w	r0, r3, r0
 80011b8:	9b04      	ldr	r3, [sp, #16]
 80011ba:	4303      	orrs	r3, r0
 80011bc:	3401      	adds	r4, #1
 80011be:	9304      	str	r3, [sp, #16]
 80011c0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80011c4:	482c      	ldr	r0, [pc, #176]	; (8001278 <_vfiprintf_r+0x250>)
 80011c6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80011ca:	2206      	movs	r2, #6
 80011cc:	f7ff f808 	bl	80001e0 <memchr>
 80011d0:	2800      	cmp	r0, #0
 80011d2:	d03f      	beq.n	8001254 <_vfiprintf_r+0x22c>
 80011d4:	4b29      	ldr	r3, [pc, #164]	; (800127c <_vfiprintf_r+0x254>)
 80011d6:	bb1b      	cbnz	r3, 8001220 <_vfiprintf_r+0x1f8>
 80011d8:	9b03      	ldr	r3, [sp, #12]
 80011da:	3307      	adds	r3, #7
 80011dc:	f023 0307 	bic.w	r3, r3, #7
 80011e0:	3308      	adds	r3, #8
 80011e2:	9303      	str	r3, [sp, #12]
 80011e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80011e6:	443b      	add	r3, r7
 80011e8:	9309      	str	r3, [sp, #36]	; 0x24
 80011ea:	e767      	b.n	80010bc <_vfiprintf_r+0x94>
 80011ec:	fb0c 3202 	mla	r2, ip, r2, r3
 80011f0:	460c      	mov	r4, r1
 80011f2:	2001      	movs	r0, #1
 80011f4:	e7a5      	b.n	8001142 <_vfiprintf_r+0x11a>
 80011f6:	2300      	movs	r3, #0
 80011f8:	3401      	adds	r4, #1
 80011fa:	9305      	str	r3, [sp, #20]
 80011fc:	4619      	mov	r1, r3
 80011fe:	f04f 0c0a 	mov.w	ip, #10
 8001202:	4620      	mov	r0, r4
 8001204:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001208:	3a30      	subs	r2, #48	; 0x30
 800120a:	2a09      	cmp	r2, #9
 800120c:	d903      	bls.n	8001216 <_vfiprintf_r+0x1ee>
 800120e:	2b00      	cmp	r3, #0
 8001210:	d0c5      	beq.n	800119e <_vfiprintf_r+0x176>
 8001212:	9105      	str	r1, [sp, #20]
 8001214:	e7c3      	b.n	800119e <_vfiprintf_r+0x176>
 8001216:	fb0c 2101 	mla	r1, ip, r1, r2
 800121a:	4604      	mov	r4, r0
 800121c:	2301      	movs	r3, #1
 800121e:	e7f0      	b.n	8001202 <_vfiprintf_r+0x1da>
 8001220:	ab03      	add	r3, sp, #12
 8001222:	9300      	str	r3, [sp, #0]
 8001224:	462a      	mov	r2, r5
 8001226:	4b16      	ldr	r3, [pc, #88]	; (8001280 <_vfiprintf_r+0x258>)
 8001228:	a904      	add	r1, sp, #16
 800122a:	4630      	mov	r0, r6
 800122c:	f3af 8000 	nop.w
 8001230:	4607      	mov	r7, r0
 8001232:	1c78      	adds	r0, r7, #1
 8001234:	d1d6      	bne.n	80011e4 <_vfiprintf_r+0x1bc>
 8001236:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001238:	07d9      	lsls	r1, r3, #31
 800123a:	d405      	bmi.n	8001248 <_vfiprintf_r+0x220>
 800123c:	89ab      	ldrh	r3, [r5, #12]
 800123e:	059a      	lsls	r2, r3, #22
 8001240:	d402      	bmi.n	8001248 <_vfiprintf_r+0x220>
 8001242:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001244:	f7ff fb94 	bl	8000970 <__retarget_lock_release_recursive>
 8001248:	89ab      	ldrh	r3, [r5, #12]
 800124a:	065b      	lsls	r3, r3, #25
 800124c:	f53f af12 	bmi.w	8001074 <_vfiprintf_r+0x4c>
 8001250:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001252:	e711      	b.n	8001078 <_vfiprintf_r+0x50>
 8001254:	ab03      	add	r3, sp, #12
 8001256:	9300      	str	r3, [sp, #0]
 8001258:	462a      	mov	r2, r5
 800125a:	4b09      	ldr	r3, [pc, #36]	; (8001280 <_vfiprintf_r+0x258>)
 800125c:	a904      	add	r1, sp, #16
 800125e:	4630      	mov	r0, r6
 8001260:	f000 f880 	bl	8001364 <_printf_i>
 8001264:	e7e4      	b.n	8001230 <_vfiprintf_r+0x208>
 8001266:	bf00      	nop
 8001268:	0800167c 	.word	0x0800167c
 800126c:	0800169c 	.word	0x0800169c
 8001270:	0800165c 	.word	0x0800165c
 8001274:	080016c0 	.word	0x080016c0
 8001278:	080016ca 	.word	0x080016ca
 800127c:	00000000 	.word	0x00000000
 8001280:	08001003 	.word	0x08001003
 8001284:	080016c6 	.word	0x080016c6

08001288 <_printf_common>:
 8001288:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800128c:	4616      	mov	r6, r2
 800128e:	4699      	mov	r9, r3
 8001290:	688a      	ldr	r2, [r1, #8]
 8001292:	690b      	ldr	r3, [r1, #16]
 8001294:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001298:	4293      	cmp	r3, r2
 800129a:	bfb8      	it	lt
 800129c:	4613      	movlt	r3, r2
 800129e:	6033      	str	r3, [r6, #0]
 80012a0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80012a4:	4607      	mov	r7, r0
 80012a6:	460c      	mov	r4, r1
 80012a8:	b10a      	cbz	r2, 80012ae <_printf_common+0x26>
 80012aa:	3301      	adds	r3, #1
 80012ac:	6033      	str	r3, [r6, #0]
 80012ae:	6823      	ldr	r3, [r4, #0]
 80012b0:	0699      	lsls	r1, r3, #26
 80012b2:	bf42      	ittt	mi
 80012b4:	6833      	ldrmi	r3, [r6, #0]
 80012b6:	3302      	addmi	r3, #2
 80012b8:	6033      	strmi	r3, [r6, #0]
 80012ba:	6825      	ldr	r5, [r4, #0]
 80012bc:	f015 0506 	ands.w	r5, r5, #6
 80012c0:	d106      	bne.n	80012d0 <_printf_common+0x48>
 80012c2:	f104 0a19 	add.w	sl, r4, #25
 80012c6:	68e3      	ldr	r3, [r4, #12]
 80012c8:	6832      	ldr	r2, [r6, #0]
 80012ca:	1a9b      	subs	r3, r3, r2
 80012cc:	42ab      	cmp	r3, r5
 80012ce:	dc26      	bgt.n	800131e <_printf_common+0x96>
 80012d0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80012d4:	1e13      	subs	r3, r2, #0
 80012d6:	6822      	ldr	r2, [r4, #0]
 80012d8:	bf18      	it	ne
 80012da:	2301      	movne	r3, #1
 80012dc:	0692      	lsls	r2, r2, #26
 80012de:	d42b      	bmi.n	8001338 <_printf_common+0xb0>
 80012e0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80012e4:	4649      	mov	r1, r9
 80012e6:	4638      	mov	r0, r7
 80012e8:	47c0      	blx	r8
 80012ea:	3001      	adds	r0, #1
 80012ec:	d01e      	beq.n	800132c <_printf_common+0xa4>
 80012ee:	6823      	ldr	r3, [r4, #0]
 80012f0:	68e5      	ldr	r5, [r4, #12]
 80012f2:	6832      	ldr	r2, [r6, #0]
 80012f4:	f003 0306 	and.w	r3, r3, #6
 80012f8:	2b04      	cmp	r3, #4
 80012fa:	bf08      	it	eq
 80012fc:	1aad      	subeq	r5, r5, r2
 80012fe:	68a3      	ldr	r3, [r4, #8]
 8001300:	6922      	ldr	r2, [r4, #16]
 8001302:	bf0c      	ite	eq
 8001304:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001308:	2500      	movne	r5, #0
 800130a:	4293      	cmp	r3, r2
 800130c:	bfc4      	itt	gt
 800130e:	1a9b      	subgt	r3, r3, r2
 8001310:	18ed      	addgt	r5, r5, r3
 8001312:	2600      	movs	r6, #0
 8001314:	341a      	adds	r4, #26
 8001316:	42b5      	cmp	r5, r6
 8001318:	d11a      	bne.n	8001350 <_printf_common+0xc8>
 800131a:	2000      	movs	r0, #0
 800131c:	e008      	b.n	8001330 <_printf_common+0xa8>
 800131e:	2301      	movs	r3, #1
 8001320:	4652      	mov	r2, sl
 8001322:	4649      	mov	r1, r9
 8001324:	4638      	mov	r0, r7
 8001326:	47c0      	blx	r8
 8001328:	3001      	adds	r0, #1
 800132a:	d103      	bne.n	8001334 <_printf_common+0xac>
 800132c:	f04f 30ff 	mov.w	r0, #4294967295
 8001330:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001334:	3501      	adds	r5, #1
 8001336:	e7c6      	b.n	80012c6 <_printf_common+0x3e>
 8001338:	18e1      	adds	r1, r4, r3
 800133a:	1c5a      	adds	r2, r3, #1
 800133c:	2030      	movs	r0, #48	; 0x30
 800133e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001342:	4422      	add	r2, r4
 8001344:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001348:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800134c:	3302      	adds	r3, #2
 800134e:	e7c7      	b.n	80012e0 <_printf_common+0x58>
 8001350:	2301      	movs	r3, #1
 8001352:	4622      	mov	r2, r4
 8001354:	4649      	mov	r1, r9
 8001356:	4638      	mov	r0, r7
 8001358:	47c0      	blx	r8
 800135a:	3001      	adds	r0, #1
 800135c:	d0e6      	beq.n	800132c <_printf_common+0xa4>
 800135e:	3601      	adds	r6, #1
 8001360:	e7d9      	b.n	8001316 <_printf_common+0x8e>
	...

08001364 <_printf_i>:
 8001364:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001368:	7e0f      	ldrb	r7, [r1, #24]
 800136a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800136c:	2f78      	cmp	r7, #120	; 0x78
 800136e:	4691      	mov	r9, r2
 8001370:	4680      	mov	r8, r0
 8001372:	460c      	mov	r4, r1
 8001374:	469a      	mov	sl, r3
 8001376:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800137a:	d807      	bhi.n	800138c <_printf_i+0x28>
 800137c:	2f62      	cmp	r7, #98	; 0x62
 800137e:	d80a      	bhi.n	8001396 <_printf_i+0x32>
 8001380:	2f00      	cmp	r7, #0
 8001382:	f000 80d8 	beq.w	8001536 <_printf_i+0x1d2>
 8001386:	2f58      	cmp	r7, #88	; 0x58
 8001388:	f000 80a3 	beq.w	80014d2 <_printf_i+0x16e>
 800138c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001390:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001394:	e03a      	b.n	800140c <_printf_i+0xa8>
 8001396:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800139a:	2b15      	cmp	r3, #21
 800139c:	d8f6      	bhi.n	800138c <_printf_i+0x28>
 800139e:	a101      	add	r1, pc, #4	; (adr r1, 80013a4 <_printf_i+0x40>)
 80013a0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80013a4:	080013fd 	.word	0x080013fd
 80013a8:	08001411 	.word	0x08001411
 80013ac:	0800138d 	.word	0x0800138d
 80013b0:	0800138d 	.word	0x0800138d
 80013b4:	0800138d 	.word	0x0800138d
 80013b8:	0800138d 	.word	0x0800138d
 80013bc:	08001411 	.word	0x08001411
 80013c0:	0800138d 	.word	0x0800138d
 80013c4:	0800138d 	.word	0x0800138d
 80013c8:	0800138d 	.word	0x0800138d
 80013cc:	0800138d 	.word	0x0800138d
 80013d0:	0800151d 	.word	0x0800151d
 80013d4:	08001441 	.word	0x08001441
 80013d8:	080014ff 	.word	0x080014ff
 80013dc:	0800138d 	.word	0x0800138d
 80013e0:	0800138d 	.word	0x0800138d
 80013e4:	0800153f 	.word	0x0800153f
 80013e8:	0800138d 	.word	0x0800138d
 80013ec:	08001441 	.word	0x08001441
 80013f0:	0800138d 	.word	0x0800138d
 80013f4:	0800138d 	.word	0x0800138d
 80013f8:	08001507 	.word	0x08001507
 80013fc:	682b      	ldr	r3, [r5, #0]
 80013fe:	1d1a      	adds	r2, r3, #4
 8001400:	681b      	ldr	r3, [r3, #0]
 8001402:	602a      	str	r2, [r5, #0]
 8001404:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001408:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800140c:	2301      	movs	r3, #1
 800140e:	e0a3      	b.n	8001558 <_printf_i+0x1f4>
 8001410:	6820      	ldr	r0, [r4, #0]
 8001412:	6829      	ldr	r1, [r5, #0]
 8001414:	0606      	lsls	r6, r0, #24
 8001416:	f101 0304 	add.w	r3, r1, #4
 800141a:	d50a      	bpl.n	8001432 <_printf_i+0xce>
 800141c:	680e      	ldr	r6, [r1, #0]
 800141e:	602b      	str	r3, [r5, #0]
 8001420:	2e00      	cmp	r6, #0
 8001422:	da03      	bge.n	800142c <_printf_i+0xc8>
 8001424:	232d      	movs	r3, #45	; 0x2d
 8001426:	4276      	negs	r6, r6
 8001428:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800142c:	485e      	ldr	r0, [pc, #376]	; (80015a8 <_printf_i+0x244>)
 800142e:	230a      	movs	r3, #10
 8001430:	e019      	b.n	8001466 <_printf_i+0x102>
 8001432:	680e      	ldr	r6, [r1, #0]
 8001434:	602b      	str	r3, [r5, #0]
 8001436:	f010 0f40 	tst.w	r0, #64	; 0x40
 800143a:	bf18      	it	ne
 800143c:	b236      	sxthne	r6, r6
 800143e:	e7ef      	b.n	8001420 <_printf_i+0xbc>
 8001440:	682b      	ldr	r3, [r5, #0]
 8001442:	6820      	ldr	r0, [r4, #0]
 8001444:	1d19      	adds	r1, r3, #4
 8001446:	6029      	str	r1, [r5, #0]
 8001448:	0601      	lsls	r1, r0, #24
 800144a:	d501      	bpl.n	8001450 <_printf_i+0xec>
 800144c:	681e      	ldr	r6, [r3, #0]
 800144e:	e002      	b.n	8001456 <_printf_i+0xf2>
 8001450:	0646      	lsls	r6, r0, #25
 8001452:	d5fb      	bpl.n	800144c <_printf_i+0xe8>
 8001454:	881e      	ldrh	r6, [r3, #0]
 8001456:	4854      	ldr	r0, [pc, #336]	; (80015a8 <_printf_i+0x244>)
 8001458:	2f6f      	cmp	r7, #111	; 0x6f
 800145a:	bf0c      	ite	eq
 800145c:	2308      	moveq	r3, #8
 800145e:	230a      	movne	r3, #10
 8001460:	2100      	movs	r1, #0
 8001462:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001466:	6865      	ldr	r5, [r4, #4]
 8001468:	60a5      	str	r5, [r4, #8]
 800146a:	2d00      	cmp	r5, #0
 800146c:	bfa2      	ittt	ge
 800146e:	6821      	ldrge	r1, [r4, #0]
 8001470:	f021 0104 	bicge.w	r1, r1, #4
 8001474:	6021      	strge	r1, [r4, #0]
 8001476:	b90e      	cbnz	r6, 800147c <_printf_i+0x118>
 8001478:	2d00      	cmp	r5, #0
 800147a:	d04d      	beq.n	8001518 <_printf_i+0x1b4>
 800147c:	4615      	mov	r5, r2
 800147e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001482:	fb03 6711 	mls	r7, r3, r1, r6
 8001486:	5dc7      	ldrb	r7, [r0, r7]
 8001488:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800148c:	4637      	mov	r7, r6
 800148e:	42bb      	cmp	r3, r7
 8001490:	460e      	mov	r6, r1
 8001492:	d9f4      	bls.n	800147e <_printf_i+0x11a>
 8001494:	2b08      	cmp	r3, #8
 8001496:	d10b      	bne.n	80014b0 <_printf_i+0x14c>
 8001498:	6823      	ldr	r3, [r4, #0]
 800149a:	07de      	lsls	r6, r3, #31
 800149c:	d508      	bpl.n	80014b0 <_printf_i+0x14c>
 800149e:	6923      	ldr	r3, [r4, #16]
 80014a0:	6861      	ldr	r1, [r4, #4]
 80014a2:	4299      	cmp	r1, r3
 80014a4:	bfde      	ittt	le
 80014a6:	2330      	movle	r3, #48	; 0x30
 80014a8:	f805 3c01 	strble.w	r3, [r5, #-1]
 80014ac:	f105 35ff 	addle.w	r5, r5, #4294967295
 80014b0:	1b52      	subs	r2, r2, r5
 80014b2:	6122      	str	r2, [r4, #16]
 80014b4:	f8cd a000 	str.w	sl, [sp]
 80014b8:	464b      	mov	r3, r9
 80014ba:	aa03      	add	r2, sp, #12
 80014bc:	4621      	mov	r1, r4
 80014be:	4640      	mov	r0, r8
 80014c0:	f7ff fee2 	bl	8001288 <_printf_common>
 80014c4:	3001      	adds	r0, #1
 80014c6:	d14c      	bne.n	8001562 <_printf_i+0x1fe>
 80014c8:	f04f 30ff 	mov.w	r0, #4294967295
 80014cc:	b004      	add	sp, #16
 80014ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80014d2:	4835      	ldr	r0, [pc, #212]	; (80015a8 <_printf_i+0x244>)
 80014d4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80014d8:	6829      	ldr	r1, [r5, #0]
 80014da:	6823      	ldr	r3, [r4, #0]
 80014dc:	f851 6b04 	ldr.w	r6, [r1], #4
 80014e0:	6029      	str	r1, [r5, #0]
 80014e2:	061d      	lsls	r5, r3, #24
 80014e4:	d514      	bpl.n	8001510 <_printf_i+0x1ac>
 80014e6:	07df      	lsls	r7, r3, #31
 80014e8:	bf44      	itt	mi
 80014ea:	f043 0320 	orrmi.w	r3, r3, #32
 80014ee:	6023      	strmi	r3, [r4, #0]
 80014f0:	b91e      	cbnz	r6, 80014fa <_printf_i+0x196>
 80014f2:	6823      	ldr	r3, [r4, #0]
 80014f4:	f023 0320 	bic.w	r3, r3, #32
 80014f8:	6023      	str	r3, [r4, #0]
 80014fa:	2310      	movs	r3, #16
 80014fc:	e7b0      	b.n	8001460 <_printf_i+0xfc>
 80014fe:	6823      	ldr	r3, [r4, #0]
 8001500:	f043 0320 	orr.w	r3, r3, #32
 8001504:	6023      	str	r3, [r4, #0]
 8001506:	2378      	movs	r3, #120	; 0x78
 8001508:	4828      	ldr	r0, [pc, #160]	; (80015ac <_printf_i+0x248>)
 800150a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800150e:	e7e3      	b.n	80014d8 <_printf_i+0x174>
 8001510:	0659      	lsls	r1, r3, #25
 8001512:	bf48      	it	mi
 8001514:	b2b6      	uxthmi	r6, r6
 8001516:	e7e6      	b.n	80014e6 <_printf_i+0x182>
 8001518:	4615      	mov	r5, r2
 800151a:	e7bb      	b.n	8001494 <_printf_i+0x130>
 800151c:	682b      	ldr	r3, [r5, #0]
 800151e:	6826      	ldr	r6, [r4, #0]
 8001520:	6961      	ldr	r1, [r4, #20]
 8001522:	1d18      	adds	r0, r3, #4
 8001524:	6028      	str	r0, [r5, #0]
 8001526:	0635      	lsls	r5, r6, #24
 8001528:	681b      	ldr	r3, [r3, #0]
 800152a:	d501      	bpl.n	8001530 <_printf_i+0x1cc>
 800152c:	6019      	str	r1, [r3, #0]
 800152e:	e002      	b.n	8001536 <_printf_i+0x1d2>
 8001530:	0670      	lsls	r0, r6, #25
 8001532:	d5fb      	bpl.n	800152c <_printf_i+0x1c8>
 8001534:	8019      	strh	r1, [r3, #0]
 8001536:	2300      	movs	r3, #0
 8001538:	6123      	str	r3, [r4, #16]
 800153a:	4615      	mov	r5, r2
 800153c:	e7ba      	b.n	80014b4 <_printf_i+0x150>
 800153e:	682b      	ldr	r3, [r5, #0]
 8001540:	1d1a      	adds	r2, r3, #4
 8001542:	602a      	str	r2, [r5, #0]
 8001544:	681d      	ldr	r5, [r3, #0]
 8001546:	6862      	ldr	r2, [r4, #4]
 8001548:	2100      	movs	r1, #0
 800154a:	4628      	mov	r0, r5
 800154c:	f7fe fe48 	bl	80001e0 <memchr>
 8001550:	b108      	cbz	r0, 8001556 <_printf_i+0x1f2>
 8001552:	1b40      	subs	r0, r0, r5
 8001554:	6060      	str	r0, [r4, #4]
 8001556:	6863      	ldr	r3, [r4, #4]
 8001558:	6123      	str	r3, [r4, #16]
 800155a:	2300      	movs	r3, #0
 800155c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001560:	e7a8      	b.n	80014b4 <_printf_i+0x150>
 8001562:	6923      	ldr	r3, [r4, #16]
 8001564:	462a      	mov	r2, r5
 8001566:	4649      	mov	r1, r9
 8001568:	4640      	mov	r0, r8
 800156a:	47d0      	blx	sl
 800156c:	3001      	adds	r0, #1
 800156e:	d0ab      	beq.n	80014c8 <_printf_i+0x164>
 8001570:	6823      	ldr	r3, [r4, #0]
 8001572:	079b      	lsls	r3, r3, #30
 8001574:	d413      	bmi.n	800159e <_printf_i+0x23a>
 8001576:	68e0      	ldr	r0, [r4, #12]
 8001578:	9b03      	ldr	r3, [sp, #12]
 800157a:	4298      	cmp	r0, r3
 800157c:	bfb8      	it	lt
 800157e:	4618      	movlt	r0, r3
 8001580:	e7a4      	b.n	80014cc <_printf_i+0x168>
 8001582:	2301      	movs	r3, #1
 8001584:	4632      	mov	r2, r6
 8001586:	4649      	mov	r1, r9
 8001588:	4640      	mov	r0, r8
 800158a:	47d0      	blx	sl
 800158c:	3001      	adds	r0, #1
 800158e:	d09b      	beq.n	80014c8 <_printf_i+0x164>
 8001590:	3501      	adds	r5, #1
 8001592:	68e3      	ldr	r3, [r4, #12]
 8001594:	9903      	ldr	r1, [sp, #12]
 8001596:	1a5b      	subs	r3, r3, r1
 8001598:	42ab      	cmp	r3, r5
 800159a:	dcf2      	bgt.n	8001582 <_printf_i+0x21e>
 800159c:	e7eb      	b.n	8001576 <_printf_i+0x212>
 800159e:	2500      	movs	r5, #0
 80015a0:	f104 0619 	add.w	r6, r4, #25
 80015a4:	e7f5      	b.n	8001592 <_printf_i+0x22e>
 80015a6:	bf00      	nop
 80015a8:	080016d1 	.word	0x080016d1
 80015ac:	080016e2 	.word	0x080016e2

080015b0 <_read_r>:
 80015b0:	b538      	push	{r3, r4, r5, lr}
 80015b2:	4d07      	ldr	r5, [pc, #28]	; (80015d0 <_read_r+0x20>)
 80015b4:	4604      	mov	r4, r0
 80015b6:	4608      	mov	r0, r1
 80015b8:	4611      	mov	r1, r2
 80015ba:	2200      	movs	r2, #0
 80015bc:	602a      	str	r2, [r5, #0]
 80015be:	461a      	mov	r2, r3
 80015c0:	f7fe ff12 	bl	80003e8 <_read>
 80015c4:	1c43      	adds	r3, r0, #1
 80015c6:	d102      	bne.n	80015ce <_read_r+0x1e>
 80015c8:	682b      	ldr	r3, [r5, #0]
 80015ca:	b103      	cbz	r3, 80015ce <_read_r+0x1e>
 80015cc:	6023      	str	r3, [r4, #0]
 80015ce:	bd38      	pop	{r3, r4, r5, pc}
 80015d0:	200000b0 	.word	0x200000b0

080015d4 <_fstat_r>:
 80015d4:	b538      	push	{r3, r4, r5, lr}
 80015d6:	4d07      	ldr	r5, [pc, #28]	; (80015f4 <_fstat_r+0x20>)
 80015d8:	2300      	movs	r3, #0
 80015da:	4604      	mov	r4, r0
 80015dc:	4608      	mov	r0, r1
 80015de:	4611      	mov	r1, r2
 80015e0:	602b      	str	r3, [r5, #0]
 80015e2:	f7fe ff46 	bl	8000472 <_fstat>
 80015e6:	1c43      	adds	r3, r0, #1
 80015e8:	d102      	bne.n	80015f0 <_fstat_r+0x1c>
 80015ea:	682b      	ldr	r3, [r5, #0]
 80015ec:	b103      	cbz	r3, 80015f0 <_fstat_r+0x1c>
 80015ee:	6023      	str	r3, [r4, #0]
 80015f0:	bd38      	pop	{r3, r4, r5, pc}
 80015f2:	bf00      	nop
 80015f4:	200000b0 	.word	0x200000b0

080015f8 <_isatty_r>:
 80015f8:	b538      	push	{r3, r4, r5, lr}
 80015fa:	4d06      	ldr	r5, [pc, #24]	; (8001614 <_isatty_r+0x1c>)
 80015fc:	2300      	movs	r3, #0
 80015fe:	4604      	mov	r4, r0
 8001600:	4608      	mov	r0, r1
 8001602:	602b      	str	r3, [r5, #0]
 8001604:	f7fe ff45 	bl	8000492 <_isatty>
 8001608:	1c43      	adds	r3, r0, #1
 800160a:	d102      	bne.n	8001612 <_isatty_r+0x1a>
 800160c:	682b      	ldr	r3, [r5, #0]
 800160e:	b103      	cbz	r3, 8001612 <_isatty_r+0x1a>
 8001610:	6023      	str	r3, [r4, #0]
 8001612:	bd38      	pop	{r3, r4, r5, pc}
 8001614:	200000b0 	.word	0x200000b0

08001618 <_init>:
 8001618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800161a:	bf00      	nop
 800161c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800161e:	bc08      	pop	{r3}
 8001620:	469e      	mov	lr, r3
 8001622:	4770      	bx	lr

08001624 <_fini>:
 8001624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001626:	bf00      	nop
 8001628:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800162a:	bc08      	pop	{r3}
 800162c:	469e      	mov	lr, r3
 800162e:	4770      	bx	lr
